{"docstore/data": {"4baf4462-46b1-4b04-b8d0-21e59b184df0": {"__data__": {"id_": "4baf4462-46b1-4b04-b8d0-21e59b184df0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9f837790-0e07-44fc-8fa5-12375f808fa4", "node_type": "4", "metadata": {}, "hash": "d20588844686476d9e6a90fa93cdc6f781d2a74bc31eda418edb330beb4eac16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d17ad58f-dc58-439b-9464-7ae2819ace1a", "node_type": "1", "metadata": {}, "hash": "eaf6b0421acde1f987b2108e38e45d3af7b508f2f76807a0d7d699ddf0742249", "class_name": "RelatedNodeInfo"}}, "text": "Numerical precision is the very soul of science.", "start_char_idx": 0, "end_char_idx": 48, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d17ad58f-dc58-439b-9464-7ae2819ace1a": {"__data__": {"id_": "d17ad58f-dc58-439b-9464-7ae2819ace1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0b4d635-1304-4a6a-b6bd-88a7aa7db544", "node_type": "4", "metadata": {}, "hash": "eaf6b0421acde1f987b2108e38e45d3af7b508f2f76807a0d7d699ddf0742249", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4baf4462-46b1-4b04-b8d0-21e59b184df0", "node_type": "1", "metadata": {}, "hash": "d20588844686476d9e6a90fa93cdc6f781d2a74bc31eda418edb330beb4eac16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "43412ee2-7a8f-4c76-9d04-3c3ff54e5fee", "node_type": "1", "metadata": {}, "hash": "8a296aac943956dcc5a6ca54945e2cdba535155848e33d01d45c789116821e2f", "class_name": "RelatedNodeInfo"}}, "text": "3.1 Introduction Computer words are composed of bits; thus, words can be represented as binary numbers. Chapter 2 shows that integers can be represented either in decimal or binary form, but what about the other numbers that commonly occur? For example:", "start_char_idx": 0, "end_char_idx": 253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43412ee2-7a8f-4c76-9d04-3c3ff54e5fee": {"__data__": {"id_": "43412ee2-7a8f-4c76-9d04-3c3ff54e5fee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d78d308-f4ec-423e-8f7a-cf313c9cda5a", "node_type": "4", "metadata": {}, "hash": "8a296aac943956dcc5a6ca54945e2cdba535155848e33d01d45c789116821e2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d17ad58f-dc58-439b-9464-7ae2819ace1a", "node_type": "1", "metadata": {}, "hash": "eaf6b0421acde1f987b2108e38e45d3af7b508f2f76807a0d7d699ddf0742249", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "44a0ff82-aab4-4adf-b2ac-b63875a862cd", "node_type": "1", "metadata": {}, "hash": "c16e7d0a9edd830932f8fb5169402fa25e5938f8bbde31077b5720bc9146d30d", "class_name": "RelatedNodeInfo"}}, "text": "\u25a0 What about fractions and other real numbers? \u25a0 What happens if an operation creates a number bigger than can be represented? \u25a0 And underlying these questions is a mystery: How does hardware really multiply or divide numbers?", "start_char_idx": 0, "end_char_idx": 226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44a0ff82-aab4-4adf-b2ac-b63875a862cd": {"__data__": {"id_": "44a0ff82-aab4-4adf-b2ac-b63875a862cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b34a6b2f-e1eb-4d07-8a26-fa50f0a2e887", "node_type": "4", "metadata": {}, "hash": "c16e7d0a9edd830932f8fb5169402fa25e5938f8bbde31077b5720bc9146d30d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "43412ee2-7a8f-4c76-9d04-3c3ff54e5fee", "node_type": "1", "metadata": {}, "hash": "8a296aac943956dcc5a6ca54945e2cdba535155848e33d01d45c789116821e2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1eec0e0b-7f66-4bf2-82b8-716c491f9dc7", "node_type": "1", "metadata": {}, "hash": "89a51291f21e23788f7750d7ff614bc770a6c70658677ecf9a737deb18a18ad9", "class_name": "RelatedNodeInfo"}}, "text": "The goal of this chapter is to unravel these mysteries including representation of real numbers, arithmetic algorithms, hardware that follows these algorithms, and the implications of all this for instruction sets. These insights may explain quirks that you have already encountered with computers. Moreover, we show how to use this knowledge to make arithmetic-intensive programs go much faster.", "start_char_idx": 0, "end_char_idx": 396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1eec0e0b-7f66-4bf2-82b8-716c491f9dc7": {"__data__": {"id_": "1eec0e0b-7f66-4bf2-82b8-716c491f9dc7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1514030d-8142-4860-934f-fde4d81e2405", "node_type": "4", "metadata": {}, "hash": "89a51291f21e23788f7750d7ff614bc770a6c70658677ecf9a737deb18a18ad9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "44a0ff82-aab4-4adf-b2ac-b63875a862cd", "node_type": "1", "metadata": {}, "hash": "c16e7d0a9edd830932f8fb5169402fa25e5938f8bbde31077b5720bc9146d30d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92e6e707-0fa9-4218-a453-cd08c7a38467", "node_type": "1", "metadata": {}, "hash": "aef6b0315369c3cedc71d5534cfd3a29e902c6853d72a3604f1503d1fa9c27c7", "class_name": "RelatedNodeInfo"}}, "text": "Addition is just what you would expect in computers. Digits are", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "92e6e707-0fa9-4218-a453-cd08c7a38467": {"__data__": {"id_": "92e6e707-0fa9-4218-a453-cd08c7a38467", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21bcdd6a-23dd-405f-bc97-e9e38f4db7ac", "node_type": "4", "metadata": {}, "hash": "aef6b0315369c3cedc71d5534cfd3a29e902c6853d72a3604f1503d1fa9c27c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1eec0e0b-7f66-4bf2-82b8-716c491f9dc7", "node_type": "1", "metadata": {}, "hash": "89a51291f21e23788f7750d7ff614bc770a6c70658677ecf9a737deb18a18ad9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9a0b647-6122-4120-b14c-044e7f6945ca", "node_type": "1", "metadata": {}, "hash": "29036ceea66197139540a97ae645100e8fec8df112391ad37ec0d016dfcab7e6", "class_name": "RelatedNodeInfo"}}, "text": "added bit by bit from right to left, with carries passed to the next digit to the left, just as you would do by hand. Subtraction uses addition: the appropriate operand is simply negated before being added.", "start_char_idx": 0, "end_char_idx": 206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9a0b647-6122-4120-b14c-044e7f6945ca": {"__data__": {"id_": "f9a0b647-6122-4120-b14c-044e7f6945ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "46f38460-7311-4a34-bd0a-47b5333c3b44", "node_type": "4", "metadata": {}, "hash": "29036ceea66197139540a97ae645100e8fec8df112391ad37ec0d016dfcab7e6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92e6e707-0fa9-4218-a453-cd08c7a38467", "node_type": "1", "metadata": {}, "hash": "aef6b0315369c3cedc71d5534cfd3a29e902c6853d72a3604f1503d1fa9c27c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a0966056-50ae-4d40-99dc-e6d933becf54", "node_type": "1", "metadata": {}, "hash": "ffcf0d829ea45ddcf9a336a453ae5a5f8ff5af29ceb2377e44a06113e68bc62e", "class_name": "RelatedNodeInfo"}}, "text": "Example Let\u2019s try adding 6ten to 7ten in binary and then subtracting 6ten from 7ten in binary.", "start_char_idx": 0, "end_char_idx": 94, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a0966056-50ae-4d40-99dc-e6d933becf54": {"__data__": {"id_": "a0966056-50ae-4d40-99dc-e6d933becf54", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f79c7cac-7c3a-4852-b873-bf7abaff55a5", "node_type": "4", "metadata": {}, "hash": "ffcf0d829ea45ddcf9a336a453ae5a5f8ff5af29ceb2377e44a06113e68bc62e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9a0b647-6122-4120-b14c-044e7f6945ca", "node_type": "1", "metadata": {}, "hash": "29036ceea66197139540a97ae645100e8fec8df112391ad37ec0d016dfcab7e6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85dfba78-9cff-44c3-8e42-7c2766083a1e", "node_type": "1", "metadata": {}, "hash": "7b5db5d34fa5d604611bd24fc0e5af16a8730b26f97dd779e8406796e3e1a7f5", "class_name": "RelatedNodeInfo"}}, "text": "The 4 bits to the right have all the action; Figure 3.1 shows the sums and carries. The carries are shown in parentheses, with the arrows showing how they are passed.", "start_char_idx": 0, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85dfba78-9cff-44c3-8e42-7c2766083a1e": {"__data__": {"id_": "85dfba78-9cff-44c3-8e42-7c2766083a1e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d759170d-e0cf-4c60-bc59-915083b472e8", "node_type": "4", "metadata": {}, "hash": "7b5db5d34fa5d604611bd24fc0e5af16a8730b26f97dd779e8406796e3e1a7f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a0966056-50ae-4d40-99dc-e6d933becf54", "node_type": "1", "metadata": {}, "hash": "ffcf0d829ea45ddcf9a336a453ae5a5f8ff5af29ceb2377e44a06113e68bc62e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60aaf181-c600-4738-ab8b-34933f5131a4", "node_type": "1", "metadata": {}, "hash": "cbc40e28151c4b0edf510d1a8dbaa4084cd884a92c4343acf92021eec216c533", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.1 Binary addition, showing carries from right to left. The rightmost bit adds 1 to 0, resulting in the sum of this bit being 1 and the carry out from this bit being 0. Hence, the operation for the second digit to the right is 0 + 1 + 1. This generates a 0 for this sum bit and a carry out of 1. The third digit is the sum of 1 + 1 + 1, resulting in a carry out of 1 and a sum bit of 1. The fourth bit is 1 + 0 + 0, yielding a 1 sum and no carry.", "start_char_idx": 0, "end_char_idx": 454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60aaf181-c600-4738-ab8b-34933f5131a4": {"__data__": {"id_": "60aaf181-c600-4738-ab8b-34933f5131a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1553336b-957a-4938-9126-a6bf55e72c3e", "node_type": "4", "metadata": {}, "hash": "cbc40e28151c4b0edf510d1a8dbaa4084cd884a92c4343acf92021eec216c533", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85dfba78-9cff-44c3-8e42-7c2766083a1e", "node_type": "1", "metadata": {}, "hash": "7b5db5d34fa5d604611bd24fc0e5af16a8730b26f97dd779e8406796e3e1a7f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86b42913-aa8f-4827-a30b-155b69742111", "node_type": "1", "metadata": {}, "hash": "91d9f3a51e8f96f14b008edd09205a4c6b2a376922d1e863b7919de521ac0066", "class_name": "RelatedNodeInfo"}}, "text": "Answer Subtracting 6ten from 7ten can be done directly:", "start_char_idx": 0, "end_char_idx": 55, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86b42913-aa8f-4827-a30b-155b69742111": {"__data__": {"id_": "86b42913-aa8f-4827-a30b-155b69742111", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b03e529a-f887-462f-b72a-e42c4581f52b", "node_type": "4", "metadata": {}, "hash": "91d9f3a51e8f96f14b008edd09205a4c6b2a376922d1e863b7919de521ac0066", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60aaf181-c600-4738-ab8b-34933f5131a4", "node_type": "1", "metadata": {}, "hash": "cbc40e28151c4b0edf510d1a8dbaa4084cd884a92c4343acf92021eec216c533", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0f62f51-4a87-48ee-9509-6db3ba6d8671", "node_type": "1", "metadata": {}, "hash": "8aa092c682ab5ffb80681cdfded6a030c3683426c4abad8d56bec436e057e1a8", "class_name": "RelatedNodeInfo"}}, "text": "or via addition using the two\u2019s complement representation of \u22126:", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0f62f51-4a87-48ee-9509-6db3ba6d8671": {"__data__": {"id_": "f0f62f51-4a87-48ee-9509-6db3ba6d8671", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4bac8712-605b-4bb6-a145-98cee2515cdf", "node_type": "4", "metadata": {}, "hash": "8aa092c682ab5ffb80681cdfded6a030c3683426c4abad8d56bec436e057e1a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86b42913-aa8f-4827-a30b-155b69742111", "node_type": "1", "metadata": {}, "hash": "91d9f3a51e8f96f14b008edd09205a4c6b2a376922d1e863b7919de521ac0066", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "399b0c51-72d6-4810-a59c-1d1b59a89b57", "node_type": "1", "metadata": {}, "hash": "78097960779585aab1acede607ed778c4ba7169602b4897f9879935a5696d183", "class_name": "RelatedNodeInfo"}}, "text": "Recall that over\ufb02ow occurs when the result from an operation cannot be represented with the available hardware, in this case a 32- bit word. When can over\ufb02ow occur in addition? When adding operands with di\ufb00erent signs, over\ufb02ow cannot occur. The reason is the sum must be no larger than one of the operands. For example, \u221210 + 4 = \u22126. Since the operands \ufb01t in 32 bits and the sum is no larger", "start_char_idx": 0, "end_char_idx": 391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "399b0c51-72d6-4810-a59c-1d1b59a89b57": {"__data__": {"id_": "399b0c51-72d6-4810-a59c-1d1b59a89b57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d88a5f2-1543-411b-b866-d8424d6afa5f", "node_type": "4", "metadata": {}, "hash": "78097960779585aab1acede607ed778c4ba7169602b4897f9879935a5696d183", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0f62f51-4a87-48ee-9509-6db3ba6d8671", "node_type": "1", "metadata": {}, "hash": "8aa092c682ab5ffb80681cdfded6a030c3683426c4abad8d56bec436e057e1a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edac23d5-1999-4249-aebf-7f904ef874b9", "node_type": "1", "metadata": {}, "hash": "980db8880e417de893fa0b6041bd9158e9d5cf43db113515dc1fe77afbd47d45", "class_name": "RelatedNodeInfo"}}, "text": "than an operand, the sum must \ufb01t in 32 bits as well. Therefore, no over\ufb02ow can occur when adding positive and negative operands.", "start_char_idx": 0, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edac23d5-1999-4249-aebf-7f904ef874b9": {"__data__": {"id_": "edac23d5-1999-4249-aebf-7f904ef874b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49940627-84f5-44ae-92c9-a41d859a7f44", "node_type": "4", "metadata": {}, "hash": "980db8880e417de893fa0b6041bd9158e9d5cf43db113515dc1fe77afbd47d45", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "399b0c51-72d6-4810-a59c-1d1b59a89b57", "node_type": "1", "metadata": {}, "hash": "78097960779585aab1acede607ed778c4ba7169602b4897f9879935a5696d183", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edadf7aa-37ec-41d8-b8db-edd32a1bf67f", "node_type": "1", "metadata": {}, "hash": "827f80e952dd19aea93f9fb6410e35ef9c8665512581ea3380cf559a8b57caad", "class_name": "RelatedNodeInfo"}}, "text": "There are similar restrictions to the occurrence of over\ufb02ow during", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edadf7aa-37ec-41d8-b8db-edd32a1bf67f": {"__data__": {"id_": "edadf7aa-37ec-41d8-b8db-edd32a1bf67f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6400bf89-a736-42a5-b9a9-cc5a9f024abc", "node_type": "4", "metadata": {}, "hash": "827f80e952dd19aea93f9fb6410e35ef9c8665512581ea3380cf559a8b57caad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edac23d5-1999-4249-aebf-7f904ef874b9", "node_type": "1", "metadata": {}, "hash": "980db8880e417de893fa0b6041bd9158e9d5cf43db113515dc1fe77afbd47d45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9035cc73-d75f-47a9-b1db-62d36ca83a80", "node_type": "1", "metadata": {}, "hash": "9ed38a89f6376cfb8413533b9d8663a21735c3cc61ca74c735baf9252c20709c", "class_name": "RelatedNodeInfo"}}, "text": "subtract, but it\u2019s just the opposite principle: when the signs of the operands are the same, over\ufb02ow cannot occur. To see this, remember that c \u2212 a = c + (\u2212a) because we subtract by negating the second operand and then add. Therefore, when we subtract operands of the same sign we end up by adding operands of di\ufb00erent signs. From the prior paragraph, we know that over\ufb02ow cannot occur in this case either.", "start_char_idx": 0, "end_char_idx": 406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9035cc73-d75f-47a9-b1db-62d36ca83a80": {"__data__": {"id_": "9035cc73-d75f-47a9-b1db-62d36ca83a80", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01eaa419-18bc-46d5-a153-c1888a36cfe7", "node_type": "4", "metadata": {}, "hash": "9ed38a89f6376cfb8413533b9d8663a21735c3cc61ca74c735baf9252c20709c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edadf7aa-37ec-41d8-b8db-edd32a1bf67f", "node_type": "1", "metadata": {}, "hash": "827f80e952dd19aea93f9fb6410e35ef9c8665512581ea3380cf559a8b57caad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0c561569-64ea-4cdc-92a7-870318c983ad", "node_type": "1", "metadata": {}, "hash": "90ec1431586f773ff7d1ddf4717a9cbd99171a556e104963afe7134fbabe15da", "class_name": "RelatedNodeInfo"}}, "text": "Knowing when over\ufb02ow cannot occur in addition and subtraction", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0c561569-64ea-4cdc-92a7-870318c983ad": {"__data__": {"id_": "0c561569-64ea-4cdc-92a7-870318c983ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c435f901-a65d-42b0-b33a-e99f11bc7236", "node_type": "4", "metadata": {}, "hash": "90ec1431586f773ff7d1ddf4717a9cbd99171a556e104963afe7134fbabe15da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9035cc73-d75f-47a9-b1db-62d36ca83a80", "node_type": "1", "metadata": {}, "hash": "9ed38a89f6376cfb8413533b9d8663a21735c3cc61ca74c735baf9252c20709c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3281d5aa-af5c-4091-843e-3039a29af228", "node_type": "1", "metadata": {}, "hash": "42196a9fb8e92e69f592c405b80f3e5833a488c26c1f0c429de80af75e63fb42", "class_name": "RelatedNodeInfo"}}, "text": "is all well and good, but how do we detect it when it does occur? Clearly, adding or subtracting two 32-bit numbers can yield a result that needs 33 bits to be fully expressed.", "start_char_idx": 0, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3281d5aa-af5c-4091-843e-3039a29af228": {"__data__": {"id_": "3281d5aa-af5c-4091-843e-3039a29af228", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2fae31da-603e-4183-981f-df854cf0406c", "node_type": "4", "metadata": {}, "hash": "42196a9fb8e92e69f592c405b80f3e5833a488c26c1f0c429de80af75e63fb42", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c561569-64ea-4cdc-92a7-870318c983ad", "node_type": "1", "metadata": {}, "hash": "90ec1431586f773ff7d1ddf4717a9cbd99171a556e104963afe7134fbabe15da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dac34c60-781f-414e-a618-517fa049d8e5", "node_type": "1", "metadata": {}, "hash": "275246f45bea083be1a527a6b2c88daae7543e8a1d697a3ec21d3178a0710987", "class_name": "RelatedNodeInfo"}}, "text": "The lack of a 33rd bit means that when over\ufb02ow occurs, the sign bit is set with the value of the result instead of the proper sign of the result. Since we need just one extra bit, only the sign bit can be wrong. Hence, over\ufb02ow occurs when adding two positive numbers and the sum is negative, or vice versa. This spurious sum means a carry out occurred into the sign bit.", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dac34c60-781f-414e-a618-517fa049d8e5": {"__data__": {"id_": "dac34c60-781f-414e-a618-517fa049d8e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bad08cc7-4fdd-4f82-8a60-469fa255464a", "node_type": "4", "metadata": {}, "hash": "275246f45bea083be1a527a6b2c88daae7543e8a1d697a3ec21d3178a0710987", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3281d5aa-af5c-4091-843e-3039a29af228", "node_type": "1", "metadata": {}, "hash": "42196a9fb8e92e69f592c405b80f3e5833a488c26c1f0c429de80af75e63fb42", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c734333a-fbfd-47ba-ae18-cd3d02a5ee64", "node_type": "1", "metadata": {}, "hash": "221fcf521e21424c71a24812d897ab5d43c8c5d4e1873e0cda6cbf436bb5adf6", "class_name": "RelatedNodeInfo"}}, "text": "Over\ufb02ow occurs in subtraction when we subtract a negative number from a positive number and get a negative result, or when we subtract a positive number from a negative number and get a positive result. Such a ridiculous result means a borrow occurred from the sign bit. Figure 3.2 shows the combination of operations, operands, and results that indicate an over\ufb02ow.", "start_char_idx": 0, "end_char_idx": 366, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c734333a-fbfd-47ba-ae18-cd3d02a5ee64": {"__data__": {"id_": "c734333a-fbfd-47ba-ae18-cd3d02a5ee64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f5341aae-332f-4b5f-a60d-6dc93cbca1a1", "node_type": "4", "metadata": {}, "hash": "221fcf521e21424c71a24812d897ab5d43c8c5d4e1873e0cda6cbf436bb5adf6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dac34c60-781f-414e-a618-517fa049d8e5", "node_type": "1", "metadata": {}, "hash": "275246f45bea083be1a527a6b2c88daae7543e8a1d697a3ec21d3178a0710987", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2b5ded0-c5a3-4102-991d-9ef3afd1a75a", "node_type": "1", "metadata": {}, "hash": "d5e8f8e1f905aaa29af9c814dfdbd70384d4a0f3d3c9aa1a960c89ad52dca421", "class_name": "RelatedNodeInfo"}}, "text": "We have just seen how to detect over\ufb02ow for two\u2019s complement", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2b5ded0-c5a3-4102-991d-9ef3afd1a75a": {"__data__": {"id_": "c2b5ded0-c5a3-4102-991d-9ef3afd1a75a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3542a9f9-3469-4e7d-96be-1f4d3dac83e4", "node_type": "4", "metadata": {}, "hash": "d5e8f8e1f905aaa29af9c814dfdbd70384d4a0f3d3c9aa1a960c89ad52dca421", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c734333a-fbfd-47ba-ae18-cd3d02a5ee64", "node_type": "1", "metadata": {}, "hash": "221fcf521e21424c71a24812d897ab5d43c8c5d4e1873e0cda6cbf436bb5adf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed58c28a-a388-4a04-86ad-22eda62a1bb2", "node_type": "1", "metadata": {}, "hash": "dcb27f4252d59d2ce9e1cd56dadfef329817d2c12e766c22e0e9be6a6dcac8c8", "class_name": "RelatedNodeInfo"}}, "text": "numbers in a computer. What about over\ufb02ow with unsigned integers? Unsigned integers are commonly used for memory addresses where over\ufb02ows are ignored.", "start_char_idx": 0, "end_char_idx": 150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed58c28a-a388-4a04-86ad-22eda62a1bb2": {"__data__": {"id_": "ed58c28a-a388-4a04-86ad-22eda62a1bb2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0f3b3a5-8373-4c00-8a9c-5f344e7c73f6", "node_type": "4", "metadata": {}, "hash": "dcb27f4252d59d2ce9e1cd56dadfef329817d2c12e766c22e0e9be6a6dcac8c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2b5ded0-c5a3-4102-991d-9ef3afd1a75a", "node_type": "1", "metadata": {}, "hash": "d5e8f8e1f905aaa29af9c814dfdbd70384d4a0f3d3c9aa1a960c89ad52dca421", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1241d19d-6866-4e23-ae1c-8c8c3d93c94d", "node_type": "1", "metadata": {}, "hash": "f7d1a584a88cbeab28666ce10b96c007a76f53dce6ab41d6808569f669ead850", "class_name": "RelatedNodeInfo"}}, "text": "The computer designer must therefore provide a way to ignore", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1241d19d-6866-4e23-ae1c-8c8c3d93c94d": {"__data__": {"id_": "1241d19d-6866-4e23-ae1c-8c8c3d93c94d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38561f3b-8413-46c8-baa9-a73219d50969", "node_type": "4", "metadata": {}, "hash": "f7d1a584a88cbeab28666ce10b96c007a76f53dce6ab41d6808569f669ead850", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed58c28a-a388-4a04-86ad-22eda62a1bb2", "node_type": "1", "metadata": {}, "hash": "dcb27f4252d59d2ce9e1cd56dadfef329817d2c12e766c22e0e9be6a6dcac8c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b340860f-165d-4a35-b432-ab38744102cf", "node_type": "1", "metadata": {}, "hash": "81326ce427a487ef5eb4eaeca860aad11dbea81cd598120ed91868fb3be154e4", "class_name": "RelatedNodeInfo"}}, "text": "over\ufb02ow in some cases and to recognize it in others. The MIPS solution is to have two kinds of arithmetic instructions to recognize the two choices:", "start_char_idx": 0, "end_char_idx": 148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b340860f-165d-4a35-b432-ab38744102cf": {"__data__": {"id_": "b340860f-165d-4a35-b432-ab38744102cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "279dce82-2d56-437d-8886-ba7d458b79f2", "node_type": "4", "metadata": {}, "hash": "81326ce427a487ef5eb4eaeca860aad11dbea81cd598120ed91868fb3be154e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1241d19d-6866-4e23-ae1c-8c8c3d93c94d", "node_type": "1", "metadata": {}, "hash": "f7d1a584a88cbeab28666ce10b96c007a76f53dce6ab41d6808569f669ead850", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "751e4cfe-fc88-4c7d-b914-a87bf7612652", "node_type": "1", "metadata": {}, "hash": "88fa3dc64b4b3b6337b7b953b0a135b15817ea08929f09ee14fecb8120ee2b50", "class_name": "RelatedNodeInfo"}}, "text": "\u25a0 Add (add), add immediate (addi), and subtract (sub) cause exceptions on over\ufb02ow. \u25a0 Add unsigned (addu), add immediate unsigned (addiu), and subtract unsigned (subu) do not cause exceptions on over\ufb02ow.", "start_char_idx": 0, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "751e4cfe-fc88-4c7d-b914-a87bf7612652": {"__data__": {"id_": "751e4cfe-fc88-4c7d-b914-a87bf7612652", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "37ed75de-949d-4e65-8037-58cd1a5ee4e0", "node_type": "4", "metadata": {}, "hash": "88fa3dc64b4b3b6337b7b953b0a135b15817ea08929f09ee14fecb8120ee2b50", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b340860f-165d-4a35-b432-ab38744102cf", "node_type": "1", "metadata": {}, "hash": "81326ce427a487ef5eb4eaeca860aad11dbea81cd598120ed91868fb3be154e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39", "node_type": "1", "metadata": {}, "hash": "3c49985f62c7e9258bee6b3662cec26876a271776e22fcfc6c35497d5be88cd0", "class_name": "RelatedNodeInfo"}}, "text": "Because C ignores over\ufb02ows, the MIPS C compilers will always generate the unsigned versions of the arithmetic instructions addu, addiu, and subu, no ma\u0000er what the type of the variables. The MIPS Fortran compilers, however, pick the appropriate arithmetic instructions, depending on the type of the operands.", "start_char_idx": 0, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39": {"__data__": {"id_": "f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09fba88a-c052-45dd-849f-df499f17953d", "node_type": "4", "metadata": {}, "hash": "3c49985f62c7e9258bee6b3662cec26876a271776e22fcfc6c35497d5be88cd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "751e4cfe-fc88-4c7d-b914-a87bf7612652", "node_type": "1", "metadata": {}, "hash": "88fa3dc64b4b3b6337b7b953b0a135b15817ea08929f09ee14fecb8120ee2b50", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83fa51c1-b77e-49a0-a049-b9af0a806f81", "node_type": "1", "metadata": {}, "hash": "4fb4669d67b296523b07630d309f6a8507901fd09301fca12895149625ffe240", "class_name": "RelatedNodeInfo"}}, "text": "Appendix B describes the hardware that performs addition and subtraction, which is called an Arithmetic Logic Unit or ALU.", "start_char_idx": 0, "end_char_idx": 122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83fa51c1-b77e-49a0-a049-b9af0a806f81": {"__data__": {"id_": "83fa51c1-b77e-49a0-a049-b9af0a806f81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c690737-241d-47d7-b92c-1a4f11d37c30", "node_type": "4", "metadata": {}, "hash": "4fb4669d67b296523b07630d309f6a8507901fd09301fca12895149625ffe240", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39", "node_type": "1", "metadata": {}, "hash": "3c49985f62c7e9258bee6b3662cec26876a271776e22fcfc6c35497d5be88cd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51c52a78-0258-4ff9-9d5c-f977869ffe18", "node_type": "1", "metadata": {}, "hash": "6ad0104955e396326b3d3f76bcd7c3714aead166f7f3406bc923da981ffde07d", "class_name": "RelatedNodeInfo"}}, "text": "Arithmetic Logic Unit (ALU) Hardware that performs addition, subtraction, and usually logical operations such as AND and OR.", "start_char_idx": 0, "end_char_idx": 124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51c52a78-0258-4ff9-9d5c-f977869ffe18": {"__data__": {"id_": "51c52a78-0258-4ff9-9d5c-f977869ffe18", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a8804949-90a6-4b3e-bb7e-3bfa1b688a0b", "node_type": "4", "metadata": {}, "hash": "6ad0104955e396326b3d3f76bcd7c3714aead166f7f3406bc923da981ffde07d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83fa51c1-b77e-49a0-a049-b9af0a806f81", "node_type": "1", "metadata": {}, "hash": "4fb4669d67b296523b07630d309f6a8507901fd09301fca12895149625ffe240", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3672af8-b97e-4dcc-8d50-4bf8e2013156", "node_type": "1", "metadata": {}, "hash": "ccfa4084335fbb54fdd00b03edb395cfdf33dffacb3cdab1415b576fa3ad5bc0", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration A constant source of confusion for addiu is its name and what happens to its immediate \ufb01eld. The u stands for unsigned, which means addition cannot cause an over\ufb02ow exception. However, the 16-bit immediate \ufb01eld is sign extended to 32 bits, just like addi, slti,", "start_char_idx": 0, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3672af8-b97e-4dcc-8d50-4bf8e2013156": {"__data__": {"id_": "b3672af8-b97e-4dcc-8d50-4bf8e2013156", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c7e182b-5cc8-4e79-98b3-d5db498b3587", "node_type": "4", "metadata": {}, "hash": "ccfa4084335fbb54fdd00b03edb395cfdf33dffacb3cdab1415b576fa3ad5bc0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51c52a78-0258-4ff9-9d5c-f977869ffe18", "node_type": "1", "metadata": {}, "hash": "6ad0104955e396326b3d3f76bcd7c3714aead166f7f3406bc923da981ffde07d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f6a02a8-d1fa-469b-bf61-862f38a15436", "node_type": "1", "metadata": {}, "hash": "bb20e96856ef451e06d98b8f6b01a5226fa492ec091eb922c0275e1f4164c136", "class_name": "RelatedNodeInfo"}}, "text": "and sltiu. Thus, the immediate \ufb01eld is signed, even if the operation is \u201cunsigned.\u201d", "start_char_idx": 0, "end_char_idx": 83, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f6a02a8-d1fa-469b-bf61-862f38a15436": {"__data__": {"id_": "3f6a02a8-d1fa-469b-bf61-862f38a15436", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85d55c1a-fe08-4741-b0f4-a2edaa47b9fa", "node_type": "4", "metadata": {}, "hash": "bb20e96856ef451e06d98b8f6b01a5226fa492ec091eb922c0275e1f4164c136", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3672af8-b97e-4dcc-8d50-4bf8e2013156", "node_type": "1", "metadata": {}, "hash": "ccfa4084335fbb54fdd00b03edb395cfdf33dffacb3cdab1415b576fa3ad5bc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7d71d6e-3b18-42ac-afc9-138514abd91a", "node_type": "1", "metadata": {}, "hash": "c5bbe5ded5045b04535a5f0928b903b6423c142332063bafe42cb97217b8cc3b", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/Software Interface The computer designer must decide how to handle arithmetic over\ufb02ows. Although some languages like C and Java ignore integer over\ufb02ow, languages like Ada and Fortran require that the program be noti\ufb01ed. The programmer or the programming environment must then decide what to do when over\ufb02ow occurs.", "start_char_idx": 0, "end_char_idx": 323, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7d71d6e-3b18-42ac-afc9-138514abd91a": {"__data__": {"id_": "c7d71d6e-3b18-42ac-afc9-138514abd91a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5418f586-4bfa-43b6-8837-bd391fd87867", "node_type": "4", "metadata": {}, "hash": "c5bbe5ded5045b04535a5f0928b903b6423c142332063bafe42cb97217b8cc3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f6a02a8-d1fa-469b-bf61-862f38a15436", "node_type": "1", "metadata": {}, "hash": "bb20e96856ef451e06d98b8f6b01a5226fa492ec091eb922c0275e1f4164c136", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c3459f4-0950-43f7-a7cc-64976e4e3b9e", "node_type": "1", "metadata": {}, "hash": "6ca5f70713a03fe58841b3cf4bb03a476792e57dd9bc234072cf5647d6f1ad6b", "class_name": "RelatedNodeInfo"}}, "text": "exception Also called interrupt on many computers. An unscheduled event that disrupts program execution; used to detect over\ufb02ow, for example.", "start_char_idx": 0, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c3459f4-0950-43f7-a7cc-64976e4e3b9e": {"__data__": {"id_": "1c3459f4-0950-43f7-a7cc-64976e4e3b9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d656e49-ecf9-42ca-86c0-103aa7e7a674", "node_type": "4", "metadata": {}, "hash": "6ca5f70713a03fe58841b3cf4bb03a476792e57dd9bc234072cf5647d6f1ad6b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7d71d6e-3b18-42ac-afc9-138514abd91a", "node_type": "1", "metadata": {}, "hash": "c5bbe5ded5045b04535a5f0928b903b6423c142332063bafe42cb97217b8cc3b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24933012-467b-4b29-8553-03a4864e4d88", "node_type": "1", "metadata": {}, "hash": "f38cb0a34882e1d91e9459abb0ecd60c916c33b05c38997b8ea7e20cecd2a1f3", "class_name": "RelatedNodeInfo"}}, "text": "MIPS detects over\ufb02ow with an exception, also called an interrupt on many computers. An exception or interrupt is essentially an unscheduled procedure call. The address of the instruction that over\ufb02owed is saved in a register, and the computer jumps to a prede\ufb01ned address to invoke the appropriate routine for that exception. The interrupted address is saved so that in some situations the program can continue after corrective code is executed. (Section 4.10 covers exceptions in more detail; Chapter 5 describes other situations where exceptions and interrupts occur.) MIPS calls an exception that comes from outside the processor an interrupt.", "start_char_idx": 0, "end_char_idx": 646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24933012-467b-4b29-8553-03a4864e4d88": {"__data__": {"id_": "24933012-467b-4b29-8553-03a4864e4d88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "946d8ff6-d338-42b6-afc7-6034d731b2df", "node_type": "4", "metadata": {}, "hash": "f38cb0a34882e1d91e9459abb0ecd60c916c33b05c38997b8ea7e20cecd2a1f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c3459f4-0950-43f7-a7cc-64976e4e3b9e", "node_type": "1", "metadata": {}, "hash": "6ca5f70713a03fe58841b3cf4bb03a476792e57dd9bc234072cf5647d6f1ad6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56e3e143-0db0-495b-a2e4-25aea1b63194", "node_type": "1", "metadata": {}, "hash": "1c1c6e36bfd34e9698d9a7bb384cf37ec9fa3039d5728462868fe90af0f18253", "class_name": "RelatedNodeInfo"}}, "text": "interrupt An exception that comes from outside of the processor. (Some architectures use the term interrupt for all exceptions.)", "start_char_idx": 0, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56e3e143-0db0-495b-a2e4-25aea1b63194": {"__data__": {"id_": "56e3e143-0db0-495b-a2e4-25aea1b63194", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c98a572-c871-4b0a-bfe1-fb8b658cc74a", "node_type": "4", "metadata": {}, "hash": "1c1c6e36bfd34e9698d9a7bb384cf37ec9fa3039d5728462868fe90af0f18253", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24933012-467b-4b29-8553-03a4864e4d88", "node_type": "1", "metadata": {}, "hash": "f38cb0a34882e1d91e9459abb0ecd60c916c33b05c38997b8ea7e20cecd2a1f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2aee1504-ad8b-46f2-b754-4284eca3c0d1", "node_type": "1", "metadata": {}, "hash": "b44c53292a0aa513df4c0e1dc926552021858b2d86f81b637303a24c8c0bbf92", "class_name": "RelatedNodeInfo"}}, "text": "MIPS includes a register called the exception program counter (EPC)", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2aee1504-ad8b-46f2-b754-4284eca3c0d1": {"__data__": {"id_": "2aee1504-ad8b-46f2-b754-4284eca3c0d1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9768df35-69fb-4e62-9184-47e1bccc7da8", "node_type": "4", "metadata": {}, "hash": "b44c53292a0aa513df4c0e1dc926552021858b2d86f81b637303a24c8c0bbf92", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56e3e143-0db0-495b-a2e4-25aea1b63194", "node_type": "1", "metadata": {}, "hash": "1c1c6e36bfd34e9698d9a7bb384cf37ec9fa3039d5728462868fe90af0f18253", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0d884fa-11ee-427a-980a-c231fd22c7ea", "node_type": "1", "metadata": {}, "hash": "46ae711c2018dac06bda1276e141b0e3823fb3dd6e1a2923cdb2e9c334f8181e", "class_name": "RelatedNodeInfo"}}, "text": "to contain the address of the instruction that caused the exception. The instruction move from system control (mfc0) is used to copy EPC into a general-purpose register so that MIPS software has the option of returning to the o\ufb00ending instruction via a jump register instruction after the execution of the corrective code.", "start_char_idx": 0, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0d884fa-11ee-427a-980a-c231fd22c7ea": {"__data__": {"id_": "d0d884fa-11ee-427a-980a-c231fd22c7ea", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca35e230-dbba-4daa-976b-e198d39639de", "node_type": "4", "metadata": {}, "hash": "46ae711c2018dac06bda1276e141b0e3823fb3dd6e1a2923cdb2e9c334f8181e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2aee1504-ad8b-46f2-b754-4284eca3c0d1", "node_type": "1", "metadata": {}, "hash": "b44c53292a0aa513df4c0e1dc926552021858b2d86f81b637303a24c8c0bbf92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a691493d-ac2a-4e9e-90f2-e24a3b6b0888", "node_type": "1", "metadata": {}, "hash": "f00c025c82bd13981eed79461c393cc647bcfe27271b312ba64805fe72422c24", "class_name": "RelatedNodeInfo"}}, "text": "Summary A major point of this section is that, independent of the representation, the \ufb01nite word size of computers means that arithmetic operations can create results that are too large to \ufb01t in this \ufb01xed word size. It\u2019s easy to detect over\ufb02ow in unsigned numbers, although these are almost always ignored because programs don\u2019t want to detect over\ufb02ow for address arithmetic, the most common use of natural numbers. Two\u2019s complement presents a greater challenge, yet some software systems require detection of over\ufb02ow, so today all computers have a way to detect it.", "start_char_idx": 0, "end_char_idx": 566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a691493d-ac2a-4e9e-90f2-e24a3b6b0888": {"__data__": {"id_": "a691493d-ac2a-4e9e-90f2-e24a3b6b0888", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "749bb1e7-da46-4306-ad5c-9a92362331e5", "node_type": "4", "metadata": {}, "hash": "f00c025c82bd13981eed79461c393cc647bcfe27271b312ba64805fe72422c24", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0d884fa-11ee-427a-980a-c231fd22c7ea", "node_type": "1", "metadata": {}, "hash": "46ae711c2018dac06bda1276e141b0e3823fb3dd6e1a2923cdb2e9c334f8181e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a663210e-371f-459f-8b1c-906362a7089c", "node_type": "1", "metadata": {}, "hash": "0004f718d43c4280df01f982aca145715910b9d5fea4effe3a02e63ea38a7003", "class_name": "RelatedNodeInfo"}}, "text": "Check Yourself Some programming languages allow two\u2019s complement integer arithmetic on variables declared byte and half, whereas MIPS only has integer arithmetic operations on full words. As we recall from Chapter 2, MIPS does have data transfer operations for bytes and halfwords. What MIPS instructions should be generated for byte and halfword arithmetic operations?", "start_char_idx": 0, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a663210e-371f-459f-8b1c-906362a7089c": {"__data__": {"id_": "a663210e-371f-459f-8b1c-906362a7089c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9abf78b8-26f8-4989-a0f1-facb9f0b306e", "node_type": "4", "metadata": {}, "hash": "0004f718d43c4280df01f982aca145715910b9d5fea4effe3a02e63ea38a7003", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a691493d-ac2a-4e9e-90f2-e24a3b6b0888", "node_type": "1", "metadata": {}, "hash": "f00c025c82bd13981eed79461c393cc647bcfe27271b312ba64805fe72422c24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c29ec131-469b-4975-a97b-cd5e51551d11", "node_type": "1", "metadata": {}, "hash": "ce3a78108c9d845b8e3f56ed5b243b7a416810694009c6dfc5976806b36ad053", "class_name": "RelatedNodeInfo"}}, "text": "store using sb, sh.", "start_char_idx": 0, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c29ec131-469b-4975-a97b-cd5e51551d11": {"__data__": {"id_": "c29ec131-469b-4975-a97b-cd5e51551d11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7c4be381-4c53-4277-acee-774c8f52f7b3", "node_type": "4", "metadata": {}, "hash": "ce3a78108c9d845b8e3f56ed5b243b7a416810694009c6dfc5976806b36ad053", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a663210e-371f-459f-8b1c-906362a7089c", "node_type": "1", "metadata": {}, "hash": "0004f718d43c4280df01f982aca145715910b9d5fea4effe3a02e63ea38a7003", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d3cc238-a404-43f2-a71d-900b39b8582e", "node_type": "1", "metadata": {}, "hash": "7a0f278857228864e8108d7ff3f1fb822ad334b15d3e8e2bf83fc9e93ad38d3f", "class_name": "RelatedNodeInfo"}}, "text": "using sb, sh.", "start_char_idx": 0, "end_char_idx": 13, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d3cc238-a404-43f2-a71d-900b39b8582e": {"__data__": {"id_": "2d3cc238-a404-43f2-a71d-900b39b8582e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b55f027c-5ad7-4d29-9acb-2e3dc5153476", "node_type": "4", "metadata": {}, "hash": "7a0f278857228864e8108d7ff3f1fb822ad334b15d3e8e2bf83fc9e93ad38d3f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c29ec131-469b-4975-a97b-cd5e51551d11", "node_type": "1", "metadata": {}, "hash": "ce3a78108c9d845b8e3f56ed5b243b7a416810694009c6dfc5976806b36ad053", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae75d3b4-e7c2-45a8-b19b-72d94a982026", "node_type": "1", "metadata": {}, "hash": "5a751596f0ec67a8cf6a7e416fbfc196f355887b74c2dc500abab5fe67167bf8", "class_name": "RelatedNodeInfo"}}, "text": "3. Load with lb, lh; arithmetic with add, sub, mult, div, using AND to", "start_char_idx": 0, "end_char_idx": 70, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae75d3b4-e7c2-45a8-b19b-72d94a982026": {"__data__": {"id_": "ae75d3b4-e7c2-45a8-b19b-72d94a982026", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ceabfa-4441-4ebd-b091-663ecd17f45e", "node_type": "4", "metadata": {}, "hash": "5a751596f0ec67a8cf6a7e416fbfc196f355887b74c2dc500abab5fe67167bf8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d3cc238-a404-43f2-a71d-900b39b8582e", "node_type": "1", "metadata": {}, "hash": "7a0f278857228864e8108d7ff3f1fb822ad334b15d3e8e2bf83fc9e93ad38d3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3756d990-8290-4de3-a440-2af6f700c70e", "node_type": "1", "metadata": {}, "hash": "63507f66d2d1cebeec499ab12beef1b3ee41278f7c2f2a3dc9434a03b4faeee1", "class_name": "RelatedNodeInfo"}}, "text": "mask result to 8 or 16 bits after each operation; then store using sb, sh.", "start_char_idx": 0, "end_char_idx": 74, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3756d990-8290-4de3-a440-2af6f700c70e": {"__data__": {"id_": "3756d990-8290-4de3-a440-2af6f700c70e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "02887fc6-e816-4bce-9fdd-93212193c11f", "node_type": "4", "metadata": {}, "hash": "63507f66d2d1cebeec499ab12beef1b3ee41278f7c2f2a3dc9434a03b4faeee1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae75d3b4-e7c2-45a8-b19b-72d94a982026", "node_type": "1", "metadata": {}, "hash": "5a751596f0ec67a8cf6a7e416fbfc196f355887b74c2dc500abab5fe67167bf8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fc21e30-ec39-4b08-9629-c24956837a62", "node_type": "1", "metadata": {}, "hash": "56cd84431cd35e22f7775b6cc4d081ce8be9a55a7b92c95001a222cfbf97c427", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration One feature not generally found in general-purpose microprocessors is saturating operations. Saturation means that when a calculation over\ufb02ows, the result is set to the largest positive number or most negative number, rather than a modulo calculation as in two\u2019s complement arithmetic. Saturation is likely what you want for media operations. For example, the volume knob on a radio set would be frustrating if, as you turned it, the volume would get continuously louder for a while and then immediately very soft. A knob with saturation would stop at the highest volume no ma\u0000er how far you turned it. Multimedia extensions to standard instruction sets often o\ufb00er saturating arithmetic.", "start_char_idx": 0, "end_char_idx": 699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fc21e30-ec39-4b08-9629-c24956837a62": {"__data__": {"id_": "7fc21e30-ec39-4b08-9629-c24956837a62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65dc8cc3-31a1-45cd-955d-d4b131735a6d", "node_type": "4", "metadata": {}, "hash": "56cd84431cd35e22f7775b6cc4d081ce8be9a55a7b92c95001a222cfbf97c427", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3756d990-8290-4de3-a440-2af6f700c70e", "node_type": "1", "metadata": {}, "hash": "63507f66d2d1cebeec499ab12beef1b3ee41278f7c2f2a3dc9434a03b4faeee1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f173ed58-a77c-453a-a210-6b5ef16af950", "node_type": "1", "metadata": {}, "hash": "5c1dd48f3f779024d95fcac43c7f18f1894ba0148d8edca28079519b8a642631", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration MIPS can trap on over\ufb02ow, but unlike many other computers, there is no conditional branch to test over\ufb02ow. A sequence of MIPS instructions can discover over\ufb02ow. For signed addition, the sequence is the following (see the Elaboration on page 95 in Chapter 2 for a description of the xor instruction):", "start_char_idx": 0, "end_char_idx": 311, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f173ed58-a77c-453a-a210-6b5ef16af950": {"__data__": {"id_": "f173ed58-a77c-453a-a210-6b5ef16af950", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9e1ecd30-af2b-40b2-8526-0ed0a1d95ae2", "node_type": "4", "metadata": {}, "hash": "5c1dd48f3f779024d95fcac43c7f18f1894ba0148d8edca28079519b8a642631", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fc21e30-ec39-4b08-9629-c24956837a62", "node_type": "1", "metadata": {}, "hash": "56cd84431cd35e22f7775b6cc4d081ce8be9a55a7b92c95001a222cfbf97c427", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b6e76d56-2a9a-4465-8c86-4432e4978126", "node_type": "1", "metadata": {}, "hash": "0ae8cd1d3db3bc28e7fa1d3cb502a6dccd05701f549379fd449068044afcd9e4", "class_name": "RelatedNodeInfo"}}, "text": "For unsigned addition ($t0 = $t1 + $t2), the test is", "start_char_idx": 0, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6e76d56-2a9a-4465-8c86-4432e4978126": {"__data__": {"id_": "b6e76d56-2a9a-4465-8c86-4432e4978126", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f55ef5dc-7358-40a8-9443-cf63c41e3f95", "node_type": "4", "metadata": {}, "hash": "0ae8cd1d3db3bc28e7fa1d3cb502a6dccd05701f549379fd449068044afcd9e4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f173ed58-a77c-453a-a210-6b5ef16af950", "node_type": "1", "metadata": {}, "hash": "5c1dd48f3f779024d95fcac43c7f18f1894ba0148d8edca28079519b8a642631", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f8ad4d5-5251-4714-85e8-48c86d25a8aa", "node_type": "1", "metadata": {}, "hash": "0fa04bc6b685cbfecbf5748142da29e03785f8cee840f0cce9de6585da657870", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration In the preceding text, we said that you copy EPC into a register via mfc0 and then return to the interrupted code via jump register. This directive leads to an interesting question: since you must \ufb01rst transfer EPC to a register to use with jump register, how can jump register return to the interrupted code and restore the original values of all registers? Either you restore the old registers \ufb01rst, thereby destroying your return address from EPC, which you placed in a register for use in jump register, or you restore all registers but the one with the return address so that you can jump\u2014meaning an exception would result in changing that one register at any time during program execution! Neither option is satisfactory.", "start_char_idx": 0, "end_char_idx": 739, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f8ad4d5-5251-4714-85e8-48c86d25a8aa": {"__data__": {"id_": "4f8ad4d5-5251-4714-85e8-48c86d25a8aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "79ceaf7f-d267-409e-94f6-f7c7b278de39", "node_type": "4", "metadata": {}, "hash": "0fa04bc6b685cbfecbf5748142da29e03785f8cee840f0cce9de6585da657870", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6e76d56-2a9a-4465-8c86-4432e4978126", "node_type": "1", "metadata": {}, "hash": "0ae8cd1d3db3bc28e7fa1d3cb502a6dccd05701f549379fd449068044afcd9e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0108431-29d9-42c1-8fa4-35d80742ff2e", "node_type": "1", "metadata": {}, "hash": "ee0810c54c8ece5338ef655c4b25a53eaab946c3f8451de884626ac099f7ec56", "class_name": "RelatedNodeInfo"}}, "text": "To rescue the hardware from this dilemma, MIPS programmers", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0108431-29d9-42c1-8fa4-35d80742ff2e": {"__data__": {"id_": "c0108431-29d9-42c1-8fa4-35d80742ff2e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b21e160-bd7e-49a7-80a9-af4e1abfa0c9", "node_type": "4", "metadata": {}, "hash": "ee0810c54c8ece5338ef655c4b25a53eaab946c3f8451de884626ac099f7ec56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f8ad4d5-5251-4714-85e8-48c86d25a8aa", "node_type": "1", "metadata": {}, "hash": "0fa04bc6b685cbfecbf5748142da29e03785f8cee840f0cce9de6585da657870", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "08fe89b4-ff5c-4285-aaff-f547e4954e39", "node_type": "1", "metadata": {}, "hash": "0cc1b34478ee900cb3bf6cf7498e845fe0a7c833b22a0c77a97d6f31f0965a7c", "class_name": "RelatedNodeInfo"}}, "text": "agreed to reserve registers $k0 and $k1 for the operating system; these registers are not restored on exceptions. Just as the MIPS compilers avoid using register $at so that the assembler can use it as a temporary register (see Hardware/Software Interface in Section 2.10), compilers also abstain from using registers $k0 and $k1 to make them available for the operating system. Exception routines place the return address in one of these registers and then use jump register to restore the instruction address.", "start_char_idx": 0, "end_char_idx": 511, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08fe89b4-ff5c-4285-aaff-f547e4954e39": {"__data__": {"id_": "08fe89b4-ff5c-4285-aaff-f547e4954e39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "aa3283a3-1f45-47ab-b4e6-3c5f4d716331", "node_type": "4", "metadata": {}, "hash": "0cc1b34478ee900cb3bf6cf7498e845fe0a7c833b22a0c77a97d6f31f0965a7c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0108431-29d9-42c1-8fa4-35d80742ff2e", "node_type": "1", "metadata": {}, "hash": "ee0810c54c8ece5338ef655c4b25a53eaab946c3f8451de884626ac099f7ec56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7157fd64-8441-42f8-9bf9-4f3ebaffeb14", "node_type": "1", "metadata": {}, "hash": "0af4e5cc1b1c2ea59aaf157074823f3cbb171200dfcfb50ffa5bc08e2a1528fa", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration The speed of addition is increased by determining the carry in to the high-order bits sooner. There are a variety of schemes to anticipate the carry so that the worst-case scenario is a function of the log2 of", "start_char_idx": 0, "end_char_idx": 221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7157fd64-8441-42f8-9bf9-4f3ebaffeb14": {"__data__": {"id_": "7157fd64-8441-42f8-9bf9-4f3ebaffeb14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3447f5b0-2eee-46a9-a552-b980f65ad2ae", "node_type": "4", "metadata": {}, "hash": "0af4e5cc1b1c2ea59aaf157074823f3cbb171200dfcfb50ffa5bc08e2a1528fa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "08fe89b4-ff5c-4285-aaff-f547e4954e39", "node_type": "1", "metadata": {}, "hash": "0cc1b34478ee900cb3bf6cf7498e845fe0a7c833b22a0c77a97d6f31f0965a7c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf", "node_type": "1", "metadata": {}, "hash": "7ae857c9d3a62340929bad05994c295a2af87c89ebdbfe7c566b8eb1352eaf6a", "class_name": "RelatedNodeInfo"}}, "text": "the number of bits in the adder instead of the full number of adder bits. These anticipatory signals are faster because they go through fewer gates in sequence, but it takes many more gates to anticipate the proper carry. The most popular is carry lookahead, which Section", "start_char_idx": 0, "end_char_idx": 272, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf": {"__data__": {"id_": "680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff488a7e-950d-4b21-bbdc-9a0c1ac8069c", "node_type": "4", "metadata": {}, "hash": "7ae857c9d3a62340929bad05994c295a2af87c89ebdbfe7c566b8eb1352eaf6a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7157fd64-8441-42f8-9bf9-4f3ebaffeb14", "node_type": "1", "metadata": {}, "hash": "0af4e5cc1b1c2ea59aaf157074823f3cbb171200dfcfb50ffa5bc08e2a1528fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d60da06-e2cc-4d9b-a8f8-f6a08289a06c", "node_type": "1", "metadata": {}, "hash": "a1901c11f3c89bbe85b402f2b3b8141650fb8123bfe7e965bf5b8e00dec01e39", "class_name": "RelatedNodeInfo"}}, "text": "Multiplication is vexation, Division is as bad; The rule of three doth puzzle me, And practice drives me mad.", "start_char_idx": 0, "end_char_idx": 109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d60da06-e2cc-4d9b-a8f8-f6a08289a06c": {"__data__": {"id_": "2d60da06-e2cc-4d9b-a8f8-f6a08289a06c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e1be24de-e1ee-477a-881d-342d4cbf4035", "node_type": "4", "metadata": {}, "hash": "a1901c11f3c89bbe85b402f2b3b8141650fb8123bfe7e965bf5b8e00dec01e39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf", "node_type": "1", "metadata": {}, "hash": "7ae857c9d3a62340929bad05994c295a2af87c89ebdbfe7c566b8eb1352eaf6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5535e2a7-4f71-4a01-bc72-85a925bade40", "node_type": "1", "metadata": {}, "hash": "a3a8b29b0ced9f746ad47d3fca5d721fbdf38d8d74cda98decb4f9a6bb901f89", "class_name": "RelatedNodeInfo"}}, "text": "Now that we have completed the explanation of addition and subtraction, we are ready to build the more vexing operation of multiplication.", "start_char_idx": 0, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5535e2a7-4f71-4a01-bc72-85a925bade40": {"__data__": {"id_": "5535e2a7-4f71-4a01-bc72-85a925bade40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8c0b980c-087e-4331-ac5d-d41fc401b73d", "node_type": "4", "metadata": {}, "hash": "a3a8b29b0ced9f746ad47d3fca5d721fbdf38d8d74cda98decb4f9a6bb901f89", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d60da06-e2cc-4d9b-a8f8-f6a08289a06c", "node_type": "1", "metadata": {}, "hash": "a1901c11f3c89bbe85b402f2b3b8141650fb8123bfe7e965bf5b8e00dec01e39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ae31b27-b741-4a42-a713-1a96b573d558", "node_type": "1", "metadata": {}, "hash": "e77dd407d6bbe5af094ab1952003b3264e1ad58df0a80b0676302d8348761dc6", "class_name": "RelatedNodeInfo"}}, "text": "First, let\u2019s review the multiplication of decimal numbers in", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ae31b27-b741-4a42-a713-1a96b573d558": {"__data__": {"id_": "7ae31b27-b741-4a42-a713-1a96b573d558", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d822aa0b-1039-4081-afc8-9bceae5e9b25", "node_type": "4", "metadata": {}, "hash": "e77dd407d6bbe5af094ab1952003b3264e1ad58df0a80b0676302d8348761dc6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5535e2a7-4f71-4a01-bc72-85a925bade40", "node_type": "1", "metadata": {}, "hash": "a3a8b29b0ced9f746ad47d3fca5d721fbdf38d8d74cda98decb4f9a6bb901f89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3743bcf7-b80d-4d7a-805a-393f81f350a2", "node_type": "1", "metadata": {}, "hash": "aa4c27deb2de8b45548ca8c8dc2ba89d1b7d8e0331f50b51148e9446bbb26fae", "class_name": "RelatedNodeInfo"}}, "text": "longhand to remind ourselves of the steps of multiplication and the names of the operands. For reasons that will become clear shortly, we limit this decimal example to using only the digits 0 and 1. Multiplying 1000ten by 1001ten:", "start_char_idx": 0, "end_char_idx": 230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3743bcf7-b80d-4d7a-805a-393f81f350a2": {"__data__": {"id_": "3743bcf7-b80d-4d7a-805a-393f81f350a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4cb4fa7-3953-4a4f-a848-d7aaccaa079e", "node_type": "4", "metadata": {}, "hash": "aa4c27deb2de8b45548ca8c8dc2ba89d1b7d8e0331f50b51148e9446bbb26fae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ae31b27-b741-4a42-a713-1a96b573d558", "node_type": "1", "metadata": {}, "hash": "e77dd407d6bbe5af094ab1952003b3264e1ad58df0a80b0676302d8348761dc6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa4a664d-1714-45e2-bdbf-aa7b9be1ead8", "node_type": "1", "metadata": {}, "hash": "cd2f7310abefaa94caf7701d364f8cba580ca825dc0a928ffeadd8782385fd7d", "class_name": "RelatedNodeInfo"}}, "text": "The \ufb01rst operand is called the multiplicand and the second the", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa4a664d-1714-45e2-bdbf-aa7b9be1ead8": {"__data__": {"id_": "fa4a664d-1714-45e2-bdbf-aa7b9be1ead8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b86c477d-8fe7-4749-a06e-71ead87bbc0d", "node_type": "4", "metadata": {}, "hash": "cd2f7310abefaa94caf7701d364f8cba580ca825dc0a928ffeadd8782385fd7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3743bcf7-b80d-4d7a-805a-393f81f350a2", "node_type": "1", "metadata": {}, "hash": "aa4c27deb2de8b45548ca8c8dc2ba89d1b7d8e0331f50b51148e9446bbb26fae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73e2e9a4-f9ce-4576-b9e2-293d06615026", "node_type": "1", "metadata": {}, "hash": "2e7e2cc7bff7494d2cefa8cfa33d31977953a1ebc8042373741179d6f5cbd184", "class_name": "RelatedNodeInfo"}}, "text": "multiplier. The \ufb01nal result is called the product. As you may recall, the algorithm learned in grammar school is to take the digits of the", "start_char_idx": 0, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73e2e9a4-f9ce-4576-b9e2-293d06615026": {"__data__": {"id_": "73e2e9a4-f9ce-4576-b9e2-293d06615026", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3b7b735f-5a05-4b33-82eb-d26314d951cb", "node_type": "4", "metadata": {}, "hash": "2e7e2cc7bff7494d2cefa8cfa33d31977953a1ebc8042373741179d6f5cbd184", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa4a664d-1714-45e2-bdbf-aa7b9be1ead8", "node_type": "1", "metadata": {}, "hash": "cd2f7310abefaa94caf7701d364f8cba580ca825dc0a928ffeadd8782385fd7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23713b43-23a2-4388-9704-4127744a4ce1", "node_type": "1", "metadata": {}, "hash": "f142185201ac57407aa4dbf93c2faaa9d8ac8888eb0ab35654fa62c885773156", "class_name": "RelatedNodeInfo"}}, "text": "multiplier one at a time from right to left, multiplying the multiplicand by the single digit of the multiplier, and shifting the intermediate product one digit to the left of the earlier intermediate products.", "start_char_idx": 0, "end_char_idx": 210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23713b43-23a2-4388-9704-4127744a4ce1": {"__data__": {"id_": "23713b43-23a2-4388-9704-4127744a4ce1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7b892fb-ddc6-4380-8a82-cb9eaebbca14", "node_type": "4", "metadata": {}, "hash": "f142185201ac57407aa4dbf93c2faaa9d8ac8888eb0ab35654fa62c885773156", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73e2e9a4-f9ce-4576-b9e2-293d06615026", "node_type": "1", "metadata": {}, "hash": "2e7e2cc7bff7494d2cefa8cfa33d31977953a1ebc8042373741179d6f5cbd184", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c788a562-545d-4b94-a1cb-74e8eedc110b", "node_type": "1", "metadata": {}, "hash": "bf47fdc11353f73232e2a916716facf40d6c32046418c3acb6a62dd5ea57bd63", "class_name": "RelatedNodeInfo"}}, "text": "The \ufb01rst observation is that the number of digits in the product is considerably larger than the number in either the multiplicand or the multiplier. In fact, if we ignore the sign bits, the length of the multiplication of an n-bit multiplicand and an m-bit multiplier is a product that is n + m bits long. That is, n + m bits are required to represent all possible products. Hence, like add, multiply must cope with over\ufb02ow because we frequently want a 32-bit product as the result of multiplying two 32-bit numbers.", "start_char_idx": 0, "end_char_idx": 517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c788a562-545d-4b94-a1cb-74e8eedc110b": {"__data__": {"id_": "c788a562-545d-4b94-a1cb-74e8eedc110b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7d46d3a-e4f2-492b-a531-916509641dad", "node_type": "4", "metadata": {}, "hash": "bf47fdc11353f73232e2a916716facf40d6c32046418c3acb6a62dd5ea57bd63", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23713b43-23a2-4388-9704-4127744a4ce1", "node_type": "1", "metadata": {}, "hash": "f142185201ac57407aa4dbf93c2faaa9d8ac8888eb0ab35654fa62c885773156", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "926fbdf1-0830-4f5b-8e54-1a65108c4371", "node_type": "1", "metadata": {}, "hash": "4a82dfc60bac88379cd524f3b5c2284faa7264000c4475a7de034bf2d22a87c5", "class_name": "RelatedNodeInfo"}}, "text": "In this example, we restricted the decimal digits to 0 and 1. With", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "926fbdf1-0830-4f5b-8e54-1a65108c4371": {"__data__": {"id_": "926fbdf1-0830-4f5b-8e54-1a65108c4371", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14f4c572-0807-4a93-af8d-4bfbc6cf9f42", "node_type": "4", "metadata": {}, "hash": "4a82dfc60bac88379cd524f3b5c2284faa7264000c4475a7de034bf2d22a87c5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c788a562-545d-4b94-a1cb-74e8eedc110b", "node_type": "1", "metadata": {}, "hash": "bf47fdc11353f73232e2a916716facf40d6c32046418c3acb6a62dd5ea57bd63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a14244dd-78df-48f9-a36c-ac599b7de7e5", "node_type": "1", "metadata": {}, "hash": "816a637da16008e7cff4e84bd76696ae3fb8e10c2590c3438288437b37b7ebc5", "class_name": "RelatedNodeInfo"}}, "text": "only two choices, each step of the multiplication is simple:", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a14244dd-78df-48f9-a36c-ac599b7de7e5": {"__data__": {"id_": "a14244dd-78df-48f9-a36c-ac599b7de7e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff0e1281-a48d-47e0-b187-2814f6d0b0e1", "node_type": "4", "metadata": {}, "hash": "816a637da16008e7cff4e84bd76696ae3fb8e10c2590c3438288437b37b7ebc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "926fbdf1-0830-4f5b-8e54-1a65108c4371", "node_type": "1", "metadata": {}, "hash": "4a82dfc60bac88379cd524f3b5c2284faa7264000c4475a7de034bf2d22a87c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2916db3-0bde-419c-bf5c-d3e408ec8878", "node_type": "1", "metadata": {}, "hash": "0cdf8541111301056492ad92576f1e665d7b7407d2915f96bcd2f769567e371a", "class_name": "RelatedNodeInfo"}}, "text": "proper place if the multiplier digit is a 1, or", "start_char_idx": 0, "end_char_idx": 47, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2916db3-0bde-419c-bf5c-d3e408ec8878": {"__data__": {"id_": "a2916db3-0bde-419c-bf5c-d3e408ec8878", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f8224af1-1901-455d-b33e-a99bc2ab6dab", "node_type": "4", "metadata": {}, "hash": "0cdf8541111301056492ad92576f1e665d7b7407d2915f96bcd2f769567e371a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a14244dd-78df-48f9-a36c-ac599b7de7e5", "node_type": "1", "metadata": {}, "hash": "816a637da16008e7cff4e84bd76696ae3fb8e10c2590c3438288437b37b7ebc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e", "node_type": "1", "metadata": {}, "hash": "cce1980f3b71fc2416968f21f0d3bfa916be1d736acea7b959811dbc8be8b04e", "class_name": "RelatedNodeInfo"}}, "text": "2. Place 0 (0 \u00d7 multiplicand) in the proper place if the digit is 0.", "start_char_idx": 0, "end_char_idx": 68, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e": {"__data__": {"id_": "339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1877f4b-c06d-4636-9586-f8b68ba6af28", "node_type": "4", "metadata": {}, "hash": "cce1980f3b71fc2416968f21f0d3bfa916be1d736acea7b959811dbc8be8b04e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2916db3-0bde-419c-bf5c-d3e408ec8878", "node_type": "1", "metadata": {}, "hash": "0cdf8541111301056492ad92576f1e665d7b7407d2915f96bcd2f769567e371a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21cae550-a792-4b3d-b88f-4bbfd45f4b14", "node_type": "1", "metadata": {}, "hash": "e3c2fe51180e1dd2d7916598119ccc169471e987f5c67ff6b136c550ae287458", "class_name": "RelatedNodeInfo"}}, "text": "Although the decimal example above happens to use only 0 and 1, multiplication of binary numbers must always use 0 and 1, and thus always o\ufb00ers only these two choices.", "start_char_idx": 0, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21cae550-a792-4b3d-b88f-4bbfd45f4b14": {"__data__": {"id_": "21cae550-a792-4b3d-b88f-4bbfd45f4b14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a70c500e-dfde-4cbc-b1e2-b2fe3a094762", "node_type": "4", "metadata": {}, "hash": "e3c2fe51180e1dd2d7916598119ccc169471e987f5c67ff6b136c550ae287458", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e", "node_type": "1", "metadata": {}, "hash": "cce1980f3b71fc2416968f21f0d3bfa916be1d736acea7b959811dbc8be8b04e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "801bec80-3d4c-422f-9f57-f8d68b6ab82a", "node_type": "1", "metadata": {}, "hash": "27dea82895f8bc29badf64df22cd3ecddd2e676eaeb7a28d332f9415fe8653ae", "class_name": "RelatedNodeInfo"}}, "text": "Now that we have reviewed the basics of multiplication, the traditional next step is to provide the highly optimized multiply hardware. We break with tradition in the belief that you will gain a be\u0000er understanding by seeing the evolution of the multiply hardware and algorithm through multiple generations. For now, let\u2019s assume that we are multiplying only positive numbers.", "start_char_idx": 0, "end_char_idx": 376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "801bec80-3d4c-422f-9f57-f8d68b6ab82a": {"__data__": {"id_": "801bec80-3d4c-422f-9f57-f8d68b6ab82a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "800c1c01-c43f-4c0f-9454-89119d2f20ef", "node_type": "4", "metadata": {}, "hash": "27dea82895f8bc29badf64df22cd3ecddd2e676eaeb7a28d332f9415fe8653ae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21cae550-a792-4b3d-b88f-4bbfd45f4b14", "node_type": "1", "metadata": {}, "hash": "e3c2fe51180e1dd2d7916598119ccc169471e987f5c67ff6b136c550ae287458", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d30b813-40b9-4761-93a2-567b588cd93e", "node_type": "1", "metadata": {}, "hash": "89833722fea28ac31e4124957313bfc8f2d1d60d1972a351d4111bd59ab9bfa6", "class_name": "RelatedNodeInfo"}}, "text": "Sequential Version of the Multiplication Algorithm and Hardware This design mimics the algorithm we learned in grammar school; Figure 3.3 shows the hardware. We have drawn the hardware so that data \ufb02ows from top to bo\u0000om to resemble more closely the paper- and-pencil method.", "start_char_idx": 0, "end_char_idx": 275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d30b813-40b9-4761-93a2-567b588cd93e": {"__data__": {"id_": "9d30b813-40b9-4761-93a2-567b588cd93e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5a9373f9-6bab-44c4-8ab0-ef59dbe439ce", "node_type": "4", "metadata": {}, "hash": "89833722fea28ac31e4124957313bfc8f2d1d60d1972a351d4111bd59ab9bfa6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "801bec80-3d4c-422f-9f57-f8d68b6ab82a", "node_type": "1", "metadata": {}, "hash": "27dea82895f8bc29badf64df22cd3ecddd2e676eaeb7a28d332f9415fe8653ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9253646a-5800-44f3-8010-9e5328ef2b74", "node_type": "1", "metadata": {}, "hash": "9ac45daab710f83a6e672e5e5bd8030b61d62ff6d62b6e4462ecf5dff361412c", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.3 First version of the multiplication hardware. The Multiplicand register, ALU, and Product register are all 64 bits wide, with only the Multiplier register containing 32 bits. (Appendix B describes ALUs.) The 32-bit multiplicand starts in the right half of the Multiplicand register and is shifted left 1 bit on each step. The multiplier is shifted in the opposite direction at each step. The algorithm starts with the product initialized to 0. Control decides when to shift the Multiplicand and Multiplier registers and when to write new values into the Product register.", "start_char_idx": 0, "end_char_idx": 582, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9253646a-5800-44f3-8010-9e5328ef2b74": {"__data__": {"id_": "9253646a-5800-44f3-8010-9e5328ef2b74", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "63ebc2f3-982f-4942-85b6-c479ce10b386", "node_type": "4", "metadata": {}, "hash": "9ac45daab710f83a6e672e5e5bd8030b61d62ff6d62b6e4462ecf5dff361412c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d30b813-40b9-4761-93a2-567b588cd93e", "node_type": "1", "metadata": {}, "hash": "89833722fea28ac31e4124957313bfc8f2d1d60d1972a351d4111bd59ab9bfa6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd11f445-7232-4d6f-84ec-dc17b5f3918b", "node_type": "1", "metadata": {}, "hash": "d58bdd1b8809e303e1d3397ffd6edb28f7d64db3cc054287386e7c340ac31b1a", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s assume that the multiplier is in the 32-bit Multiplier register", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd11f445-7232-4d6f-84ec-dc17b5f3918b": {"__data__": {"id_": "cd11f445-7232-4d6f-84ec-dc17b5f3918b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d4fbeae7-1153-4d5f-ad30-d67896f79bc5", "node_type": "4", "metadata": {}, "hash": "d58bdd1b8809e303e1d3397ffd6edb28f7d64db3cc054287386e7c340ac31b1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9253646a-5800-44f3-8010-9e5328ef2b74", "node_type": "1", "metadata": {}, "hash": "9ac45daab710f83a6e672e5e5bd8030b61d62ff6d62b6e4462ecf5dff361412c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e58b2063-41f2-4bc6-8d88-952075dec1b0", "node_type": "1", "metadata": {}, "hash": "0af77744eb5b877e09ad6a5a42199e83374ba4f848b37fa6c8a3e00d34339096", "class_name": "RelatedNodeInfo"}}, "text": "and that the 64-bit Product register is initialized to 0. From the paper-and-pencil example above, it\u2019s clear that we will need to move the multiplicand left one digit each step, as it may be added to the intermediate products. Over 32 steps, a 32-bit multiplicand would move 32 bits to the left. Hence, we need a 64-bit Multiplicand register, initialized with the 32-bit multiplicand in the right half and zero in the left half. This register is then shifted left 1 bit each step to align the multiplicand with the sum being accumulated in the 64-bit Product register.", "start_char_idx": 0, "end_char_idx": 569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e58b2063-41f2-4bc6-8d88-952075dec1b0": {"__data__": {"id_": "e58b2063-41f2-4bc6-8d88-952075dec1b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d4cb580c-31d0-4b58-9878-61aba678f106", "node_type": "4", "metadata": {}, "hash": "0af77744eb5b877e09ad6a5a42199e83374ba4f848b37fa6c8a3e00d34339096", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cd11f445-7232-4d6f-84ec-dc17b5f3918b", "node_type": "1", "metadata": {}, "hash": "d58bdd1b8809e303e1d3397ffd6edb28f7d64db3cc054287386e7c340ac31b1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b827bfe-da08-4c73-a2a7-b4dc59f8d78b", "node_type": "1", "metadata": {}, "hash": "8cbb0db36d0f778d17d55eeff04f6e978519c75e39a88e9df20a8769c91a0f1a", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.4 shows the three basic steps needed for each bit. The", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b827bfe-da08-4c73-a2a7-b4dc59f8d78b": {"__data__": {"id_": "9b827bfe-da08-4c73-a2a7-b4dc59f8d78b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94568cc0-71a2-4dd6-bbc1-d113b06bb5dc", "node_type": "4", "metadata": {}, "hash": "8cbb0db36d0f778d17d55eeff04f6e978519c75e39a88e9df20a8769c91a0f1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e58b2063-41f2-4bc6-8d88-952075dec1b0", "node_type": "1", "metadata": {}, "hash": "0af77744eb5b877e09ad6a5a42199e83374ba4f848b37fa6c8a3e00d34339096", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17222984-4cfe-4c48-8b58-857a0b89b833", "node_type": "1", "metadata": {}, "hash": "c0a919c6dc3d9803bae31c4a7268e713617064e45a50b616e4d233034bb8588c", "class_name": "RelatedNodeInfo"}}, "text": "least signi\ufb01cant bit of the multiplier (Multiplier0) determines whether the multiplicand is added to the Product register. The left shift in step 2 has the e\ufb00ect of moving the intermediate operands to the left, just as when multiplying with paper and pencil. The shift right in step 3 gives us the next bit of the multiplier to examine in the", "start_char_idx": 0, "end_char_idx": 342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17222984-4cfe-4c48-8b58-857a0b89b833": {"__data__": {"id_": "17222984-4cfe-4c48-8b58-857a0b89b833", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a3d72201-b853-4275-81f6-43540564ea71", "node_type": "4", "metadata": {}, "hash": "c0a919c6dc3d9803bae31c4a7268e713617064e45a50b616e4d233034bb8588c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b827bfe-da08-4c73-a2a7-b4dc59f8d78b", "node_type": "1", "metadata": {}, "hash": "8cbb0db36d0f778d17d55eeff04f6e978519c75e39a88e9df20a8769c91a0f1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34404b09-17ec-4a30-8014-b22e683bc700", "node_type": "1", "metadata": {}, "hash": "a3e4b021fbadb2a968d9ca005764093c3355f0c2faac63a2a33f3cde22703da0", "class_name": "RelatedNodeInfo"}}, "text": "following iteration. These three steps are repeated 32 times to obtain the product. If each step took one clock cycle, this algorithm would require almost 100 clock cycles to multiply two 32-bit numbers. The relative importance of arithmetic operations like multiply varies with the program, but addition and subtraction may be anywhere from 5 to 100 times more popular than multiply. Accordingly, in many applications, multiply can take multiple clock cycles without signi\ufb01cantly a\ufb00ecting performance. Yet Amdahl\u2019s Law (see Section 1.11) reminds us that even a moderate frequency for a slow operation can limit performance.", "start_char_idx": 0, "end_char_idx": 624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34404b09-17ec-4a30-8014-b22e683bc700": {"__data__": {"id_": "34404b09-17ec-4a30-8014-b22e683bc700", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a805b5-8bbf-4cc0-88ec-824791423d04", "node_type": "4", "metadata": {}, "hash": "a3e4b021fbadb2a968d9ca005764093c3355f0c2faac63a2a33f3cde22703da0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17222984-4cfe-4c48-8b58-857a0b89b833", "node_type": "1", "metadata": {}, "hash": "c0a919c6dc3d9803bae31c4a7268e713617064e45a50b616e4d233034bb8588c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40bbd5e0-a82d-434c-88ac-6b6814eecb47", "node_type": "1", "metadata": {}, "hash": "f56b5f21103a071a14733695c6db417aba79f10461a26e1015b1b68cccc5cd71", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.4 The first multiplication algorithm, using the hardware shown in Figure 3.3. If the least significant bit of the multiplier is 1, add the multiplicand to the product. If not, go to the next step. Shift the multiplicand left and the multiplier right in the next two steps. These three steps are repeated 32 times.", "start_char_idx": 0, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40bbd5e0-a82d-434c-88ac-6b6814eecb47": {"__data__": {"id_": "40bbd5e0-a82d-434c-88ac-6b6814eecb47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52098b39-6941-49d5-ba6b-1e73720945f9", "node_type": "4", "metadata": {}, "hash": "f56b5f21103a071a14733695c6db417aba79f10461a26e1015b1b68cccc5cd71", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34404b09-17ec-4a30-8014-b22e683bc700", "node_type": "1", "metadata": {}, "hash": "a3e4b021fbadb2a968d9ca005764093c3355f0c2faac63a2a33f3cde22703da0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c286414-ec3f-43d1-b1b1-2aec3c78be9b", "node_type": "1", "metadata": {}, "hash": "da504a677b2e3a71ab9c58e71029f10cb3d3c482e8203d67bf5e4175ff2d6caf", "class_name": "RelatedNodeInfo"}}, "text": "Example Using 4-bit numbers to save space, multiply 2ten \u00d7 3ten, or 0010two \u00d7 0011two.", "start_char_idx": 0, "end_char_idx": 86, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2c286414-ec3f-43d1-b1b1-2aec3c78be9b": {"__data__": {"id_": "2c286414-ec3f-43d1-b1b1-2aec3c78be9b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b9b2e6b5-db09-4934-80fa-bdbc877c159f", "node_type": "4", "metadata": {}, "hash": "da504a677b2e3a71ab9c58e71029f10cb3d3c482e8203d67bf5e4175ff2d6caf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40bbd5e0-a82d-434c-88ac-6b6814eecb47", "node_type": "1", "metadata": {}, "hash": "f56b5f21103a071a14733695c6db417aba79f10461a26e1015b1b68cccc5cd71", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76a9dba2-0537-471b-b72b-b869edc619dd", "node_type": "1", "metadata": {}, "hash": "1efd3bca3d489488d43861c55a7f72cfeb46f8bbd52852436af87339f9be22dd", "class_name": "RelatedNodeInfo"}}, "text": "Answer Figure 3.5 shows the value of each register for each of the steps labeled according to Figure 3.4, with the \ufb01nal value of 0000 0110two or 6ten. Color is used to indicate the register values that change on that step, and the bit circled is the one examined to determine the operation of the next step.", "start_char_idx": 0, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76a9dba2-0537-471b-b72b-b869edc619dd": {"__data__": {"id_": "76a9dba2-0537-471b-b72b-b869edc619dd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cc5a10a7-75a0-494d-94f2-5f45da7c20b8", "node_type": "4", "metadata": {}, "hash": "1efd3bca3d489488d43861c55a7f72cfeb46f8bbd52852436af87339f9be22dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c286414-ec3f-43d1-b1b1-2aec3c78be9b", "node_type": "1", "metadata": {}, "hash": "da504a677b2e3a71ab9c58e71029f10cb3d3c482e8203d67bf5e4175ff2d6caf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf6584a3-b706-4cbc-9933-bdfbbe193ff8", "node_type": "1", "metadata": {}, "hash": "8710bb2960116922cf4a468f7760b01124858af2ffdebaa9f25e4fc317cb7b4e", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.5 Multiply example using algorithm in Figure 3.4. The bit examined to determine the next step is circled in color.", "start_char_idx": 0, "end_char_idx": 123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf6584a3-b706-4cbc-9933-bdfbbe193ff8": {"__data__": {"id_": "bf6584a3-b706-4cbc-9933-bdfbbe193ff8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1fb4170e-3897-4997-aa3a-8e4066ffddbc", "node_type": "4", "metadata": {}, "hash": "8710bb2960116922cf4a468f7760b01124858af2ffdebaa9f25e4fc317cb7b4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76a9dba2-0537-471b-b72b-b869edc619dd", "node_type": "1", "metadata": {}, "hash": "1efd3bca3d489488d43861c55a7f72cfeb46f8bbd52852436af87339f9be22dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5ee7649-1745-46ee-968b-44cffc6c79ce", "node_type": "1", "metadata": {}, "hash": "fe7124d60df86917a14bd96f1e54d2602103cb530f0a1c1cdb81bb342d8fd372", "class_name": "RelatedNodeInfo"}}, "text": "This algorithm and hardware are easily re\ufb01ned to take 1 clock cycle per step. The speed-up comes from performing the operations in parallel: the multiplier and multiplicand are shifted while the multiplicand is added to the product if the multiplier bit is a 1. The hardware only has to ensure that it tests the right bit of the multiplier and gets the preshifted version of the multiplicand. The hardware is usually further optimized to halve the width of the", "start_char_idx": 0, "end_char_idx": 460, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5ee7649-1745-46ee-968b-44cffc6c79ce": {"__data__": {"id_": "b5ee7649-1745-46ee-968b-44cffc6c79ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0824898f-d511-465c-9db4-776d288f131f", "node_type": "4", "metadata": {}, "hash": "fe7124d60df86917a14bd96f1e54d2602103cb530f0a1c1cdb81bb342d8fd372", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf6584a3-b706-4cbc-9933-bdfbbe193ff8", "node_type": "1", "metadata": {}, "hash": "8710bb2960116922cf4a468f7760b01124858af2ffdebaa9f25e4fc317cb7b4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c837eead-f4ca-4fe0-a013-963f0269282f", "node_type": "1", "metadata": {}, "hash": "d8a32cc2bfd893e8594a260d7ca6da0623264be6c235d0d32b6d8e858f1fa5de", "class_name": "RelatedNodeInfo"}}, "text": "adder and registers by noticing where there are unused portions of registers and adders. Figure 3.6 shows the revised hardware.", "start_char_idx": 0, "end_char_idx": 127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c837eead-f4ca-4fe0-a013-963f0269282f": {"__data__": {"id_": "c837eead-f4ca-4fe0-a013-963f0269282f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "31597250-f281-43d8-bfc0-80f89b283453", "node_type": "4", "metadata": {}, "hash": "d8a32cc2bfd893e8594a260d7ca6da0623264be6c235d0d32b6d8e858f1fa5de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5ee7649-1745-46ee-968b-44cffc6c79ce", "node_type": "1", "metadata": {}, "hash": "fe7124d60df86917a14bd96f1e54d2602103cb530f0a1c1cdb81bb342d8fd372", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4", "node_type": "1", "metadata": {}, "hash": "e9ef8519163d68c8bd6148aae3652a0e44c11ceac27423464ab47b0a61e2c1de", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.6 Refined version of the multiplication hardware. Compare with the first version in Figure 3.3. The Multiplicand register, ALU, and Multiplier register are all 32 bits wide, with only the Product register left at 64 bits. Now the product is shifted right. The separate Multiplier register also disappeared. The multiplier is placed instead in the right half of the Product register. These changes are highlighted in color. (The Product register should really be 65 bits to hold the carry out of the adder, but it\u2019s shown here as 64 bits to highlight the evolution from Figure 3.3.)", "start_char_idx": 0, "end_char_idx": 590, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4": {"__data__": {"id_": "3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b9d1c02e-0773-4f18-b08b-e71940a04ebf", "node_type": "4", "metadata": {}, "hash": "e9ef8519163d68c8bd6148aae3652a0e44c11ceac27423464ab47b0a61e2c1de", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c837eead-f4ca-4fe0-a013-963f0269282f", "node_type": "1", "metadata": {}, "hash": "d8a32cc2bfd893e8594a260d7ca6da0623264be6c235d0d32b6d8e858f1fa5de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57a50616-24ad-4c34-a468-18fd195e5949", "node_type": "1", "metadata": {}, "hash": "ce6f29ee17224976c249e1d12a2f766e9f8152b219fcf6aef241e955ef788c56", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/Software Interface Replacing arithmetic by shifts can also occur when multiplying by constants. Some compilers replace multiplies by short constants with a series of shifts and adds. Because one bit to the left represents a number twice as large in base 2, shifting the bits left has the same e\ufb00ect as multiplying by a power of 2. As mentioned in Chapter 2, almost every compiler will perform the strength reduction optimization of substituting a left shift for a multiply by a power of 2.", "start_char_idx": 0, "end_char_idx": 498, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57a50616-24ad-4c34-a468-18fd195e5949": {"__data__": {"id_": "57a50616-24ad-4c34-a468-18fd195e5949", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a4d2ead-71f4-4e0f-a1bc-f8096bdae699", "node_type": "4", "metadata": {}, "hash": "ce6f29ee17224976c249e1d12a2f766e9f8152b219fcf6aef241e955ef788c56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4", "node_type": "1", "metadata": {}, "hash": "e9ef8519163d68c8bd6148aae3652a0e44c11ceac27423464ab47b0a61e2c1de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66d977b5-6ee9-4ccf-a686-5bec4604febb", "node_type": "1", "metadata": {}, "hash": "8cce92ac3ead8656327dde1f5ce20bb778e2a424a326a6928ef322c094491e37", "class_name": "RelatedNodeInfo"}}, "text": "Signed Multiplication So far, we have dealt with positive numbers. The easiest way to understand how to deal with signed numbers is to \ufb01rst convert the multiplier and multiplicand to positive numbers and then remember the original signs. The algorithms should then be run for 31 iterations, leaving the signs out of the calculation. As we learned in grammar school, we need negate the product only if the original signs disagree.", "start_char_idx": 0, "end_char_idx": 429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66d977b5-6ee9-4ccf-a686-5bec4604febb": {"__data__": {"id_": "66d977b5-6ee9-4ccf-a686-5bec4604febb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f64a2bc8-d50a-4368-b242-e477930bfd6a", "node_type": "4", "metadata": {}, "hash": "8cce92ac3ead8656327dde1f5ce20bb778e2a424a326a6928ef322c094491e37", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57a50616-24ad-4c34-a468-18fd195e5949", "node_type": "1", "metadata": {}, "hash": "ce6f29ee17224976c249e1d12a2f766e9f8152b219fcf6aef241e955ef788c56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2e70c3e-0703-4f78-9e9a-70949660aebd", "node_type": "1", "metadata": {}, "hash": "fc7bbce85fb34738989f434ef9ca5c70d31f63647503b0327ab724a0626bfbc5", "class_name": "RelatedNodeInfo"}}, "text": "It turns out that the last algorithm will work for signed numbers, provided that we remember that we are dealing with numbers that have in\ufb01nite digits, and we are only representing them with 32 bits. Hence, the shifting steps would need to extend the sign of the product for signed numbers. When the algorithm completes, the lower word would have the 32-bit product.", "start_char_idx": 0, "end_char_idx": 366, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2e70c3e-0703-4f78-9e9a-70949660aebd": {"__data__": {"id_": "f2e70c3e-0703-4f78-9e9a-70949660aebd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ec98d5f6-6fe7-46fb-a389-31856ad7ac9a", "node_type": "4", "metadata": {}, "hash": "fc7bbce85fb34738989f434ef9ca5c70d31f63647503b0327ab724a0626bfbc5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66d977b5-6ee9-4ccf-a686-5bec4604febb", "node_type": "1", "metadata": {}, "hash": "8cce92ac3ead8656327dde1f5ce20bb778e2a424a326a6928ef322c094491e37", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "68a8a736-e74c-4709-a535-3aba786f31da", "node_type": "1", "metadata": {}, "hash": "029b61546cd9e176b62b4024165b31a94e52fff886011e54854b126d3dc096ad", "class_name": "RelatedNodeInfo"}}, "text": "Faster Multiplication Moore\u2019s Law provided so much more in resources that hardware designers could build much faster multiplication hardware. Whether the multiplicand is to be added or not is known at the beginning of the multiplication by looking at each of the 32 multiplier bits. Faster multiplications are possible by essentially providing one 32-bit adder for each bit of the multiplier: one input is the multiplicand ANDed with a multiplier bit, and the other is the output of a prior adder.", "start_char_idx": 0, "end_char_idx": 497, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68a8a736-e74c-4709-a535-3aba786f31da": {"__data__": {"id_": "68a8a736-e74c-4709-a535-3aba786f31da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57c4465a-e712-40e1-b70b-c4461547908f", "node_type": "4", "metadata": {}, "hash": "029b61546cd9e176b62b4024165b31a94e52fff886011e54854b126d3dc096ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2e70c3e-0703-4f78-9e9a-70949660aebd", "node_type": "1", "metadata": {}, "hash": "fc7bbce85fb34738989f434ef9ca5c70d31f63647503b0327ab724a0626bfbc5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dc6af21-60a1-44e7-97ca-a5307eebe8aa", "node_type": "1", "metadata": {}, "hash": "5017d166bc71c281ee8265b1cb3929ad5d97c0f35b7cb1e33b024d95cd80848b", "class_name": "RelatedNodeInfo"}}, "text": "A straightforward approach would be to connect the outputs of adders on the right to the inputs of adders on the left, making a stack of adders 32 high. An alternative way to organize these 32 additions is in a parallel tree, as Figure 3.7 shows. Instead of waiting for 32 add times, we wait just the log2 (32) or \ufb01ve 32-bit add times.", "start_char_idx": 0, "end_char_idx": 335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dc6af21-60a1-44e7-97ca-a5307eebe8aa": {"__data__": {"id_": "7dc6af21-60a1-44e7-97ca-a5307eebe8aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f0439ee-0f69-44a3-8e56-043dcaab7fc1", "node_type": "4", "metadata": {}, "hash": "5017d166bc71c281ee8265b1cb3929ad5d97c0f35b7cb1e33b024d95cd80848b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68a8a736-e74c-4709-a535-3aba786f31da", "node_type": "1", "metadata": {}, "hash": "029b61546cd9e176b62b4024165b31a94e52fff886011e54854b126d3dc096ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b356574-4dbb-4d47-86e1-fe6783e9a30e", "node_type": "1", "metadata": {}, "hash": "789117971bfe886fb680fe0f10c8a72bfa7a87cd4fc9a31492acba8810370832", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.7 Fast multiplication hardware. Rather than use a single 32-bit adder 31 times, this hardware \u201cunrolls the loop\u201d to use 31 adders and then organizes them to minimize delay.", "start_char_idx": 0, "end_char_idx": 181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b356574-4dbb-4d47-86e1-fe6783e9a30e": {"__data__": {"id_": "7b356574-4dbb-4d47-86e1-fe6783e9a30e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90d2538d-fc7c-42c9-8d67-322db4b5c1b5", "node_type": "4", "metadata": {}, "hash": "789117971bfe886fb680fe0f10c8a72bfa7a87cd4fc9a31492acba8810370832", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dc6af21-60a1-44e7-97ca-a5307eebe8aa", "node_type": "1", "metadata": {}, "hash": "5017d166bc71c281ee8265b1cb3929ad5d97c0f35b7cb1e33b024d95cd80848b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3ae6cfa-3659-4bc9-829e-e2a61a839bf3", "node_type": "1", "metadata": {}, "hash": "ce91a80316f7f6b7cd7a918de25456dcf885d8fe57629ecad190c0f3498704d8", "class_name": "RelatedNodeInfo"}}, "text": "In fact, multiply can go even faster than \ufb01ve add times because of", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3ae6cfa-3659-4bc9-829e-e2a61a839bf3": {"__data__": {"id_": "f3ae6cfa-3659-4bc9-829e-e2a61a839bf3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1a3adb64-953b-468d-ae07-c48bbd48a4ab", "node_type": "4", "metadata": {}, "hash": "ce91a80316f7f6b7cd7a918de25456dcf885d8fe57629ecad190c0f3498704d8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b356574-4dbb-4d47-86e1-fe6783e9a30e", "node_type": "1", "metadata": {}, "hash": "789117971bfe886fb680fe0f10c8a72bfa7a87cd4fc9a31492acba8810370832", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a197e3ed-1d75-44aa-8a41-a6a051c39dcb", "node_type": "1", "metadata": {}, "hash": "c146289d658eba5608259d2eb4e2dc02c63379f957b7dac35553f51e22a6617f", "class_name": "RelatedNodeInfo"}}, "text": "the use of carry save adders (see Section B.6 in because it is easy to pipeline such a design to be able to support many multiplies simultaneously (see Chapter 4).", "start_char_idx": 0, "end_char_idx": 163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a197e3ed-1d75-44aa-8a41-a6a051c39dcb": {"__data__": {"id_": "a197e3ed-1d75-44aa-8a41-a6a051c39dcb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1c1bf24f-5bed-4292-bdb8-339ad4e699fa", "node_type": "4", "metadata": {}, "hash": "c146289d658eba5608259d2eb4e2dc02c63379f957b7dac35553f51e22a6617f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3ae6cfa-3659-4bc9-829e-e2a61a839bf3", "node_type": "1", "metadata": {}, "hash": "ce91a80316f7f6b7cd7a918de25456dcf885d8fe57629ecad190c0f3498704d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "310c7a4e-2333-4eca-9e7f-37521c558d1b", "node_type": "1", "metadata": {}, "hash": "471537884d17d9883383b21ae9081a393c433b802fe4438eba6747b38e802488", "class_name": "RelatedNodeInfo"}}, "text": "Multiply in MIPS MIPS provides a separate pair of 32-bit registers to contain the 64-bit product, called Hi and Lo. To produce a properly signed or unsigned product, MIPS has two instructions: multiply (mult) and multiply unsigned (multu). To fetch the integer 32-bit product, the programmer uses move from lo (mflo). The MIPS assembler generates a pseudoinstruction for multiply that speci\ufb01es three general-purpose", "start_char_idx": 0, "end_char_idx": 415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "310c7a4e-2333-4eca-9e7f-37521c558d1b": {"__data__": {"id_": "310c7a4e-2333-4eca-9e7f-37521c558d1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "27ddbf86-ca33-4585-8cb7-53dbc3232863", "node_type": "4", "metadata": {}, "hash": "471537884d17d9883383b21ae9081a393c433b802fe4438eba6747b38e802488", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a197e3ed-1d75-44aa-8a41-a6a051c39dcb", "node_type": "1", "metadata": {}, "hash": "c146289d658eba5608259d2eb4e2dc02c63379f957b7dac35553f51e22a6617f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f779259-4d3c-48c1-bb41-e809e06e6a5e", "node_type": "1", "metadata": {}, "hash": "2b5c3bd64b48ece8acfcadfa6e082cb80d32ebd88a6ee47cfbafecab0a1aa3c9", "class_name": "RelatedNodeInfo"}}, "text": "registers, generating mflo and mfhi instructions to place the product into registers.", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f779259-4d3c-48c1-bb41-e809e06e6a5e": {"__data__": {"id_": "5f779259-4d3c-48c1-bb41-e809e06e6a5e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d299ccb0-ef2f-4c2b-af97-9c4a3f001b3f", "node_type": "4", "metadata": {}, "hash": "2b5c3bd64b48ece8acfcadfa6e082cb80d32ebd88a6ee47cfbafecab0a1aa3c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "310c7a4e-2333-4eca-9e7f-37521c558d1b", "node_type": "1", "metadata": {}, "hash": "471537884d17d9883383b21ae9081a393c433b802fe4438eba6747b38e802488", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eed830a-ce1b-4e9e-ad4d-e1d454c56a21", "node_type": "1", "metadata": {}, "hash": "c1b4906531d9e95f5f7a3acf03c0f09421f969319eb174916ff51f92dd809bbc", "class_name": "RelatedNodeInfo"}}, "text": "Summary Multiplication hardware simply shifts and adds, as derived from the paper-and-pencil method learned in grammar school. Compilers even use shift instructions for multiplications by powers of 2. With much more hardware we can do the adds in parallel, and do them much faster.", "start_char_idx": 0, "end_char_idx": 281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9eed830a-ce1b-4e9e-ad4d-e1d454c56a21": {"__data__": {"id_": "9eed830a-ce1b-4e9e-ad4d-e1d454c56a21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "546068a9-0f26-485c-a190-d1e7815c3ee0", "node_type": "4", "metadata": {}, "hash": "c1b4906531d9e95f5f7a3acf03c0f09421f969319eb174916ff51f92dd809bbc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f779259-4d3c-48c1-bb41-e809e06e6a5e", "node_type": "1", "metadata": {}, "hash": "2b5c3bd64b48ece8acfcadfa6e082cb80d32ebd88a6ee47cfbafecab0a1aa3c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a206ec9-3b2f-45e4-969e-737b648e876f", "node_type": "1", "metadata": {}, "hash": "ba873646f212aacacf0ac7cc3ba424306b0d95fc2178c8a80196a133dead4bb3", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/Software Interface Both MIPS multiply instructions ignore over\ufb02ow, so it is up to the software to check to see if the product is too big to \ufb01t in 32 bits. There is no over\ufb02ow if Hi is 0 for multu or the replicated sign of Lo for mult. The instruction move from hi (mfhi) can be used to transfer Hi to a general-purpose register to test for over\ufb02ow.", "start_char_idx": 0, "end_char_idx": 357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a206ec9-3b2f-45e4-969e-737b648e876f": {"__data__": {"id_": "9a206ec9-3b2f-45e4-969e-737b648e876f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3f3c868d-7a95-46c2-a96b-38c735ae0f45", "node_type": "4", "metadata": {}, "hash": "ba873646f212aacacf0ac7cc3ba424306b0d95fc2178c8a80196a133dead4bb3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9eed830a-ce1b-4e9e-ad4d-e1d454c56a21", "node_type": "1", "metadata": {}, "hash": "c1b4906531d9e95f5f7a3acf03c0f09421f969319eb174916ff51f92dd809bbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed2a4d82-46ee-4007-85a8-0c4f29e044f9", "node_type": "1", "metadata": {}, "hash": "5a46dbdc5a432823d85c5501a5defe5d859cebc367b2d48ef324878edb7d9f26", "class_name": "RelatedNodeInfo"}}, "text": "Latin for \u201cDivide and rule,\u201d ancient political maxim cited by Machiavelli, 1532", "start_char_idx": 0, "end_char_idx": 79, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed2a4d82-46ee-4007-85a8-0c4f29e044f9": {"__data__": {"id_": "ed2a4d82-46ee-4007-85a8-0c4f29e044f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0025c555-66e3-4093-8dbf-22a7f964604e", "node_type": "4", "metadata": {}, "hash": "5a46dbdc5a432823d85c5501a5defe5d859cebc367b2d48ef324878edb7d9f26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a206ec9-3b2f-45e4-969e-737b648e876f", "node_type": "1", "metadata": {}, "hash": "ba873646f212aacacf0ac7cc3ba424306b0d95fc2178c8a80196a133dead4bb3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bee743fa-cb63-4d2b-a938-a72b127cd6d2", "node_type": "1", "metadata": {}, "hash": "06ff82b18e3d44f9df4170aa41a0b1800d9843f05139cdc452539c1a10f0b29d", "class_name": "RelatedNodeInfo"}}, "text": "The reciprocal operation of multiply is divide, an operation that is", "start_char_idx": 0, "end_char_idx": 68, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bee743fa-cb63-4d2b-a938-a72b127cd6d2": {"__data__": {"id_": "bee743fa-cb63-4d2b-a938-a72b127cd6d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0b63d8ce-3b7c-4c01-9877-0d1f4ba0f0d3", "node_type": "4", "metadata": {}, "hash": "06ff82b18e3d44f9df4170aa41a0b1800d9843f05139cdc452539c1a10f0b29d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed2a4d82-46ee-4007-85a8-0c4f29e044f9", "node_type": "1", "metadata": {}, "hash": "5a46dbdc5a432823d85c5501a5defe5d859cebc367b2d48ef324878edb7d9f26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40eef8bb-2b4a-4a06-b523-d96bec478e3b", "node_type": "1", "metadata": {}, "hash": "ed2c70fedfdfe511c1907eee01e6ac7d1fd8cff354c1550b79d43f15a87b1e70", "class_name": "RelatedNodeInfo"}}, "text": "even less frequent and even more quirky. It even o\ufb00ers the opportunity to perform a mathematically invalid operation: dividing by 0.", "start_char_idx": 0, "end_char_idx": 132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40eef8bb-2b4a-4a06-b523-d96bec478e3b": {"__data__": {"id_": "40eef8bb-2b4a-4a06-b523-d96bec478e3b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "50d48a42-5f4c-45d5-8539-b46f83b5fc2a", "node_type": "4", "metadata": {}, "hash": "ed2c70fedfdfe511c1907eee01e6ac7d1fd8cff354c1550b79d43f15a87b1e70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bee743fa-cb63-4d2b-a938-a72b127cd6d2", "node_type": "1", "metadata": {}, "hash": "06ff82b18e3d44f9df4170aa41a0b1800d9843f05139cdc452539c1a10f0b29d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa", "node_type": "1", "metadata": {}, "hash": "8898d432b36e758b720d402037e7429ccfbe44229ebafadffaec88e5a9749eef", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s start with an example of long division using decimal numbers to recall the names of the operands and the grammar school division algorithm. For reasons similar to those in the previous section, we limit the decimal digits to just 0 or 1. The example is dividing 1,001,010ten by 1000ten:", "start_char_idx": 0, "end_char_idx": 292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa": {"__data__": {"id_": "17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc0506ad-4816-40e6-a71a-c6903d77a307", "node_type": "4", "metadata": {}, "hash": "8898d432b36e758b720d402037e7429ccfbe44229ebafadffaec88e5a9749eef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40eef8bb-2b4a-4a06-b523-d96bec478e3b", "node_type": "1", "metadata": {}, "hash": "ed2c70fedfdfe511c1907eee01e6ac7d1fd8cff354c1550b79d43f15a87b1e70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90e1087a-ebf6-4612-a8ff-e307e59fb18c", "node_type": "1", "metadata": {}, "hash": "a7d047a61eba6fea9e6ee91be4f5b0a68f8b3251737375520660232358d08d78", "class_name": "RelatedNodeInfo"}}, "text": "Divide\u2019s two operands, called the dividend and divisor, and the", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90e1087a-ebf6-4612-a8ff-e307e59fb18c": {"__data__": {"id_": "90e1087a-ebf6-4612-a8ff-e307e59fb18c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "01269aef-e414-4955-a267-a20e3f9bf88d", "node_type": "4", "metadata": {}, "hash": "a7d047a61eba6fea9e6ee91be4f5b0a68f8b3251737375520660232358d08d78", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa", "node_type": "1", "metadata": {}, "hash": "8898d432b36e758b720d402037e7429ccfbe44229ebafadffaec88e5a9749eef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1540a4c7-71b2-46ae-a120-ffb112a50308", "node_type": "1", "metadata": {}, "hash": "23eb79b1fbc23bc24604043ca190ed55a8e2278793aa177dbd12b9cd56912bf0", "class_name": "RelatedNodeInfo"}}, "text": "result, called the quotient, are accompanied by a second result, called the remainder. Here is another way to express the relationship between the components:", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1540a4c7-71b2-46ae-a120-ffb112a50308": {"__data__": {"id_": "1540a4c7-71b2-46ae-a120-ffb112a50308", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b10de07e-8b17-4863-a00d-fc99e883044e", "node_type": "4", "metadata": {}, "hash": "23eb79b1fbc23bc24604043ca190ed55a8e2278793aa177dbd12b9cd56912bf0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90e1087a-ebf6-4612-a8ff-e307e59fb18c", "node_type": "1", "metadata": {}, "hash": "a7d047a61eba6fea9e6ee91be4f5b0a68f8b3251737375520660232358d08d78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "444f244f-50e4-4443-b064-8c473723e46a", "node_type": "1", "metadata": {}, "hash": "a0ca5792f3238838e66792dd3ea26027311bcf85b937355f5466d3ea8408a10c", "class_name": "RelatedNodeInfo"}}, "text": "where the remainder is smaller than the divisor. Occasionally, programs use the divide instruction simply to get the remainder, ignoring the quotient.", "start_char_idx": 0, "end_char_idx": 150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "444f244f-50e4-4443-b064-8c473723e46a": {"__data__": {"id_": "444f244f-50e4-4443-b064-8c473723e46a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "726ab1a6-3676-4271-bb8a-93cbee35bf43", "node_type": "4", "metadata": {}, "hash": "a0ca5792f3238838e66792dd3ea26027311bcf85b937355f5466d3ea8408a10c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1540a4c7-71b2-46ae-a120-ffb112a50308", "node_type": "1", "metadata": {}, "hash": "23eb79b1fbc23bc24604043ca190ed55a8e2278793aa177dbd12b9cd56912bf0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "240aa3fa-cabc-4608-a169-f3c6646a76c7", "node_type": "1", "metadata": {}, "hash": "e6915032e80d2495fdd4096c1de21a3dd8ae1e144e9e43783f035465eb6add16", "class_name": "RelatedNodeInfo"}}, "text": "dividend A number being divided.", "start_char_idx": 0, "end_char_idx": 32, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "240aa3fa-cabc-4608-a169-f3c6646a76c7": {"__data__": {"id_": "240aa3fa-cabc-4608-a169-f3c6646a76c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "736cf82e-c1fa-4af7-9d46-4efe2f833dfd", "node_type": "4", "metadata": {}, "hash": "e6915032e80d2495fdd4096c1de21a3dd8ae1e144e9e43783f035465eb6add16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "444f244f-50e4-4443-b064-8c473723e46a", "node_type": "1", "metadata": {}, "hash": "a0ca5792f3238838e66792dd3ea26027311bcf85b937355f5466d3ea8408a10c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89716225-2cc8-4995-b518-7e9a2d987a07", "node_type": "1", "metadata": {}, "hash": "853f926fb9a3d9231543a13c280d7263c3d05c867d42c77f11e3d4fbca700bde", "class_name": "RelatedNodeInfo"}}, "text": "divisor A number that the dividend is divided by.", "start_char_idx": 0, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "89716225-2cc8-4995-b518-7e9a2d987a07": {"__data__": {"id_": "89716225-2cc8-4995-b518-7e9a2d987a07", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c17d48f-2e5e-4987-95d9-0a46a4d77c25", "node_type": "4", "metadata": {}, "hash": "853f926fb9a3d9231543a13c280d7263c3d05c867d42c77f11e3d4fbca700bde", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "240aa3fa-cabc-4608-a169-f3c6646a76c7", "node_type": "1", "metadata": {}, "hash": "e6915032e80d2495fdd4096c1de21a3dd8ae1e144e9e43783f035465eb6add16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c06307b8-e7e8-4c14-a1c7-41f15a8c16e0", "node_type": "1", "metadata": {}, "hash": "cb40bf849dc6c80af5368aad6f6724d99bd872ccb6d8b94ee85ff10a2ffa292f", "class_name": "RelatedNodeInfo"}}, "text": "quotient The primary result of a division; a number that when multiplied by the divisor and added to the remainder produces the dividend.", "start_char_idx": 0, "end_char_idx": 137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c06307b8-e7e8-4c14-a1c7-41f15a8c16e0": {"__data__": {"id_": "c06307b8-e7e8-4c14-a1c7-41f15a8c16e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7888b8f8-6b8e-4ec8-bf8d-73dd8af22270", "node_type": "4", "metadata": {}, "hash": "cb40bf849dc6c80af5368aad6f6724d99bd872ccb6d8b94ee85ff10a2ffa292f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89716225-2cc8-4995-b518-7e9a2d987a07", "node_type": "1", "metadata": {}, "hash": "853f926fb9a3d9231543a13c280d7263c3d05c867d42c77f11e3d4fbca700bde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c9d0583-6c3a-4b93-912e-026ab46a6fd7", "node_type": "1", "metadata": {}, "hash": "83064883aa3f2a5681e56e9fd4a77245e345907cec02983b7a6ac61802632d96", "class_name": "RelatedNodeInfo"}}, "text": "remainder The secondary result of a division; a number that when added to the product of the quotient and the divisor produces the dividend.", "start_char_idx": 0, "end_char_idx": 140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c9d0583-6c3a-4b93-912e-026ab46a6fd7": {"__data__": {"id_": "3c9d0583-6c3a-4b93-912e-026ab46a6fd7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b3321a2-e371-4643-9850-a6a33ecc4955", "node_type": "4", "metadata": {}, "hash": "83064883aa3f2a5681e56e9fd4a77245e345907cec02983b7a6ac61802632d96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c06307b8-e7e8-4c14-a1c7-41f15a8c16e0", "node_type": "1", "metadata": {}, "hash": "cb40bf849dc6c80af5368aad6f6724d99bd872ccb6d8b94ee85ff10a2ffa292f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9469608-11d5-4ed9-9974-02017fb12741", "node_type": "1", "metadata": {}, "hash": "a3ed5be6050a3e8314e69ba2434c450ce9e0282a4f3e91651517a20d80f88074", "class_name": "RelatedNodeInfo"}}, "text": "The basic grammar school division algorithm tries to see how big a number can be subtracted, creating a digit of the quotient on each a\u0000empt. Our carefully selected decimal example uses only the numbers 0 and 1, so it\u2019s easy to \ufb01gure out how many times the divisor goes into the portion of the dividend: it\u2019s either 0 times or 1 time. Binary numbers contain only 0 or 1, so binary division is restricted to these two choices, thereby simplifying binary division. Let\u2019s assume that both the dividend and the divisor are positive", "start_char_idx": 0, "end_char_idx": 527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9469608-11d5-4ed9-9974-02017fb12741": {"__data__": {"id_": "b9469608-11d5-4ed9-9974-02017fb12741", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbd32d7e-9568-49a4-88e9-fdae9b2f0587", "node_type": "4", "metadata": {}, "hash": "a3ed5be6050a3e8314e69ba2434c450ce9e0282a4f3e91651517a20d80f88074", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c9d0583-6c3a-4b93-912e-026ab46a6fd7", "node_type": "1", "metadata": {}, "hash": "83064883aa3f2a5681e56e9fd4a77245e345907cec02983b7a6ac61802632d96", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ecc8d4f-a981-4293-8454-b8a7ef8b42e0", "node_type": "1", "metadata": {}, "hash": "4f9779170450d599d7f45ddd8a796458dd68d1d9e3afd43d2163321bdf4a3462", "class_name": "RelatedNodeInfo"}}, "text": "and hence the quotient and the remainder are nonnegative. The", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ecc8d4f-a981-4293-8454-b8a7ef8b42e0": {"__data__": {"id_": "8ecc8d4f-a981-4293-8454-b8a7ef8b42e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e6c630ef-0145-4025-b43c-9c99389801c6", "node_type": "4", "metadata": {}, "hash": "4f9779170450d599d7f45ddd8a796458dd68d1d9e3afd43d2163321bdf4a3462", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9469608-11d5-4ed9-9974-02017fb12741", "node_type": "1", "metadata": {}, "hash": "a3ed5be6050a3e8314e69ba2434c450ce9e0282a4f3e91651517a20d80f88074", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c555cbe6-f03b-4677-9ed5-0088602fed21", "node_type": "1", "metadata": {}, "hash": "9d4db36f307b09afb7e0fb7501a3c2a1cccca4bf4721493204121ef271e2f140", "class_name": "RelatedNodeInfo"}}, "text": "division operands and both results are 32-bit values, and we will ignore the sign for now.", "start_char_idx": 0, "end_char_idx": 90, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c555cbe6-f03b-4677-9ed5-0088602fed21": {"__data__": {"id_": "c555cbe6-f03b-4677-9ed5-0088602fed21", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "23bd1efe-ef16-4565-aecf-60df4efca582", "node_type": "4", "metadata": {}, "hash": "9d4db36f307b09afb7e0fb7501a3c2a1cccca4bf4721493204121ef271e2f140", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ecc8d4f-a981-4293-8454-b8a7ef8b42e0", "node_type": "1", "metadata": {}, "hash": "4f9779170450d599d7f45ddd8a796458dd68d1d9e3afd43d2163321bdf4a3462", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb8ad650-3530-47fc-a9e3-9994cec7cce0", "node_type": "1", "metadata": {}, "hash": "70f2165f87fd3ee08e4e4d6aca7bb6968c63284867ec2f9f15d4b78c8ed28326", "class_name": "RelatedNodeInfo"}}, "text": "A Division Algorithm and Hardware Figure 3.8 shows hardware to mimic our grammar school algorithm. We start with the 32-bit Quotient register set to 0. Each iteration of the algorithm needs to move the divisor to the right one digit, so we start with the divisor placed in the left half of the 64-bit Divisor register and shift it right 1 bit each step to align it with the dividend. The Remainder register is initialized with the dividend.", "start_char_idx": 0, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb8ad650-3530-47fc-a9e3-9994cec7cce0": {"__data__": {"id_": "cb8ad650-3530-47fc-a9e3-9994cec7cce0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7156ed31-8a22-4684-ad4a-570efed464d9", "node_type": "4", "metadata": {}, "hash": "70f2165f87fd3ee08e4e4d6aca7bb6968c63284867ec2f9f15d4b78c8ed28326", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c555cbe6-f03b-4677-9ed5-0088602fed21", "node_type": "1", "metadata": {}, "hash": "9d4db36f307b09afb7e0fb7501a3c2a1cccca4bf4721493204121ef271e2f140", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa8a9c25-9361-41fb-b33a-17c6e260dc8b", "node_type": "1", "metadata": {}, "hash": "14831a8674493061dca8ecc3e546805ba99ee147053ee2924a2edacdbd3ef42e", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.8 First version of the division hardware. The Divisor register, ALU, and Remainder register are all 64 bits wide, with only the Quotient register being 32 bits. The 32-bit divisor starts in the left half of the Divisor register and is shifted right 1 bit each iteration. The remainder is initialized with the dividend. Control decides when to shift the Divisor and Quotient registers and when to write the new value into the Remainder register.", "start_char_idx": 0, "end_char_idx": 453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa8a9c25-9361-41fb-b33a-17c6e260dc8b": {"__data__": {"id_": "aa8a9c25-9361-41fb-b33a-17c6e260dc8b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69dbae18-c6b1-450a-8d6e-9323a7dbb39f", "node_type": "4", "metadata": {}, "hash": "14831a8674493061dca8ecc3e546805ba99ee147053ee2924a2edacdbd3ef42e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb8ad650-3530-47fc-a9e3-9994cec7cce0", "node_type": "1", "metadata": {}, "hash": "70f2165f87fd3ee08e4e4d6aca7bb6968c63284867ec2f9f15d4b78c8ed28326", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "342e14be-bcb1-47bb-b2b1-052f553bb98c", "node_type": "1", "metadata": {}, "hash": "8946a84f904bab19c9820d70ddb37e8be065b0ff96a88d1b13134a110fd34c52", "class_name": "RelatedNodeInfo"}}, "text": "a human, the computer isn\u2019t smart enough to know in advance whether the divisor is smaller than the dividend. It must \ufb01rst subtract the divisor in step 1; remember that this is how we performed the comparison in the set on less than instruction. If the", "start_char_idx": 0, "end_char_idx": 252, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "342e14be-bcb1-47bb-b2b1-052f553bb98c": {"__data__": {"id_": "342e14be-bcb1-47bb-b2b1-052f553bb98c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "11bba3a9-8aed-4712-85ea-ea81ed673de2", "node_type": "4", "metadata": {}, "hash": "8946a84f904bab19c9820d70ddb37e8be065b0ff96a88d1b13134a110fd34c52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa8a9c25-9361-41fb-b33a-17c6e260dc8b", "node_type": "1", "metadata": {}, "hash": "14831a8674493061dca8ecc3e546805ba99ee147053ee2924a2edacdbd3ef42e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d9b984d-6eb5-46a0-882e-f045f5f463ec", "node_type": "1", "metadata": {}, "hash": "fd0cd43029505daf9fd6c881519e40451bd8662f4061df6f8936baa1c0ce787f", "class_name": "RelatedNodeInfo"}}, "text": "p result is positive, the divisor was smaller or equal to the dividend, so we generate a 1 in the quotient (step 2a). If the result is negative, the next step is to restore the original value by adding the divisor back to the remainder and generate a 0 in the quotient (step 2b). The divisor is shifted right and then we iterate again. The remainder and quotient will be found in their namesake registers after the iterations are complete.", "start_char_idx": 0, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d9b984d-6eb5-46a0-882e-f045f5f463ec": {"__data__": {"id_": "1d9b984d-6eb5-46a0-882e-f045f5f463ec", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d3053965-45b7-4112-9952-222435a95688", "node_type": "4", "metadata": {}, "hash": "fd0cd43029505daf9fd6c881519e40451bd8662f4061df6f8936baa1c0ce787f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "342e14be-bcb1-47bb-b2b1-052f553bb98c", "node_type": "1", "metadata": {}, "hash": "8946a84f904bab19c9820d70ddb37e8be065b0ff96a88d1b13134a110fd34c52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8563b831-6fe8-4889-b2a8-105e06931aaa", "node_type": "1", "metadata": {}, "hash": "ff39aaa631cc29988377622c607bbf357332a472be052281d9bd093333818931", "class_name": "RelatedNodeInfo"}}, "text": "Example Using a 4-bit version of the algorithm to save pages, let\u2019s try dividing 7ten by 2ten, or 0000 0111two by 0010two.", "start_char_idx": 0, "end_char_idx": 122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8563b831-6fe8-4889-b2a8-105e06931aaa": {"__data__": {"id_": "8563b831-6fe8-4889-b2a8-105e06931aaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a601cc7f-2518-43ca-8fdf-cda207c8c65f", "node_type": "4", "metadata": {}, "hash": "ff39aaa631cc29988377622c607bbf357332a472be052281d9bd093333818931", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d9b984d-6eb5-46a0-882e-f045f5f463ec", "node_type": "1", "metadata": {}, "hash": "fd0cd43029505daf9fd6c881519e40451bd8662f4061df6f8936baa1c0ce787f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "21771d7b-17b1-4b33-a8e3-aef2f551d489", "node_type": "1", "metadata": {}, "hash": "d7e715bc78a19d2b57783a870927c26cf96fb79349a5ef4add9d9a5bec2ba185", "class_name": "RelatedNodeInfo"}}, "text": "Answer Figure 3.10 shows the value of each register for each of the steps, with the quotient being 3ten and the remainder 1ten. Notice that the test in step 2 of whether the remainder is positive or negative simply tests whether the sign bit of the Remainder register is a 0 or 1. The surprising requirement of this algorithm is that it takes n + 1 steps to get the proper quotient and remainder.", "start_char_idx": 0, "end_char_idx": 396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "21771d7b-17b1-4b33-a8e3-aef2f551d489": {"__data__": {"id_": "21771d7b-17b1-4b33-a8e3-aef2f551d489", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0b5a5c19-23e7-497c-83ae-a780d950c83a", "node_type": "4", "metadata": {}, "hash": "d7e715bc78a19d2b57783a870927c26cf96fb79349a5ef4add9d9a5bec2ba185", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8563b831-6fe8-4889-b2a8-105e06931aaa", "node_type": "1", "metadata": {}, "hash": "ff39aaa631cc29988377622c607bbf357332a472be052281d9bd093333818931", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22e997e6-e747-45af-8ca2-36b3d3a1ddc9", "node_type": "1", "metadata": {}, "hash": "18803433005a40bf3db8630c93c792269d685a2c88f901fc1fffc15c3ff01b25", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.10 Division example using the algorithm in Figure 3.9. The bit examined to determine the next step is circled in color.", "start_char_idx": 0, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22e997e6-e747-45af-8ca2-36b3d3a1ddc9": {"__data__": {"id_": "22e997e6-e747-45af-8ca2-36b3d3a1ddc9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c43d7ebc-2c1a-43ce-8999-13f8dbaeda77", "node_type": "4", "metadata": {}, "hash": "18803433005a40bf3db8630c93c792269d685a2c88f901fc1fffc15c3ff01b25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "21771d7b-17b1-4b33-a8e3-aef2f551d489", "node_type": "1", "metadata": {}, "hash": "d7e715bc78a19d2b57783a870927c26cf96fb79349a5ef4add9d9a5bec2ba185", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "78e1ea45-692b-4c73-a7a0-28ac78cbc2ed", "node_type": "1", "metadata": {}, "hash": "34cc96445612afb0eae38dca8bedadd730acd7d1210f47a15b85c18022785069", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.9 A division algorithm, using the hardware in Figure 3.8. If the remainder is positive, the divisor did go into the dividend, so step 2a generates a 1 in the quotient. A negative remainder after step 1 means that the divisor did not go into the dividend, so step 2b generates a 0 in the quotient and adds the divisor to the remainder, thereby reversing the subtraction of step 1. The final shift, in step 3, aligns the divisor properly, relative to the dividend for the next iteration. These steps are repeated 33 times.", "start_char_idx": 0, "end_char_idx": 529, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "78e1ea45-692b-4c73-a7a0-28ac78cbc2ed": {"__data__": {"id_": "78e1ea45-692b-4c73-a7a0-28ac78cbc2ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e0a1f41-8590-4eea-8989-a86a6875e25f", "node_type": "4", "metadata": {}, "hash": "34cc96445612afb0eae38dca8bedadd730acd7d1210f47a15b85c18022785069", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22e997e6-e747-45af-8ca2-36b3d3a1ddc9", "node_type": "1", "metadata": {}, "hash": "18803433005a40bf3db8630c93c792269d685a2c88f901fc1fffc15c3ff01b25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b82bc74e-b918-4665-b7bf-8d3ce6ede9f7", "node_type": "1", "metadata": {}, "hash": "22e9bc0959b8a1dbde58717f3a33ba5f9ea37f0b2150021ed596cbd324b4108f", "class_name": "RelatedNodeInfo"}}, "text": "This algorithm and hardware can be re\ufb01ned to be faster and cheaper. The speed-up comes from shifting the operands and the quotient simultaneously with the subtraction. This re\ufb01nement halves the width of the adder and registers by noticing where there are unused portions of registers and adders. Figure 3.11 shows the revised hardware.", "start_char_idx": 0, "end_char_idx": 335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b82bc74e-b918-4665-b7bf-8d3ce6ede9f7": {"__data__": {"id_": "b82bc74e-b918-4665-b7bf-8d3ce6ede9f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bddeaf4d-1c10-462a-a253-8056f23997b1", "node_type": "4", "metadata": {}, "hash": "22e9bc0959b8a1dbde58717f3a33ba5f9ea37f0b2150021ed596cbd324b4108f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78e1ea45-692b-4c73-a7a0-28ac78cbc2ed", "node_type": "1", "metadata": {}, "hash": "34cc96445612afb0eae38dca8bedadd730acd7d1210f47a15b85c18022785069", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db8ab397-c013-4cff-bb07-5848898647b2", "node_type": "1", "metadata": {}, "hash": "ca2dcfe7a388fdf37e379d55918153cbb86b1b2d26f4e9498c81e007aec3fac6", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.11 An improved version of the division hardware. The Divisor register, ALU, and Quotient register are all 32 bits wide, with only the Remainder register left at 64 bits. Compared to Figure 3.8, the ALU and Divisor registers are halved and the remainder is shifted left. This version also combines the Quotient register with the right half of the Remainder register. (As in Figure 3.6, the Remainder register should really be 65 bits to make sure the carry out of the adder is not lost.)", "start_char_idx": 0, "end_char_idx": 495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db8ab397-c013-4cff-bb07-5848898647b2": {"__data__": {"id_": "db8ab397-c013-4cff-bb07-5848898647b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0bdb2cd6-cb98-4735-b9f3-08be3e727391", "node_type": "4", "metadata": {}, "hash": "ca2dcfe7a388fdf37e379d55918153cbb86b1b2d26f4e9498c81e007aec3fac6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b82bc74e-b918-4665-b7bf-8d3ce6ede9f7", "node_type": "1", "metadata": {}, "hash": "22e9bc0959b8a1dbde58717f3a33ba5f9ea37f0b2150021ed596cbd324b4108f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6757937-ee09-40ab-99f9-2c7cd86056f8", "node_type": "1", "metadata": {}, "hash": "87e2f987ef428f2869f7bb11a75da48f8f4e214ded51a297683232efcebb0918", "class_name": "RelatedNodeInfo"}}, "text": "Signed Division So far, we have ignored signed numbers in division. The simplest solution is to remember the signs of the divisor and dividend and then negate the quotient if the signs disagree.", "start_char_idx": 0, "end_char_idx": 194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6757937-ee09-40ab-99f9-2c7cd86056f8": {"__data__": {"id_": "a6757937-ee09-40ab-99f9-2c7cd86056f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4c924759-88bf-4338-878f-503af56598cc", "node_type": "4", "metadata": {}, "hash": "87e2f987ef428f2869f7bb11a75da48f8f4e214ded51a297683232efcebb0918", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db8ab397-c013-4cff-bb07-5848898647b2", "node_type": "1", "metadata": {}, "hash": "ca2dcfe7a388fdf37e379d55918153cbb86b1b2d26f4e9498c81e007aec3fac6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "17066d66-b608-4e18-afea-48b1296adb9b", "node_type": "1", "metadata": {}, "hash": "ba8279eba37e3a6ba01044485d8cbf3afc252cc0886e45d530d0b990077649d0", "class_name": "RelatedNodeInfo"}}, "text": "The one complication of signed division is that we must also set the sign of the remainder. Remember that the following equation must always hold:", "start_char_idx": 0, "end_char_idx": 146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17066d66-b608-4e18-afea-48b1296adb9b": {"__data__": {"id_": "17066d66-b608-4e18-afea-48b1296adb9b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "885c0ae7-aa50-4a2e-951e-1f31f51f4e87", "node_type": "4", "metadata": {}, "hash": "ba8279eba37e3a6ba01044485d8cbf3afc252cc0886e45d530d0b990077649d0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6757937-ee09-40ab-99f9-2c7cd86056f8", "node_type": "1", "metadata": {}, "hash": "87e2f987ef428f2869f7bb11a75da48f8f4e214ded51a297683232efcebb0918", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ee0fa23-dec9-4ecf-8134-d267721662ad", "node_type": "1", "metadata": {}, "hash": "845079f6eeaecff0a7faa8facbf6180e82053137f3a6bd4622818bb2a6009e27", "class_name": "RelatedNodeInfo"}}, "text": "To understand how to set the sign of the remainder, let\u2019s look at the example of dividing all the combinations of \u00b1 7ten by \u00b1 2ten. The \ufb01rst case is easy:", "start_char_idx": 0, "end_char_idx": 154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6ee0fa23-dec9-4ecf-8134-d267721662ad": {"__data__": {"id_": "6ee0fa23-dec9-4ecf-8134-d267721662ad", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56b1b63a-cc4b-4b11-8525-e7a31ce4560b", "node_type": "4", "metadata": {}, "hash": "845079f6eeaecff0a7faa8facbf6180e82053137f3a6bd4622818bb2a6009e27", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "17066d66-b608-4e18-afea-48b1296adb9b", "node_type": "1", "metadata": {}, "hash": "ba8279eba37e3a6ba01044485d8cbf3afc252cc0886e45d530d0b990077649d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a93d3cf2-3902-4a6b-9c84-68dce525cc3f", "node_type": "1", "metadata": {}, "hash": "1c6e95a1557f31b9dabd9b029898e581348ae57ac2f0082bb765e27c15b2e40b", "class_name": "RelatedNodeInfo"}}, "text": "Checking the results:", "start_char_idx": 0, "end_char_idx": 21, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a93d3cf2-3902-4a6b-9c84-68dce525cc3f": {"__data__": {"id_": "a93d3cf2-3902-4a6b-9c84-68dce525cc3f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c6ce5105-0940-4931-940d-5e959cbbdcf8", "node_type": "4", "metadata": {}, "hash": "1c6e95a1557f31b9dabd9b029898e581348ae57ac2f0082bb765e27c15b2e40b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ee0fa23-dec9-4ecf-8134-d267721662ad", "node_type": "1", "metadata": {}, "hash": "845079f6eeaecff0a7faa8facbf6180e82053137f3a6bd4622818bb2a6009e27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "737e1234-5f08-4793-90da-6a3535d51c14", "node_type": "1", "metadata": {}, "hash": "066d212e7d72793b8a02325a2e11dfb498199dee27dcee5806c9a1745bb4c103", "class_name": "RelatedNodeInfo"}}, "text": "If we change the sign of the dividend, the quotient must change", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "737e1234-5f08-4793-90da-6a3535d51c14": {"__data__": {"id_": "737e1234-5f08-4793-90da-6a3535d51c14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffdb48c1-540f-4e87-82d4-13bd9f06c5df", "node_type": "4", "metadata": {}, "hash": "066d212e7d72793b8a02325a2e11dfb498199dee27dcee5806c9a1745bb4c103", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a93d3cf2-3902-4a6b-9c84-68dce525cc3f", "node_type": "1", "metadata": {}, "hash": "1c6e95a1557f31b9dabd9b029898e581348ae57ac2f0082bb765e27c15b2e40b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13e480ec-709e-4183-89bc-d1900d39f0aa", "node_type": "1", "metadata": {}, "hash": "a0b88fa426a3f3cc4319be2d0e767f0d151766b67d1b9bd733cb39b68cfee373", "class_name": "RelatedNodeInfo"}}, "text": "Rewriting our basic formula to calculate the remainder:", "start_char_idx": 0, "end_char_idx": 55, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13e480ec-709e-4183-89bc-d1900d39f0aa": {"__data__": {"id_": "13e480ec-709e-4183-89bc-d1900d39f0aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a50bb10-c4de-4622-93df-d85ec4f157fb", "node_type": "4", "metadata": {}, "hash": "a0b88fa426a3f3cc4319be2d0e767f0d151766b67d1b9bd733cb39b68cfee373", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "737e1234-5f08-4793-90da-6a3535d51c14", "node_type": "1", "metadata": {}, "hash": "066d212e7d72793b8a02325a2e11dfb498199dee27dcee5806c9a1745bb4c103", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fbfabf9-db30-4ed3-a1b9-05c6ea471b55", "node_type": "1", "metadata": {}, "hash": "aa7e12e97e96ce10da6e2343c7ddde9c5eeebfaae4a562007d98a7543fe40e31", "class_name": "RelatedNodeInfo"}}, "text": "Checking the results again:", "start_char_idx": 0, "end_char_idx": 27, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8fbfabf9-db30-4ed3-a1b9-05c6ea471b55": {"__data__": {"id_": "8fbfabf9-db30-4ed3-a1b9-05c6ea471b55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0a27ba6a-8183-4f50-8529-b4c4b33196cb", "node_type": "4", "metadata": {}, "hash": "aa7e12e97e96ce10da6e2343c7ddde9c5eeebfaae4a562007d98a7543fe40e31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13e480ec-709e-4183-89bc-d1900d39f0aa", "node_type": "1", "metadata": {}, "hash": "a0b88fa426a3f3cc4319be2d0e767f0d151766b67d1b9bd733cb39b68cfee373", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "417bb67c-9197-42f8-8218-2edc17cadfac", "node_type": "1", "metadata": {}, "hash": "0d184c09235b5c35bb899b19fbec44da21ec28d40599366bcf2b74e8cb2997d2", "class_name": "RelatedNodeInfo"}}, "text": "The reason the answer isn\u2019t a quotient of \u2212 4 and a remainder of + 1, which would also \ufb01t this formula, is that the absolute value of the quotient would then change depending on the sign of the dividend and the divisor! Clearly, if", "start_char_idx": 0, "end_char_idx": 231, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "417bb67c-9197-42f8-8218-2edc17cadfac": {"__data__": {"id_": "417bb67c-9197-42f8-8218-2edc17cadfac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dc11b16e-c889-426a-8745-23ee8b2c5ae1", "node_type": "4", "metadata": {}, "hash": "0d184c09235b5c35bb899b19fbec44da21ec28d40599366bcf2b74e8cb2997d2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fbfabf9-db30-4ed3-a1b9-05c6ea471b55", "node_type": "1", "metadata": {}, "hash": "aa7e12e97e96ce10da6e2343c7ddde9c5eeebfaae4a562007d98a7543fe40e31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcc94ce7-b009-4954-a1a1-748e0c15acf3", "node_type": "1", "metadata": {}, "hash": "6f1f2858234e757c6d2953ab767efa6f0d4f71b58605214827d6020802a43165", "class_name": "RelatedNodeInfo"}}, "text": "programming would be an even greater challenge. This anomalous behavior is avoided by following the rule that the dividend and remainder must have the same signs, no ma\u0000er what the signs of the divisor and quotient.", "start_char_idx": 0, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcc94ce7-b009-4954-a1a1-748e0c15acf3": {"__data__": {"id_": "fcc94ce7-b009-4954-a1a1-748e0c15acf3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6f6905cb-357a-4a63-bf29-5ed3fb4eab17", "node_type": "4", "metadata": {}, "hash": "6f1f2858234e757c6d2953ab767efa6f0d4f71b58605214827d6020802a43165", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "417bb67c-9197-42f8-8218-2edc17cadfac", "node_type": "1", "metadata": {}, "hash": "0d184c09235b5c35bb899b19fbec44da21ec28d40599366bcf2b74e8cb2997d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f7d10f9-369b-4853-a291-fb72e68cabf3", "node_type": "1", "metadata": {}, "hash": "497e78ad81d8d5127f97836b282e9677f0f54801a8711966ead2f5e68491b302", "class_name": "RelatedNodeInfo"}}, "text": "We calculate the other combinations by following the same rule:", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f7d10f9-369b-4853-a291-fb72e68cabf3": {"__data__": {"id_": "6f7d10f9-369b-4853-a291-fb72e68cabf3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ef23d3a4-21e3-4491-a810-4a3a9e074b39", "node_type": "4", "metadata": {}, "hash": "497e78ad81d8d5127f97836b282e9677f0f54801a8711966ead2f5e68491b302", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcc94ce7-b009-4954-a1a1-748e0c15acf3", "node_type": "1", "metadata": {}, "hash": "6f1f2858234e757c6d2953ab767efa6f0d4f71b58605214827d6020802a43165", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f779793a-597d-4ffc-9ea3-955dd7b25e0d", "node_type": "1", "metadata": {}, "hash": "4390c0e7cbcfed6be2b9ed52fdf753a767ad9f0c080fa02ee9ce179721a25896", "class_name": "RelatedNodeInfo"}}, "text": "Thus the correctly signed division algorithm negates the quotient", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f779793a-597d-4ffc-9ea3-955dd7b25e0d": {"__data__": {"id_": "f779793a-597d-4ffc-9ea3-955dd7b25e0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fe5e191f-f29f-4075-a62f-512139a44265", "node_type": "4", "metadata": {}, "hash": "4390c0e7cbcfed6be2b9ed52fdf753a767ad9f0c080fa02ee9ce179721a25896", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f7d10f9-369b-4853-a291-fb72e68cabf3", "node_type": "1", "metadata": {}, "hash": "497e78ad81d8d5127f97836b282e9677f0f54801a8711966ead2f5e68491b302", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87da93c0-db0f-4afe-a3fa-ec24eb256125", "node_type": "1", "metadata": {}, "hash": "062ad1594a4bd8a446d4fd3df39ff6fd84c2b93705d1652761ea5433476f4180", "class_name": "RelatedNodeInfo"}}, "text": "if the signs of the operands are opposite and makes the sign of the nonzero remainder match the dividend.", "start_char_idx": 0, "end_char_idx": 105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87da93c0-db0f-4afe-a3fa-ec24eb256125": {"__data__": {"id_": "87da93c0-db0f-4afe-a3fa-ec24eb256125", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56b4c20-e1cb-45c3-9932-d2dffdac61e3", "node_type": "4", "metadata": {}, "hash": "062ad1594a4bd8a446d4fd3df39ff6fd84c2b93705d1652761ea5433476f4180", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f779793a-597d-4ffc-9ea3-955dd7b25e0d", "node_type": "1", "metadata": {}, "hash": "4390c0e7cbcfed6be2b9ed52fdf753a767ad9f0c080fa02ee9ce179721a25896", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d39d561-d579-4f02-b825-9a6bf7982b1a", "node_type": "1", "metadata": {}, "hash": "1eccf93125d1f85f98e0cc1846018847f3631b31f0e1453025a80ae58eadcb1d", "class_name": "RelatedNodeInfo"}}, "text": "Faster Division Moore\u2019s Law applies to division hardware as well as multiplication, so we would like to be able to speed up division by throwing hardware at it. We used many adders to speed up multiply, but we cannot do the same trick for divide. The reason is that we need to know the sign of the di\ufb00erence before we can perform the next step of the algorithm, whereas with multiply we could calculate the 32 partial products immediately.", "start_char_idx": 0, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d39d561-d579-4f02-b825-9a6bf7982b1a": {"__data__": {"id_": "2d39d561-d579-4f02-b825-9a6bf7982b1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22df2817-82e8-4a2e-bcd1-74842f1b7e9d", "node_type": "4", "metadata": {}, "hash": "1eccf93125d1f85f98e0cc1846018847f3631b31f0e1453025a80ae58eadcb1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87da93c0-db0f-4afe-a3fa-ec24eb256125", "node_type": "1", "metadata": {}, "hash": "062ad1594a4bd8a446d4fd3df39ff6fd84c2b93705d1652761ea5433476f4180", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd841c0b-a27d-4bf8-bdb7-aab004a5967c", "node_type": "1", "metadata": {}, "hash": "54115e7a9790f6867f4cc6165bd8df096ff343ffbe6c10227579ad29649222f8", "class_name": "RelatedNodeInfo"}}, "text": "There are techniques to produce more than one bit of the quotient per step. The SRT division technique tries to predict several quotient bits per step, using a table lookup based on the upper bits of the dividend and remainder. It relies on subsequent steps to correct wrong predictions. A typical value today is 4 bits. The key is guessing the value to subtract. With binary division, there is only a single choice. These algorithms use 6 bits from the remainder and 4", "start_char_idx": 0, "end_char_idx": 469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd841c0b-a27d-4bf8-bdb7-aab004a5967c": {"__data__": {"id_": "dd841c0b-a27d-4bf8-bdb7-aab004a5967c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d8f7e772-f388-40d2-8b63-8d7ed581b37c", "node_type": "4", "metadata": {}, "hash": "54115e7a9790f6867f4cc6165bd8df096ff343ffbe6c10227579ad29649222f8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d39d561-d579-4f02-b825-9a6bf7982b1a", "node_type": "1", "metadata": {}, "hash": "1eccf93125d1f85f98e0cc1846018847f3631b31f0e1453025a80ae58eadcb1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b0a6a96-990c-4f02-844c-f2658b3e4f72", "node_type": "1", "metadata": {}, "hash": "b4ade634a48150808c2ad5fa5843475902dd4f65c8975425d7d3dc854475503b", "class_name": "RelatedNodeInfo"}}, "text": "bits from the divisor to index a table that determines the guess for each step.", "start_char_idx": 0, "end_char_idx": 79, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b0a6a96-990c-4f02-844c-f2658b3e4f72": {"__data__": {"id_": "4b0a6a96-990c-4f02-844c-f2658b3e4f72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d674128c-63d1-4802-b3fa-42d450b99b82", "node_type": "4", "metadata": {}, "hash": "b4ade634a48150808c2ad5fa5843475902dd4f65c8975425d7d3dc854475503b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd841c0b-a27d-4bf8-bdb7-aab004a5967c", "node_type": "1", "metadata": {}, "hash": "54115e7a9790f6867f4cc6165bd8df096ff343ffbe6c10227579ad29649222f8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c5758d3-df1f-4141-87f9-e92cdfec31b0", "node_type": "1", "metadata": {}, "hash": "545bc619cccf601e4e9addc7c83e7590603bf0725ba3122afe1a7f62d2702de1", "class_name": "RelatedNodeInfo"}}, "text": "The accuracy of this fast method depends on having proper values", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c5758d3-df1f-4141-87f9-e92cdfec31b0": {"__data__": {"id_": "4c5758d3-df1f-4141-87f9-e92cdfec31b0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4da90f9a-6464-407b-9ec5-085f74e1d997", "node_type": "4", "metadata": {}, "hash": "545bc619cccf601e4e9addc7c83e7590603bf0725ba3122afe1a7f62d2702de1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b0a6a96-990c-4f02-844c-f2658b3e4f72", "node_type": "1", "metadata": {}, "hash": "b4ade634a48150808c2ad5fa5843475902dd4f65c8975425d7d3dc854475503b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05b9d29f-cb36-415a-a61e-e521ad432b17", "node_type": "1", "metadata": {}, "hash": "2762ff6382ca5751834d610163dbc65375e37509c8123d6d41b50ad5b3cd5f57", "class_name": "RelatedNodeInfo"}}, "text": "in the lookup table. The fallacy on page 239 in Section 3.9 shows", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05b9d29f-cb36-415a-a61e-e521ad432b17": {"__data__": {"id_": "05b9d29f-cb36-415a-a61e-e521ad432b17", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c7951835-b97b-4f2f-9563-7f3597582689", "node_type": "4", "metadata": {}, "hash": "2762ff6382ca5751834d610163dbc65375e37509c8123d6d41b50ad5b3cd5f57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c5758d3-df1f-4141-87f9-e92cdfec31b0", "node_type": "1", "metadata": {}, "hash": "545bc619cccf601e4e9addc7c83e7590603bf0725ba3122afe1a7f62d2702de1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61ae2c55-b986-4ea4-a8be-ed29b99ab7e3", "node_type": "1", "metadata": {}, "hash": "6e13b4f21c15f1e3cbc98778a9ef3fefdfe03581a462d0b6ef6da439caf04b2e", "class_name": "RelatedNodeInfo"}}, "text": "what can happen if the table is incorrect.", "start_char_idx": 0, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61ae2c55-b986-4ea4-a8be-ed29b99ab7e3": {"__data__": {"id_": "61ae2c55-b986-4ea4-a8be-ed29b99ab7e3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69dbccde-a373-4954-8b13-7c9768990bed", "node_type": "4", "metadata": {}, "hash": "6e13b4f21c15f1e3cbc98778a9ef3fefdfe03581a462d0b6ef6da439caf04b2e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05b9d29f-cb36-415a-a61e-e521ad432b17", "node_type": "1", "metadata": {}, "hash": "2762ff6382ca5751834d610163dbc65375e37509c8123d6d41b50ad5b3cd5f57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3f5ec293-9fa0-495a-8293-4ef6e01aae54", "node_type": "1", "metadata": {}, "hash": "d12822e3956e5253d276528602d7c63b3c8bb37a3a9ba4af5a9f6a871eab3d7a", "class_name": "RelatedNodeInfo"}}, "text": "Divide in MIPS You may have already observed that the same sequential hardware can be used for both multiply and divide in Figures 3.6 and 3.11. The only requirement is a 64-bit register that can shift left or right and a 32-bit ALU that adds or subtracts. Hence, MIPS uses the 32-bit Hi and 32-bit Lo registers for both multiply and divide.", "start_char_idx": 0, "end_char_idx": 341, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f5ec293-9fa0-495a-8293-4ef6e01aae54": {"__data__": {"id_": "3f5ec293-9fa0-495a-8293-4ef6e01aae54", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5a6604b9-0050-4b51-b0bc-1c7501c298be", "node_type": "4", "metadata": {}, "hash": "d12822e3956e5253d276528602d7c63b3c8bb37a3a9ba4af5a9f6a871eab3d7a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61ae2c55-b986-4ea4-a8be-ed29b99ab7e3", "node_type": "1", "metadata": {}, "hash": "6e13b4f21c15f1e3cbc98778a9ef3fefdfe03581a462d0b6ef6da439caf04b2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f0e12242-ad05-47b7-9b22-a5d19c5fcf18", "node_type": "1", "metadata": {}, "hash": "90bac69d354bafab66ae955b249a9ef4563f25419fa132fea4b540eea27555d9", "class_name": "RelatedNodeInfo"}}, "text": "As we might expect from the algorithm above, Hi contains the remainder, and Lo contains the quotient after the divide instruction completes.", "start_char_idx": 0, "end_char_idx": 140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0e12242-ad05-47b7-9b22-a5d19c5fcf18": {"__data__": {"id_": "f0e12242-ad05-47b7-9b22-a5d19c5fcf18", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f0d95cf4-76ec-4f3d-83ac-75acdef47117", "node_type": "4", "metadata": {}, "hash": "90bac69d354bafab66ae955b249a9ef4563f25419fa132fea4b540eea27555d9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3f5ec293-9fa0-495a-8293-4ef6e01aae54", "node_type": "1", "metadata": {}, "hash": "d12822e3956e5253d276528602d7c63b3c8bb37a3a9ba4af5a9f6a871eab3d7a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cf61dd0-11d4-466c-a72d-77ca69b83b3c", "node_type": "1", "metadata": {}, "hash": "a385336a6e7d31b56e21e0812b602ec588a9c2d1922e00f52485211ee8cf5943", "class_name": "RelatedNodeInfo"}}, "text": "To handle both signed integers and unsigned integers, MIPS has", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1cf61dd0-11d4-466c-a72d-77ca69b83b3c": {"__data__": {"id_": "1cf61dd0-11d4-466c-a72d-77ca69b83b3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "90ffdaef-99cf-416d-a7cd-b1cabd26c338", "node_type": "4", "metadata": {}, "hash": "a385336a6e7d31b56e21e0812b602ec588a9c2d1922e00f52485211ee8cf5943", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f0e12242-ad05-47b7-9b22-a5d19c5fcf18", "node_type": "1", "metadata": {}, "hash": "90bac69d354bafab66ae955b249a9ef4563f25419fa132fea4b540eea27555d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "87e03c28-0a6b-4133-9376-584a4e92f740", "node_type": "1", "metadata": {}, "hash": "af1620d71d6a82dcd772ba331849633e5979ad0db144fbc4b3ce75486e43cd49", "class_name": "RelatedNodeInfo"}}, "text": "two instructions: divide (div) and divide unsigned (divu). The MIPS assembler allows divide instructions to specify three registers, generating the mflo or mfhi instructions to place the desired result into a general-purpose register.", "start_char_idx": 0, "end_char_idx": 234, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "87e03c28-0a6b-4133-9376-584a4e92f740": {"__data__": {"id_": "87e03c28-0a6b-4133-9376-584a4e92f740", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8265ac69-c94e-4be3-845e-8d94b8798d79", "node_type": "4", "metadata": {}, "hash": "af1620d71d6a82dcd772ba331849633e5979ad0db144fbc4b3ce75486e43cd49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cf61dd0-11d4-466c-a72d-77ca69b83b3c", "node_type": "1", "metadata": {}, "hash": "a385336a6e7d31b56e21e0812b602ec588a9c2d1922e00f52485211ee8cf5943", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1254296b-4b99-49ac-abd1-9afe3e82f053", "node_type": "1", "metadata": {}, "hash": "6638a54b0f15b817575fed55c2b07fa97a0ac29b070675c9c0363921be7e3c91", "class_name": "RelatedNodeInfo"}}, "text": "Summary The common hardware support for multiply and divide allows MIPS to provide a single pair of 32-bit registers that are used both for multiply and divide. We accelerate division by predicting multliple quotient bits and then correcting mispredictions later. Figure 3.12 summarizes the enhancements to the MIPS instruction set for the last two sections.", "start_char_idx": 0, "end_char_idx": 358, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1254296b-4b99-49ac-abd1-9afe3e82f053": {"__data__": {"id_": "1254296b-4b99-49ac-abd1-9afe3e82f053", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b9008f91-7f64-4978-9943-25522b17a06e", "node_type": "4", "metadata": {}, "hash": "6638a54b0f15b817575fed55c2b07fa97a0ac29b070675c9c0363921be7e3c91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "87e03c28-0a6b-4133-9376-584a4e92f740", "node_type": "1", "metadata": {}, "hash": "af1620d71d6a82dcd772ba331849633e5979ad0db144fbc4b3ce75486e43cd49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee1d72ab-3f2d-4071-9b67-7eaf050b0f76", "node_type": "1", "metadata": {}, "hash": "9457918f11d09b5e0043c775881e27dee1deac92865716dec36639b130f6afa4", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.12 MIPS core architecture. The memory and registers of the MIPS architecture are not included for space reasons, but this section added the Hi and Lo registers to support multiply and divide. MIPS machine language is listed in the MIPS Reference Data Card at the front of this book.", "start_char_idx": 0, "end_char_idx": 291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee1d72ab-3f2d-4071-9b67-7eaf050b0f76": {"__data__": {"id_": "ee1d72ab-3f2d-4071-9b67-7eaf050b0f76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8a58a202-15e6-4769-9cba-ff2d3dc321bb", "node_type": "4", "metadata": {}, "hash": "9457918f11d09b5e0043c775881e27dee1deac92865716dec36639b130f6afa4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1254296b-4b99-49ac-abd1-9afe3e82f053", "node_type": "1", "metadata": {}, "hash": "6638a54b0f15b817575fed55c2b07fa97a0ac29b070675c9c0363921be7e3c91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b3433d9-5275-4a30-86bd-0c919960a478", "node_type": "1", "metadata": {}, "hash": "98a2298c339787159eb305cc7c780d56ced80972f94bdfb1e67d2e9bed573798", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/Software Interface MIPS divide instructions ignore over\ufb02ow, so software must determine whether the quotient is too large. In addition to over\ufb02ow, division can also result in an improper calculation: division by 0. Some computers distinguish these two anomalous events. MIPS", "start_char_idx": 0, "end_char_idx": 282, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b3433d9-5275-4a30-86bd-0c919960a478": {"__data__": {"id_": "1b3433d9-5275-4a30-86bd-0c919960a478", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c914b27-125b-4c34-8cc3-c2772c1be762", "node_type": "4", "metadata": {}, "hash": "98a2298c339787159eb305cc7c780d56ced80972f94bdfb1e67d2e9bed573798", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ee1d72ab-3f2d-4071-9b67-7eaf050b0f76", "node_type": "1", "metadata": {}, "hash": "9457918f11d09b5e0043c775881e27dee1deac92865716dec36639b130f6afa4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b75d5b1c-09a8-4b93-872c-80061dbcb2f7", "node_type": "1", "metadata": {}, "hash": "38cdaa2025ed1f645641ce7cd80f889f2bde8e992970d6f9c5735bc0431ae861", "class_name": "RelatedNodeInfo"}}, "text": "software must check the divisor to discover division by 0 as well as over\ufb02ow.", "start_char_idx": 0, "end_char_idx": 77, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b75d5b1c-09a8-4b93-872c-80061dbcb2f7": {"__data__": {"id_": "b75d5b1c-09a8-4b93-872c-80061dbcb2f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7d5feb65-c194-4b16-8da6-82415fb6807e", "node_type": "4", "metadata": {}, "hash": "38cdaa2025ed1f645641ce7cd80f889f2bde8e992970d6f9c5735bc0431ae861", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b3433d9-5275-4a30-86bd-0c919960a478", "node_type": "1", "metadata": {}, "hash": "98a2298c339787159eb305cc7c780d56ced80972f94bdfb1e67d2e9bed573798", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f761d02a-d882-4171-8af3-d96415e3570b", "node_type": "1", "metadata": {}, "hash": "a1292627712a2ec2775af31ec7f7ec8a213ebd00852d91cc4661d516e12a0a80", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration An even faster algorithm than Figure 3.9 does not immediately add the divisor back if the remainder is negative. It simply adds the dividend to the shifted remainder in the following step, since (r + d) \u00d7 2 \u2212 d = r \u00d7 2 + d \u00d7 2 \u2212 d = r \u00d7 2 + d. This nonrestoring division algorithm, which takes 1 clock cycle per step, is explored further in the exercises; the algorithm in Figure 3.9 is called restoring division. A third algorithm that doesn\u2019t save the result of the subtract if it\u2019s negative is called a nonperforming division algorithm. It averages one-third fewer arithmetic operations.", "start_char_idx": 0, "end_char_idx": 602, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f761d02a-d882-4171-8af3-d96415e3570b": {"__data__": {"id_": "f761d02a-d882-4171-8af3-d96415e3570b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ef87d969-83c7-44ac-b0b3-61fe7b92e227", "node_type": "4", "metadata": {}, "hash": "a1292627712a2ec2775af31ec7f7ec8a213ebd00852d91cc4661d516e12a0a80", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b75d5b1c-09a8-4b93-872c-80061dbcb2f7", "node_type": "1", "metadata": {}, "hash": "38cdaa2025ed1f645641ce7cd80f889f2bde8e992970d6f9c5735bc0431ae861", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94f054bf-74ed-4c3c-b3ff-c29f1d317fe7", "node_type": "1", "metadata": {}, "hash": "45ac1289dddcf5a0d62dc73bce103403f8e2666d5abc994763a8a0caac0c6b99", "class_name": "RelatedNodeInfo"}}, "text": "Speed gets you nowhere if you\u2019re headed the wrong way.", "start_char_idx": 0, "end_char_idx": 54, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94f054bf-74ed-4c3c-b3ff-c29f1d317fe7": {"__data__": {"id_": "94f054bf-74ed-4c3c-b3ff-c29f1d317fe7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "def39dea-7d06-4094-b7ba-f65b01e06d98", "node_type": "4", "metadata": {}, "hash": "45ac1289dddcf5a0d62dc73bce103403f8e2666d5abc994763a8a0caac0c6b99", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f761d02a-d882-4171-8af3-d96415e3570b", "node_type": "1", "metadata": {}, "hash": "a1292627712a2ec2775af31ec7f7ec8a213ebd00852d91cc4661d516e12a0a80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dda3144-e265-45e2-824f-2d24fa1248ce", "node_type": "1", "metadata": {}, "hash": "d7fcc28c90795479409513e42861f9e102850b1d7c3c23f3bd82ad378d9f462f", "class_name": "RelatedNodeInfo"}}, "text": "Going beyond signed and unsigned integers, programming", "start_char_idx": 0, "end_char_idx": 54, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dda3144-e265-45e2-824f-2d24fa1248ce": {"__data__": {"id_": "5dda3144-e265-45e2-824f-2d24fa1248ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d3849c60-a598-496e-b925-30ba1036f26d", "node_type": "4", "metadata": {}, "hash": "d7fcc28c90795479409513e42861f9e102850b1d7c3c23f3bd82ad378d9f462f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94f054bf-74ed-4c3c-b3ff-c29f1d317fe7", "node_type": "1", "metadata": {}, "hash": "45ac1289dddcf5a0d62dc73bce103403f8e2666d5abc994763a8a0caac0c6b99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53a31736-4e3f-4c9b-9e4a-391c58305bef", "node_type": "1", "metadata": {}, "hash": "a9b5dd503fac74f836824c9dde6fa33740214ae88eaa3936fc2ce6bfd75c0417", "class_name": "RelatedNodeInfo"}}, "text": "languages support numbers with fractions, which are called reals in mathematics. Here are some examples of reals:", "start_char_idx": 0, "end_char_idx": 113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53a31736-4e3f-4c9b-9e4a-391c58305bef": {"__data__": {"id_": "53a31736-4e3f-4c9b-9e4a-391c58305bef", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dbbb0a02-e8fd-4d85-8bd4-a92c42fcdca6", "node_type": "4", "metadata": {}, "hash": "a9b5dd503fac74f836824c9dde6fa33740214ae88eaa3936fc2ce6bfd75c0417", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dda3144-e265-45e2-824f-2d24fa1248ce", "node_type": "1", "metadata": {}, "hash": "d7fcc28c90795479409513e42861f9e102850b1d7c3c23f3bd82ad378d9f462f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b63af6f7-a6bd-45ba-a412-83863ba699d2", "node_type": "1", "metadata": {}, "hash": "0bfc67c5bb75a5cc5f84ac50ed97f6029fbfa84c06c2aa7cc47ccc2be64e4285", "class_name": "RelatedNodeInfo"}}, "text": "Notice that in the last case, the number didn\u2019t represent a small", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b63af6f7-a6bd-45ba-a412-83863ba699d2": {"__data__": {"id_": "b63af6f7-a6bd-45ba-a412-83863ba699d2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ec7601af-cc8e-4ab5-999e-a824eb1fdbf9", "node_type": "4", "metadata": {}, "hash": "0bfc67c5bb75a5cc5f84ac50ed97f6029fbfa84c06c2aa7cc47ccc2be64e4285", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53a31736-4e3f-4c9b-9e4a-391c58305bef", "node_type": "1", "metadata": {}, "hash": "a9b5dd503fac74f836824c9dde6fa33740214ae88eaa3936fc2ce6bfd75c0417", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05df9c94-d230-4878-b77a-729856240e6e", "node_type": "1", "metadata": {}, "hash": "ae1f39273cc007980028687e4a6b508a6b7312b7c4adaed103a6adb768e8f0e0", "class_name": "RelatedNodeInfo"}}, "text": "fraction, but it was bigger than we could represent with a 32-bit signed integer. The alternative notation for the last two numbers is called scientific notation, which has a single digit to the left of the decimal point. A number in scienti\ufb01c notation that has no leading 0s is called a normalized number, which is the usual way to write it. For example, 1.0ten \u00d7 10\u22129 is in normalized scienti\ufb01c notation, but 0.1ten \u00d7 10\u22128 and 10.0ten \u00d7 10\u221210 are not.", "start_char_idx": 0, "end_char_idx": 453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05df9c94-d230-4878-b77a-729856240e6e": {"__data__": {"id_": "05df9c94-d230-4878-b77a-729856240e6e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6944ea0b-487e-460c-b47c-febe2807db68", "node_type": "4", "metadata": {}, "hash": "ae1f39273cc007980028687e4a6b508a6b7312b7c4adaed103a6adb768e8f0e0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b63af6f7-a6bd-45ba-a412-83863ba699d2", "node_type": "1", "metadata": {}, "hash": "0bfc67c5bb75a5cc5f84ac50ed97f6029fbfa84c06c2aa7cc47ccc2be64e4285", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d371018-7407-41e9-b3de-02b2ccb802fb", "node_type": "1", "metadata": {}, "hash": "c9f5a5a1985b1f2a3116198b4c0824a06b6565573f5d35525b91f77d5931833d", "class_name": "RelatedNodeInfo"}}, "text": "scientific notation A notation that renders numbers with a single digit to the left of the decimal point.", "start_char_idx": 0, "end_char_idx": 105, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d371018-7407-41e9-b3de-02b2ccb802fb": {"__data__": {"id_": "0d371018-7407-41e9-b3de-02b2ccb802fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0ac1376-3859-4fc3-9ce0-cb1501f278be", "node_type": "4", "metadata": {}, "hash": "c9f5a5a1985b1f2a3116198b4c0824a06b6565573f5d35525b91f77d5931833d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05df9c94-d230-4878-b77a-729856240e6e", "node_type": "1", "metadata": {}, "hash": "ae1f39273cc007980028687e4a6b508a6b7312b7c4adaed103a6adb768e8f0e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99909c26-6b94-4afb-9af0-40e082b83b45", "node_type": "1", "metadata": {}, "hash": "3cd1651cb7a4d39fe8c7db6b2285d5232180d8664c632632fca809428415e9fa", "class_name": "RelatedNodeInfo"}}, "text": "normalized A number in \ufb02oating-point notation that has no leading 0s.", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99909c26-6b94-4afb-9af0-40e082b83b45": {"__data__": {"id_": "99909c26-6b94-4afb-9af0-40e082b83b45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b9fe8c4-38de-41fe-911e-87f8853952fb", "node_type": "4", "metadata": {}, "hash": "3cd1651cb7a4d39fe8c7db6b2285d5232180d8664c632632fca809428415e9fa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d371018-7407-41e9-b3de-02b2ccb802fb", "node_type": "1", "metadata": {}, "hash": "c9f5a5a1985b1f2a3116198b4c0824a06b6565573f5d35525b91f77d5931833d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "56300bc6-88bd-461d-9c3c-0f1426200e0c", "node_type": "1", "metadata": {}, "hash": "88a98cbf015b620224f5a679cdb180527cf7d1261fd0231d2bb3fd5e2b935cad", "class_name": "RelatedNodeInfo"}}, "text": "Just as we can show decimal numbers in scienti\ufb01c notation, we can", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56300bc6-88bd-461d-9c3c-0f1426200e0c": {"__data__": {"id_": "56300bc6-88bd-461d-9c3c-0f1426200e0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "91c0a7b2-78c2-4ddd-9495-7e5175ec01b0", "node_type": "4", "metadata": {}, "hash": "88a98cbf015b620224f5a679cdb180527cf7d1261fd0231d2bb3fd5e2b935cad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99909c26-6b94-4afb-9af0-40e082b83b45", "node_type": "1", "metadata": {}, "hash": "3cd1651cb7a4d39fe8c7db6b2285d5232180d8664c632632fca809428415e9fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b832b658-f9b0-475c-accc-d653b2ebe356", "node_type": "1", "metadata": {}, "hash": "2a18a16daea684b627b9149c691d2b3603bd9295163eada8399485207f1b412c", "class_name": "RelatedNodeInfo"}}, "text": "also show binary numbers in scienti\ufb01c notation:", "start_char_idx": 0, "end_char_idx": 47, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b832b658-f9b0-475c-accc-d653b2ebe356": {"__data__": {"id_": "b832b658-f9b0-475c-accc-d653b2ebe356", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2217c41-fcbc-4561-b5b6-eb533a64f703", "node_type": "4", "metadata": {}, "hash": "2a18a16daea684b627b9149c691d2b3603bd9295163eada8399485207f1b412c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "56300bc6-88bd-461d-9c3c-0f1426200e0c", "node_type": "1", "metadata": {}, "hash": "88a98cbf015b620224f5a679cdb180527cf7d1261fd0231d2bb3fd5e2b935cad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7397336-aee1-488b-9720-b504ecba12e4", "node_type": "1", "metadata": {}, "hash": "35209317b23f0f0578878e312883f4119acfe103adfce75541870a51d4eccf61", "class_name": "RelatedNodeInfo"}}, "text": "To keep a binary number in normalized form, we need a base that", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7397336-aee1-488b-9720-b504ecba12e4": {"__data__": {"id_": "b7397336-aee1-488b-9720-b504ecba12e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b9c6aa4-a68a-4ac6-bbb9-9e96652f7220", "node_type": "4", "metadata": {}, "hash": "35209317b23f0f0578878e312883f4119acfe103adfce75541870a51d4eccf61", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b832b658-f9b0-475c-accc-d653b2ebe356", "node_type": "1", "metadata": {}, "hash": "2a18a16daea684b627b9149c691d2b3603bd9295163eada8399485207f1b412c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e925a6c5-6fee-44ce-94a1-9220e2d74e33", "node_type": "1", "metadata": {}, "hash": "75bc400d6c7c8b88d1e2a318bed56575ccdadc8e9db07e6af9e04bcb2552d399", "class_name": "RelatedNodeInfo"}}, "text": "we can increase or decrease by exactly the number of bits the number must be shifted to have one nonzero digit to the left of the decimal point. Only a base of 2 ful\ufb01lls our need. Since the base is not 10, we also need a new name for decimal point; binary point will do \ufb01ne.", "start_char_idx": 0, "end_char_idx": 274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e925a6c5-6fee-44ce-94a1-9220e2d74e33": {"__data__": {"id_": "e925a6c5-6fee-44ce-94a1-9220e2d74e33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b98a40b3-82ad-4038-a98b-19f0f34ac2dd", "node_type": "4", "metadata": {}, "hash": "75bc400d6c7c8b88d1e2a318bed56575ccdadc8e9db07e6af9e04bcb2552d399", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7397336-aee1-488b-9720-b504ecba12e4", "node_type": "1", "metadata": {}, "hash": "35209317b23f0f0578878e312883f4119acfe103adfce75541870a51d4eccf61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47df33fc-01b5-4192-86b4-d70a3b5f0f56", "node_type": "1", "metadata": {}, "hash": "cfe5c0ee3394e8b1552e7f178099579cc6e2f446b48619a90dce756b4afe6e3f", "class_name": "RelatedNodeInfo"}}, "text": "Computer arithmetic that supports such numbers is called floating point because it represents numbers in which the binary point is not \ufb01xed, as it is for integers. The programming language C uses the name \ufb02oat for such numbers. Just as in scienti\ufb01c notation, numbers are represented as a single nonzero digit to the left of the binary point. In binary, the form is", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47df33fc-01b5-4192-86b4-d70a3b5f0f56": {"__data__": {"id_": "47df33fc-01b5-4192-86b4-d70a3b5f0f56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1622d2aa-d8ec-4196-8aad-7134a8b171b3", "node_type": "4", "metadata": {}, "hash": "cfe5c0ee3394e8b1552e7f178099579cc6e2f446b48619a90dce756b4afe6e3f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e925a6c5-6fee-44ce-94a1-9220e2d74e33", "node_type": "1", "metadata": {}, "hash": "75bc400d6c7c8b88d1e2a318bed56575ccdadc8e9db07e6af9e04bcb2552d399", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cacca074-c80a-4e17-9b00-7222d8d735d4", "node_type": "1", "metadata": {}, "hash": "a0bf41f171de4c0718f15a44e0239f501d4400435945a8f4fcfe2524de14801a", "class_name": "RelatedNodeInfo"}}, "text": "(Although the computer represents the exponent in base 2 as well", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cacca074-c80a-4e17-9b00-7222d8d735d4": {"__data__": {"id_": "cacca074-c80a-4e17-9b00-7222d8d735d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cdee89b8-f130-4814-ae01-ea824d14b95a", "node_type": "4", "metadata": {}, "hash": "a0bf41f171de4c0718f15a44e0239f501d4400435945a8f4fcfe2524de14801a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47df33fc-01b5-4192-86b4-d70a3b5f0f56", "node_type": "1", "metadata": {}, "hash": "cfe5c0ee3394e8b1552e7f178099579cc6e2f446b48619a90dce756b4afe6e3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e6abc97-6918-4537-a376-10a608523d0f", "node_type": "1", "metadata": {}, "hash": "fa9ceaba54d991e2b7cdec252301ba10f741926bcbfdbd05310b926f53ead4d7", "class_name": "RelatedNodeInfo"}}, "text": "as the rest of the number, to simplify the notation we show the exponent in decimal.)", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e6abc97-6918-4537-a376-10a608523d0f": {"__data__": {"id_": "7e6abc97-6918-4537-a376-10a608523d0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "48f73b8e-f4e2-4fe5-ab85-2e825998f993", "node_type": "4", "metadata": {}, "hash": "fa9ceaba54d991e2b7cdec252301ba10f741926bcbfdbd05310b926f53ead4d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cacca074-c80a-4e17-9b00-7222d8d735d4", "node_type": "1", "metadata": {}, "hash": "a0bf41f171de4c0718f15a44e0239f501d4400435945a8f4fcfe2524de14801a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28a7e6c0-9919-4eca-9b6d-2d2a1064e6de", "node_type": "1", "metadata": {}, "hash": "134fbc391c7898e645dfe870221d79035eeab38095d6b265e10a7dc67af186ad", "class_name": "RelatedNodeInfo"}}, "text": "floating point Computer arithmetic that represents numbers in which the binary point is not \ufb01xed.", "start_char_idx": 0, "end_char_idx": 97, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28a7e6c0-9919-4eca-9b6d-2d2a1064e6de": {"__data__": {"id_": "28a7e6c0-9919-4eca-9b6d-2d2a1064e6de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a75d7776-845b-40c8-b6b8-2e7d593bc106", "node_type": "4", "metadata": {}, "hash": "134fbc391c7898e645dfe870221d79035eeab38095d6b265e10a7dc67af186ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e6abc97-6918-4537-a376-10a608523d0f", "node_type": "1", "metadata": {}, "hash": "fa9ceaba54d991e2b7cdec252301ba10f741926bcbfdbd05310b926f53ead4d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70077349-7b30-40db-962f-a3766e3c1090", "node_type": "1", "metadata": {}, "hash": "4306be0c16b1b2b34538afbeda8d7792866344d4f6be9112ea89778c7cdb4d2f", "class_name": "RelatedNodeInfo"}}, "text": "three advantages. It simpli\ufb01es exchange of data that includes \ufb02oating-point numbers; it simpli\ufb01es the \ufb02oating-point arithmetic algorithms to know that numbers will always be in this form; and it increases the accuracy of the numbers that can be stored in a word,", "start_char_idx": 0, "end_char_idx": 262, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70077349-7b30-40db-962f-a3766e3c1090": {"__data__": {"id_": "70077349-7b30-40db-962f-a3766e3c1090", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "acc44452-cbf1-4dfa-9ac1-f18f2ecd46eb", "node_type": "4", "metadata": {}, "hash": "4306be0c16b1b2b34538afbeda8d7792866344d4f6be9112ea89778c7cdb4d2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28a7e6c0-9919-4eca-9b6d-2d2a1064e6de", "node_type": "1", "metadata": {}, "hash": "134fbc391c7898e645dfe870221d79035eeab38095d6b265e10a7dc67af186ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99dca7f9-aa20-41cc-abf9-dc9745127573", "node_type": "1", "metadata": {}, "hash": "aa7d5fb976d2b9131a16c2d0553dd5b4f09f9a43e207cd329fdfbd06ceba8fc2", "class_name": "RelatedNodeInfo"}}, "text": "since the unnecessary leading 0s are replaced by real digits to the right of the binary point.", "start_char_idx": 0, "end_char_idx": 94, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99dca7f9-aa20-41cc-abf9-dc9745127573": {"__data__": {"id_": "99dca7f9-aa20-41cc-abf9-dc9745127573", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "580291f3-80f1-4360-9cde-871ae80da153", "node_type": "4", "metadata": {}, "hash": "aa7d5fb976d2b9131a16c2d0553dd5b4f09f9a43e207cd329fdfbd06ceba8fc2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70077349-7b30-40db-962f-a3766e3c1090", "node_type": "1", "metadata": {}, "hash": "4306be0c16b1b2b34538afbeda8d7792866344d4f6be9112ea89778c7cdb4d2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dd2a390-0f82-4acc-a535-7b34b5328be4", "node_type": "1", "metadata": {}, "hash": "f32310bb72e4a4e5eb0cd2e255f64e01240ea1c0f0eb49a5b9a32dedb7fce87c", "class_name": "RelatedNodeInfo"}}, "text": "Floating-Point Representation A designer of a \ufb02oating-point representation must \ufb01nd a compromise between the size of the fraction and the size of the exponent, because a \ufb01xed word size means you must take a bit from one to give a bit to the other. This tradeo\ufb00 is between precision and range: increasing the size of the fraction enhances the precision of the fraction, while increasing the size of the exponent increases the range of numbers that can be represented. As our design guideline from Chapter 2 reminds us, good design demands good compromise.", "start_char_idx": 0, "end_char_idx": 554, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dd2a390-0f82-4acc-a535-7b34b5328be4": {"__data__": {"id_": "7dd2a390-0f82-4acc-a535-7b34b5328be4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b76d4b1b-f99d-4b89-b451-c8c0274fd778", "node_type": "4", "metadata": {}, "hash": "f32310bb72e4a4e5eb0cd2e255f64e01240ea1c0f0eb49a5b9a32dedb7fce87c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99dca7f9-aa20-41cc-abf9-dc9745127573", "node_type": "1", "metadata": {}, "hash": "aa7d5fb976d2b9131a16c2d0553dd5b4f09f9a43e207cd329fdfbd06ceba8fc2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb18cdee-97ec-41aa-aa65-6ce3a49e7708", "node_type": "1", "metadata": {}, "hash": "6d23fcd2d1476f5225db8411c13fe481a41d6b17a41f9b2d842debeaf1072225", "class_name": "RelatedNodeInfo"}}, "text": "fraction The value, generally between 0 and 1, placed in the fraction \ufb01eld. The fraction is also called the mantissa.", "start_char_idx": 0, "end_char_idx": 117, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb18cdee-97ec-41aa-aa65-6ce3a49e7708": {"__data__": {"id_": "fb18cdee-97ec-41aa-aa65-6ce3a49e7708", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c04b38ee-6fe4-4516-bd34-8c27b562117f", "node_type": "4", "metadata": {}, "hash": "6d23fcd2d1476f5225db8411c13fe481a41d6b17a41f9b2d842debeaf1072225", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dd2a390-0f82-4acc-a535-7b34b5328be4", "node_type": "1", "metadata": {}, "hash": "f32310bb72e4a4e5eb0cd2e255f64e01240ea1c0f0eb49a5b9a32dedb7fce87c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b7f13a6-2a2a-4444-996f-52146b173865", "node_type": "1", "metadata": {}, "hash": "28351157b79deec9b672e6deb7a4889a22117381611bb6ddb74f8f1981d9d3b8", "class_name": "RelatedNodeInfo"}}, "text": "exponent In the numerical representation system of \ufb02oating-point arithmetic, the value that is placed in the exponent \ufb01eld.", "start_char_idx": 0, "end_char_idx": 123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b7f13a6-2a2a-4444-996f-52146b173865": {"__data__": {"id_": "2b7f13a6-2a2a-4444-996f-52146b173865", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5fd378f3-4450-42f4-b972-f1d94feb4b57", "node_type": "4", "metadata": {}, "hash": "28351157b79deec9b672e6deb7a4889a22117381611bb6ddb74f8f1981d9d3b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb18cdee-97ec-41aa-aa65-6ce3a49e7708", "node_type": "1", "metadata": {}, "hash": "6d23fcd2d1476f5225db8411c13fe481a41d6b17a41f9b2d842debeaf1072225", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eac53cdb-5a67-4790-a0bf-1b02771b8162", "node_type": "1", "metadata": {}, "hash": "02192f7ba0eafcdc0c5f60f9ddcde65e3ff1f685ef02d004f8951de0c22c4a6c", "class_name": "RelatedNodeInfo"}}, "text": "Floating-point numbers are usually a multiple of the size of a", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eac53cdb-5a67-4790-a0bf-1b02771b8162": {"__data__": {"id_": "eac53cdb-5a67-4790-a0bf-1b02771b8162", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e89180b-5bf2-485b-922e-a687f655d37c", "node_type": "4", "metadata": {}, "hash": "02192f7ba0eafcdc0c5f60f9ddcde65e3ff1f685ef02d004f8951de0c22c4a6c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b7f13a6-2a2a-4444-996f-52146b173865", "node_type": "1", "metadata": {}, "hash": "28351157b79deec9b672e6deb7a4889a22117381611bb6ddb74f8f1981d9d3b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eea40d40-a74d-432d-be26-58ef54f56646", "node_type": "1", "metadata": {}, "hash": "ecb69364e8c53fec0761632cf54ed8e249d57a60de63f47ed326eeea1864e547", "class_name": "RelatedNodeInfo"}}, "text": "word. The representation of a MIPS \ufb02oating-point number is shown below, where s is the sign of the \ufb02oating-point number (1 meaning negative), exponent is the value of the 8-bit exponent \ufb01eld (including the sign of the exponent), and fraction is the 23-bit number. As we recall from Chapter 2, this representation is sign and magnitude, since the sign is a separate bit from the rest of the number.", "start_char_idx": 0, "end_char_idx": 397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eea40d40-a74d-432d-be26-58ef54f56646": {"__data__": {"id_": "eea40d40-a74d-432d-be26-58ef54f56646", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f6658450-7d62-44a4-832f-739f92745711", "node_type": "4", "metadata": {}, "hash": "ecb69364e8c53fec0761632cf54ed8e249d57a60de63f47ed326eeea1864e547", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eac53cdb-5a67-4790-a0bf-1b02771b8162", "node_type": "1", "metadata": {}, "hash": "02192f7ba0eafcdc0c5f60f9ddcde65e3ff1f685ef02d004f8951de0c22c4a6c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f17ef59-4cbe-4c26-a986-5825062dc368", "node_type": "1", "metadata": {}, "hash": "ad48fe7890f4a041f1c62853fe16891756a683b05f466a3e764a74312d1c7c88", "class_name": "RelatedNodeInfo"}}, "text": "In general, \ufb02oating-point numbers are of the form", "start_char_idx": 0, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9f17ef59-4cbe-4c26-a986-5825062dc368": {"__data__": {"id_": "9f17ef59-4cbe-4c26-a986-5825062dc368", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c91658de-1b83-41a4-8398-706689d64a2c", "node_type": "4", "metadata": {}, "hash": "ad48fe7890f4a041f1c62853fe16891756a683b05f466a3e764a74312d1c7c88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eea40d40-a74d-432d-be26-58ef54f56646", "node_type": "1", "metadata": {}, "hash": "ecb69364e8c53fec0761632cf54ed8e249d57a60de63f47ed326eeea1864e547", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a370df99-7952-434c-b65d-187a19e143c2", "node_type": "1", "metadata": {}, "hash": "86c63c700729880a0795849be568939820d5ee4e581a59ede9d8ea5988e2e33e", "class_name": "RelatedNodeInfo"}}, "text": "F involves the value in the fraction \ufb01eld and E involves the value", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a370df99-7952-434c-b65d-187a19e143c2": {"__data__": {"id_": "a370df99-7952-434c-b65d-187a19e143c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "de8a8188-6af7-416d-a0c6-7ae69514f84d", "node_type": "4", "metadata": {}, "hash": "86c63c700729880a0795849be568939820d5ee4e581a59ede9d8ea5988e2e33e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f17ef59-4cbe-4c26-a986-5825062dc368", "node_type": "1", "metadata": {}, "hash": "ad48fe7890f4a041f1c62853fe16891756a683b05f466a3e764a74312d1c7c88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf1b29e3-9290-407a-92ec-375f0bd73491", "node_type": "1", "metadata": {}, "hash": "6dca155f8650cfe18e5aafb7133d5da31db917d03ad99df1ad396825390fe034", "class_name": "RelatedNodeInfo"}}, "text": "in the exponent \ufb01eld; the exact relationship to these \ufb01elds will be spelled out soon. (We will shortly see that MIPS does something slightly more sophisticated.)", "start_char_idx": 0, "end_char_idx": 161, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bf1b29e3-9290-407a-92ec-375f0bd73491": {"__data__": {"id_": "bf1b29e3-9290-407a-92ec-375f0bd73491", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85a6115b-f3c9-41ef-ab14-a0af2c6149c3", "node_type": "4", "metadata": {}, "hash": "6dca155f8650cfe18e5aafb7133d5da31db917d03ad99df1ad396825390fe034", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a370df99-7952-434c-b65d-187a19e143c2", "node_type": "1", "metadata": {}, "hash": "86c63c700729880a0795849be568939820d5ee4e581a59ede9d8ea5988e2e33e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33", "node_type": "1", "metadata": {}, "hash": "d42a2ed9d7d07083d0ed72db8b144b040dea4aa9e6d5772ea3ca669e3a8d5ed9", "class_name": "RelatedNodeInfo"}}, "text": "These chosen sizes of exponent and fraction give MIPS computer arithmetic an extraordinary range. Fractions almost as small as 2.0ten \u00d7 10\u221238 and numbers almost as large as 2.0ten \u00d7 1038 can be represented in a computer. Alas, extraordinary di\ufb00ers from in\ufb01nite, so it is still possible for numbers to be too large. Thus, over\ufb02ow exceptions can occur in \ufb02oating-point arithmetic as well as in integer arithmetic. Notice that overflow here means that the exponent is too large to be represented in the exponent \ufb01eld.", "start_char_idx": 0, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33": {"__data__": {"id_": "b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25d87206-f60f-4a1e-80ab-a56cca0a46e1", "node_type": "4", "metadata": {}, "hash": "d42a2ed9d7d07083d0ed72db8b144b040dea4aa9e6d5772ea3ca669e3a8d5ed9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf1b29e3-9290-407a-92ec-375f0bd73491", "node_type": "1", "metadata": {}, "hash": "6dca155f8650cfe18e5aafb7133d5da31db917d03ad99df1ad396825390fe034", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1319e110-8696-45e5-897d-1d9128fec55b", "node_type": "1", "metadata": {}, "hash": "f2a0cbb3b64cf33f201a87881f910f080176b70101a57dc4754fb0aa6d9758d9", "class_name": "RelatedNodeInfo"}}, "text": "overflow (floating-point) A situation in which a positive exponent becomes too large to \ufb01t in the exponent \ufb01eld.", "start_char_idx": 0, "end_char_idx": 112, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1319e110-8696-45e5-897d-1d9128fec55b": {"__data__": {"id_": "1319e110-8696-45e5-897d-1d9128fec55b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9b0e6327-bc02-4b09-b4c5-dd83454d0f8d", "node_type": "4", "metadata": {}, "hash": "f2a0cbb3b64cf33f201a87881f910f080176b70101a57dc4754fb0aa6d9758d9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33", "node_type": "1", "metadata": {}, "hash": "d42a2ed9d7d07083d0ed72db8b144b040dea4aa9e6d5772ea3ca669e3a8d5ed9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b", "node_type": "1", "metadata": {}, "hash": "7e89e86ba466d4737d6f9e125f61d93ff19f991e79e38f357668c6941739932e", "class_name": "RelatedNodeInfo"}}, "text": "Floating point o\ufb00ers a new kind of exceptional event as well. Just", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b": {"__data__": {"id_": "2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2a709ea8-f6b7-4b59-b85f-27e6e70375bf", "node_type": "4", "metadata": {}, "hash": "7e89e86ba466d4737d6f9e125f61d93ff19f991e79e38f357668c6941739932e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1319e110-8696-45e5-897d-1d9128fec55b", "node_type": "1", "metadata": {}, "hash": "f2a0cbb3b64cf33f201a87881f910f080176b70101a57dc4754fb0aa6d9758d9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fca4b6a6-b5d3-4a1f-b891-705633d526d5", "node_type": "1", "metadata": {}, "hash": "586a2bef45cf2fa8d2680830ce4e748e222bdbfef413b489ebb0b30e82eccb48", "class_name": "RelatedNodeInfo"}}, "text": "as programmers will want to know when they have calculated a number that is too large to be represented, they will want to know if the nonzero fraction they are calculating has become so small that it cannot be represented; either event could result in a program giving incorrect answers. To distinguish it from over\ufb02ow, we call this event under\ufb02ow. This situation occurs when the negative exponent is too large to \ufb01t in the exponent \ufb01eld.", "start_char_idx": 0, "end_char_idx": 439, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fca4b6a6-b5d3-4a1f-b891-705633d526d5": {"__data__": {"id_": "fca4b6a6-b5d3-4a1f-b891-705633d526d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9441eecf-0fff-476a-9610-bb833ce63db0", "node_type": "4", "metadata": {}, "hash": "586a2bef45cf2fa8d2680830ce4e748e222bdbfef413b489ebb0b30e82eccb48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b", "node_type": "1", "metadata": {}, "hash": "7e89e86ba466d4737d6f9e125f61d93ff19f991e79e38f357668c6941739932e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c1210cc-3951-46fc-ac48-7193ae6a21be", "node_type": "1", "metadata": {}, "hash": "03a102c64aa1ae281ff370ad7581bdf353cb2ebb58c374106f33d2e649066796", "class_name": "RelatedNodeInfo"}}, "text": "underflow (floating-point) A situation in which a negative exponent becomes too large to \ufb01t in the exponent \ufb01eld.", "start_char_idx": 0, "end_char_idx": 113, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c1210cc-3951-46fc-ac48-7193ae6a21be": {"__data__": {"id_": "8c1210cc-3951-46fc-ac48-7193ae6a21be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3f8efd17-40a2-4868-923f-4e82c36e0e0e", "node_type": "4", "metadata": {}, "hash": "03a102c64aa1ae281ff370ad7581bdf353cb2ebb58c374106f33d2e649066796", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fca4b6a6-b5d3-4a1f-b891-705633d526d5", "node_type": "1", "metadata": {}, "hash": "586a2bef45cf2fa8d2680830ce4e748e222bdbfef413b489ebb0b30e82eccb48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a65a88e-9bb3-4aed-a561-61261edab9a7", "node_type": "1", "metadata": {}, "hash": "0b285765a291c2ce705c59d92410c97a96f99f1b3d91ecd66eaef6352428049d", "class_name": "RelatedNodeInfo"}}, "text": "One way to reduce chances of under\ufb02ow or over\ufb02ow is to o\ufb00er another format that has a larger exponent. In C this number is called double, and operations on doubles are called double precision \ufb02oating-point arithmetic; single precision \ufb02oating point is the name of the earlier format.", "start_char_idx": 0, "end_char_idx": 283, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a65a88e-9bb3-4aed-a561-61261edab9a7": {"__data__": {"id_": "5a65a88e-9bb3-4aed-a561-61261edab9a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "133c03e7-43dd-4d9c-bef0-2572531fba06", "node_type": "4", "metadata": {}, "hash": "0b285765a291c2ce705c59d92410c97a96f99f1b3d91ecd66eaef6352428049d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c1210cc-3951-46fc-ac48-7193ae6a21be", "node_type": "1", "metadata": {}, "hash": "03a102c64aa1ae281ff370ad7581bdf353cb2ebb58c374106f33d2e649066796", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5083719b-8ccf-472c-b148-30b0e7ebb0ee", "node_type": "1", "metadata": {}, "hash": "6e2175dfe65e3680ef41fb8b3e82d752c62336f7bad00233d87612eaba28190b", "class_name": "RelatedNodeInfo"}}, "text": "double precision A \ufb02oating-point value represented in two 32-bit words.", "start_char_idx": 0, "end_char_idx": 71, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5083719b-8ccf-472c-b148-30b0e7ebb0ee": {"__data__": {"id_": "5083719b-8ccf-472c-b148-30b0e7ebb0ee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "25730df5-4a9f-4e26-b3ce-53de2d1bdc18", "node_type": "4", "metadata": {}, "hash": "6e2175dfe65e3680ef41fb8b3e82d752c62336f7bad00233d87612eaba28190b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a65a88e-9bb3-4aed-a561-61261edab9a7", "node_type": "1", "metadata": {}, "hash": "0b285765a291c2ce705c59d92410c97a96f99f1b3d91ecd66eaef6352428049d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b97bf6c-250b-44dd-af6d-2681ccfd273c", "node_type": "1", "metadata": {}, "hash": "3f79cce68232eca905264f399363eec64bbeb120af0b1b0dd890ac605235ed2b", "class_name": "RelatedNodeInfo"}}, "text": "single precision A \ufb02oating-point value represented in a single 32-bit word.", "start_char_idx": 0, "end_char_idx": 75, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8b97bf6c-250b-44dd-af6d-2681ccfd273c": {"__data__": {"id_": "8b97bf6c-250b-44dd-af6d-2681ccfd273c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d03b855b-4277-4f62-aa29-43afce90108f", "node_type": "4", "metadata": {}, "hash": "3f79cce68232eca905264f399363eec64bbeb120af0b1b0dd890ac605235ed2b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5083719b-8ccf-472c-b148-30b0e7ebb0ee", "node_type": "1", "metadata": {}, "hash": "6e2175dfe65e3680ef41fb8b3e82d752c62336f7bad00233d87612eaba28190b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86ec58d2-a878-4fb6-847c-52183df30813", "node_type": "1", "metadata": {}, "hash": "1154ec867c47497740e32066df0719387dba8f2b93e984779ba466b91fcbf707", "class_name": "RelatedNodeInfo"}}, "text": "The representation of a double precision \ufb02oating-point number takes two MIPS words, as shown below, where s is still the sign of the number, exponent is the value of the 11-bit exponent \ufb01eld, and fraction is the 52-bit number in the fraction \ufb01eld.", "start_char_idx": 0, "end_char_idx": 247, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86ec58d2-a878-4fb6-847c-52183df30813": {"__data__": {"id_": "86ec58d2-a878-4fb6-847c-52183df30813", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "43840cad-0a64-4f27-aba2-437b8975ca7c", "node_type": "4", "metadata": {}, "hash": "1154ec867c47497740e32066df0719387dba8f2b93e984779ba466b91fcbf707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b97bf6c-250b-44dd-af6d-2681ccfd273c", "node_type": "1", "metadata": {}, "hash": "3f79cce68232eca905264f399363eec64bbeb120af0b1b0dd890ac605235ed2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9509a148-202d-479c-9511-c97ef8a99b52", "node_type": "1", "metadata": {}, "hash": "77ef13fe3968d128de1fb20464776c7f77efec63f611cb25334fb513f670b4d5", "class_name": "RelatedNodeInfo"}}, "text": "MIPS double precision allows numbers almost as small as 2.0ten \u00d7 10\u2212308 and almost as large as 2.0ten \u00d7 10308. Although double precision does increase the exponent range, its primary advantage is its greater precision because of the much larger fraction.", "start_char_idx": 0, "end_char_idx": 254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9509a148-202d-479c-9511-c97ef8a99b52": {"__data__": {"id_": "9509a148-202d-479c-9511-c97ef8a99b52", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d84ff050-4d37-48f6-b823-eb3fb94fa0b1", "node_type": "4", "metadata": {}, "hash": "77ef13fe3968d128de1fb20464776c7f77efec63f611cb25334fb513f670b4d5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86ec58d2-a878-4fb6-847c-52183df30813", "node_type": "1", "metadata": {}, "hash": "1154ec867c47497740e32066df0719387dba8f2b93e984779ba466b91fcbf707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "18556d88-95fa-4a91-bbf7-8da16d14f392", "node_type": "1", "metadata": {}, "hash": "01179215f1c440a250a39b68321c431e867b71ad54a1bc7168d72fbe4ac90997", "class_name": "RelatedNodeInfo"}}, "text": "These formats go beyond MIPS. They are part of the IEEE 754 \ufb02oating-point standard, found in virtually every computer invented since 1980. This standard has greatly improved both the ease of porting \ufb02oating-point programs and the quality of computer arithmetic.", "start_char_idx": 0, "end_char_idx": 261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "18556d88-95fa-4a91-bbf7-8da16d14f392": {"__data__": {"id_": "18556d88-95fa-4a91-bbf7-8da16d14f392", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2d46502c-bd38-4ede-bbd4-495b47d7e12f", "node_type": "4", "metadata": {}, "hash": "01179215f1c440a250a39b68321c431e867b71ad54a1bc7168d72fbe4ac90997", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9509a148-202d-479c-9511-c97ef8a99b52", "node_type": "1", "metadata": {}, "hash": "77ef13fe3968d128de1fb20464776c7f77efec63f611cb25334fb513f670b4d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47aa688c-6f1c-4a0e-9de0-4485bf538e08", "node_type": "1", "metadata": {}, "hash": "3a4ff0e67b99e90d586ad19f8f96c3d3d5b3f9257732e2eff22b7540394c4130", "class_name": "RelatedNodeInfo"}}, "text": "To pack even more bits into the signi\ufb01cand, IEEE 754 makes the", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47aa688c-6f1c-4a0e-9de0-4485bf538e08": {"__data__": {"id_": "47aa688c-6f1c-4a0e-9de0-4485bf538e08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b792b014-1aed-4def-820e-4d7fb1e7bf73", "node_type": "4", "metadata": {}, "hash": "3a4ff0e67b99e90d586ad19f8f96c3d3d5b3f9257732e2eff22b7540394c4130", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "18556d88-95fa-4a91-bbf7-8da16d14f392", "node_type": "1", "metadata": {}, "hash": "01179215f1c440a250a39b68321c431e867b71ad54a1bc7168d72fbe4ac90997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d3820c5-7e33-49af-864a-7b2c5c14e401", "node_type": "1", "metadata": {}, "hash": "be2b4338952ba0d62208578b2455da15dc04271f52f223ee3b8fa9f80d85de51", "class_name": "RelatedNodeInfo"}}, "text": "leading 1-bit of normalized binary numbers implicit. Hence, the number is actually 24 bits long in single precision (implied 1 and a 23-bit fraction), and 53 bits long in double precision (1 + 52). To be precise, we use the term signi\ufb01cand to represent the 24- or 53-bit number that is 1 plus the fraction, and fraction when we mean the 23- or 52-bit number. Since 0 has no leading 1, it is given the reserved exponent value 0 so that the hardware won\u2019t a\u0000ach a leading 1 to it. Thus 00 \u2026 00two represents 0; the representation of the rest of the", "start_char_idx": 0, "end_char_idx": 546, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d3820c5-7e33-49af-864a-7b2c5c14e401": {"__data__": {"id_": "4d3820c5-7e33-49af-864a-7b2c5c14e401", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "485eb1ed-c4e1-4fff-88d5-c448fa221b02", "node_type": "4", "metadata": {}, "hash": "be2b4338952ba0d62208578b2455da15dc04271f52f223ee3b8fa9f80d85de51", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47aa688c-6f1c-4a0e-9de0-4485bf538e08", "node_type": "1", "metadata": {}, "hash": "3a4ff0e67b99e90d586ad19f8f96c3d3d5b3f9257732e2eff22b7540394c4130", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baefb61a-aba9-4abe-b8ee-cef19bf2aa25", "node_type": "1", "metadata": {}, "hash": "8087675a7720be7b010bde765732dff5a6daec3d010a881338ece44b95fe354a", "class_name": "RelatedNodeInfo"}}, "text": "numbers uses the form from before with the hidden 1 added:", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "baefb61a-aba9-4abe-b8ee-cef19bf2aa25": {"__data__": {"id_": "baefb61a-aba9-4abe-b8ee-cef19bf2aa25", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85e15b9b-0d54-43d6-a9d7-72dde4ba8973", "node_type": "4", "metadata": {}, "hash": "8087675a7720be7b010bde765732dff5a6daec3d010a881338ece44b95fe354a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d3820c5-7e33-49af-864a-7b2c5c14e401", "node_type": "1", "metadata": {}, "hash": "be2b4338952ba0d62208578b2455da15dc04271f52f223ee3b8fa9f80d85de51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b55b4e9-5f75-41a3-9f50-eec1f032c46d", "node_type": "1", "metadata": {}, "hash": "b5b1fab56c0a80be84de69022cf5a2b123e65e4c36a3f3bce3db6f5f5881df75", "class_name": "RelatedNodeInfo"}}, "text": "and E speci\ufb01es the value in the exponent \ufb01eld, to be given in detail shortly. If we number the bits of the fraction from left to right s1, s2, s3, \u2026, then the value is", "start_char_idx": 0, "end_char_idx": 167, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b55b4e9-5f75-41a3-9f50-eec1f032c46d": {"__data__": {"id_": "6b55b4e9-5f75-41a3-9f50-eec1f032c46d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb0bb849-261e-41c7-a5e3-badef4ef092a", "node_type": "4", "metadata": {}, "hash": "b5b1fab56c0a80be84de69022cf5a2b123e65e4c36a3f3bce3db6f5f5881df75", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baefb61a-aba9-4abe-b8ee-cef19bf2aa25", "node_type": "1", "metadata": {}, "hash": "8087675a7720be7b010bde765732dff5a6daec3d010a881338ece44b95fe354a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b125472-5885-4ebb-944f-c5a19aba1166", "node_type": "1", "metadata": {}, "hash": "b671f9501c71984218edaa719bc42dbc5f00a4a2cdab2acf29ce2697883dc955", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.13 shows the encodings of IEEE 754 \ufb02oating-point", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b125472-5885-4ebb-944f-c5a19aba1166": {"__data__": {"id_": "7b125472-5885-4ebb-944f-c5a19aba1166", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c433aaf6-2a11-42c5-9c7f-997f12889758", "node_type": "4", "metadata": {}, "hash": "b671f9501c71984218edaa719bc42dbc5f00a4a2cdab2acf29ce2697883dc955", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b55b4e9-5f75-41a3-9f50-eec1f032c46d", "node_type": "1", "metadata": {}, "hash": "b5b1fab56c0a80be84de69022cf5a2b123e65e4c36a3f3bce3db6f5f5881df75", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cce41510-02a2-4486-bdc5-4fbbc0951d19", "node_type": "1", "metadata": {}, "hash": "1d4a6b44327683f8cf55e85385d18a37d1dcb72ef959252ee90673e2000a3434", "class_name": "RelatedNodeInfo"}}, "text": "numbers. Other features of IEEE 754 are special symbols to represent unusual events. For example, instead of interrupting on a divide by 0, software can set the result to a bit pa\u0000ern representing + \u221e or \u2212 \u221e; the largest exponent is reserved for these special symbols. When the programmer prints the results, the program will print an in\ufb01nity symbol. (For the mathematically trained, the purpose of in\ufb01nity is to form topological closure of the reals.)", "start_char_idx": 0, "end_char_idx": 452, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cce41510-02a2-4486-bdc5-4fbbc0951d19": {"__data__": {"id_": "cce41510-02a2-4486-bdc5-4fbbc0951d19", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e332211-1d1d-4c9c-a8f5-faad63b2e501", "node_type": "4", "metadata": {}, "hash": "1d4a6b44327683f8cf55e85385d18a37d1dcb72ef959252ee90673e2000a3434", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b125472-5885-4ebb-944f-c5a19aba1166", "node_type": "1", "metadata": {}, "hash": "b671f9501c71984218edaa719bc42dbc5f00a4a2cdab2acf29ce2697883dc955", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8832ca76-2271-4f37-ad70-7a63811e1c25", "node_type": "1", "metadata": {}, "hash": "a84e01a0d8679f78aa679881f40d3660f07f1708bcb6c0c7eb30d7e93eed93c1", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.13 EEE 754 encoding of floating-point numbers. A separate sign bit determines the sign. Denormalized numbers are described in the Elaboration on page 232. This information is also found in Column 4 of the MIPS Reference Data Card at the front of this book.", "start_char_idx": 0, "end_char_idx": 265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8832ca76-2271-4f37-ad70-7a63811e1c25": {"__data__": {"id_": "8832ca76-2271-4f37-ad70-7a63811e1c25", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da18e335-d659-4135-9cd3-bd9fe827653d", "node_type": "4", "metadata": {}, "hash": "a84e01a0d8679f78aa679881f40d3660f07f1708bcb6c0c7eb30d7e93eed93c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cce41510-02a2-4486-bdc5-4fbbc0951d19", "node_type": "1", "metadata": {}, "hash": "1d4a6b44327683f8cf55e85385d18a37d1dcb72ef959252ee90673e2000a3434", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc931d08-3748-4443-8e0e-8ab07bb925ab", "node_type": "1", "metadata": {}, "hash": "381962ab144069179a183ab6b60ce9ff689f473e467bdd1ec04f781f9f81d853", "class_name": "RelatedNodeInfo"}}, "text": "IEEE 754 even has a symbol for the result of invalid operations, such as 0/0 or subtracting in\ufb01nity from in\ufb01nity. This symbol is NaN, for Not a Number. The purpose of NaNs is to allow programmers to postpone some tests and decisions to a later time in the program when they are convenient.", "start_char_idx": 0, "end_char_idx": 289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc931d08-3748-4443-8e0e-8ab07bb925ab": {"__data__": {"id_": "cc931d08-3748-4443-8e0e-8ab07bb925ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8824fab-93d8-4884-8fa5-3df24309e156", "node_type": "4", "metadata": {}, "hash": "381962ab144069179a183ab6b60ce9ff689f473e467bdd1ec04f781f9f81d853", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8832ca76-2271-4f37-ad70-7a63811e1c25", "node_type": "1", "metadata": {}, "hash": "a84e01a0d8679f78aa679881f40d3660f07f1708bcb6c0c7eb30d7e93eed93c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1bdcb4e-13f6-4e52-8c73-542a6b514205", "node_type": "1", "metadata": {}, "hash": "8159c5217f492d3efb6fd8aa31bd98ebdd9c27a96e839a65bdca3b1c50d60fa0", "class_name": "RelatedNodeInfo"}}, "text": "The designers of IEEE 754 also wanted a \ufb02oating-point", "start_char_idx": 0, "end_char_idx": 53, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1bdcb4e-13f6-4e52-8c73-542a6b514205": {"__data__": {"id_": "e1bdcb4e-13f6-4e52-8c73-542a6b514205", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "029d12b7-5cc4-495f-839d-b29588430f4f", "node_type": "4", "metadata": {}, "hash": "8159c5217f492d3efb6fd8aa31bd98ebdd9c27a96e839a65bdca3b1c50d60fa0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc931d08-3748-4443-8e0e-8ab07bb925ab", "node_type": "1", "metadata": {}, "hash": "381962ab144069179a183ab6b60ce9ff689f473e467bdd1ec04f781f9f81d853", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9530275-1a96-41e9-8bc4-cf788b8284b3", "node_type": "1", "metadata": {}, "hash": "352f36fcf9213d393bc05b1ff27f153611bf37be1bdeb61a06bac66ac80e4618", "class_name": "RelatedNodeInfo"}}, "text": "representation that could be easily processed by integer comparisons, especially for sorting. This desire is why the sign is in the most signi\ufb01cant bit, allowing a quick test of less than, greater than, or equal to 0. (It\u2019s a li\u0000le more complicated than a simple integer sort, since this notation is essentially sign and magnitude rather than two\u2019s complement.)", "start_char_idx": 0, "end_char_idx": 361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9530275-1a96-41e9-8bc4-cf788b8284b3": {"__data__": {"id_": "a9530275-1a96-41e9-8bc4-cf788b8284b3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6ed4ebe8-b501-410c-8d93-b2397fa83b54", "node_type": "4", "metadata": {}, "hash": "352f36fcf9213d393bc05b1ff27f153611bf37be1bdeb61a06bac66ac80e4618", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1bdcb4e-13f6-4e52-8c73-542a6b514205", "node_type": "1", "metadata": {}, "hash": "8159c5217f492d3efb6fd8aa31bd98ebdd9c27a96e839a65bdca3b1c50d60fa0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "faf279d8-2686-4296-a25f-6af0400aa624", "node_type": "1", "metadata": {}, "hash": "84d994a1176280488bdee6954bacdddd9e95e6650b29b6bf2a382f94c487b13b", "class_name": "RelatedNodeInfo"}}, "text": "Placing the exponent before the signi\ufb01cand also simpli\ufb01es the", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "faf279d8-2686-4296-a25f-6af0400aa624": {"__data__": {"id_": "faf279d8-2686-4296-a25f-6af0400aa624", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "02c9d4ae-af0b-42f2-8770-bd83ba881176", "node_type": "4", "metadata": {}, "hash": "84d994a1176280488bdee6954bacdddd9e95e6650b29b6bf2a382f94c487b13b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9530275-1a96-41e9-8bc4-cf788b8284b3", "node_type": "1", "metadata": {}, "hash": "352f36fcf9213d393bc05b1ff27f153611bf37be1bdeb61a06bac66ac80e4618", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60703d3a-f4a7-47be-806f-ea72b24ebcbe", "node_type": "1", "metadata": {}, "hash": "d1f32d2d0b915431c424aaa1bc4f306bfeb8d9c4f7034d9c06f95daa4afa48e2", "class_name": "RelatedNodeInfo"}}, "text": "sorting of \ufb02oating-point numbers using integer comparison instructions, since numbers with bigger exponents look larger than numbers with smaller exponents, as long as both exponents have the same sign.", "start_char_idx": 0, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60703d3a-f4a7-47be-806f-ea72b24ebcbe": {"__data__": {"id_": "60703d3a-f4a7-47be-806f-ea72b24ebcbe", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1dc36a62-a0fd-4597-b805-65ab5ba50f16", "node_type": "4", "metadata": {}, "hash": "d1f32d2d0b915431c424aaa1bc4f306bfeb8d9c4f7034d9c06f95daa4afa48e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "faf279d8-2686-4296-a25f-6af0400aa624", "node_type": "1", "metadata": {}, "hash": "84d994a1176280488bdee6954bacdddd9e95e6650b29b6bf2a382f94c487b13b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fea17699-389f-434e-b490-a3f7d0494313", "node_type": "1", "metadata": {}, "hash": "9ac361a7e01ed49ebbfd4a21c230a78208c50a5a18be6e6fe40fda2bf4778683", "class_name": "RelatedNodeInfo"}}, "text": "Negative exponents pose a challenge to simpli\ufb01ed sorting. If we", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fea17699-389f-434e-b490-a3f7d0494313": {"__data__": {"id_": "fea17699-389f-434e-b490-a3f7d0494313", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd4a7439-c90c-4661-8e1d-c960fca46d4d", "node_type": "4", "metadata": {}, "hash": "9ac361a7e01ed49ebbfd4a21c230a78208c50a5a18be6e6fe40fda2bf4778683", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60703d3a-f4a7-47be-806f-ea72b24ebcbe", "node_type": "1", "metadata": {}, "hash": "d1f32d2d0b915431c424aaa1bc4f306bfeb8d9c4f7034d9c06f95daa4afa48e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48", "node_type": "1", "metadata": {}, "hash": "3dfee7cf048da9de5944502fe2ec67ed6dc820914d36418efed181eb0ac3b474", "class_name": "RelatedNodeInfo"}}, "text": "use two\u2019s complement or any other notation in which negative exponents have a 1 in the most signi\ufb01cant bit of the exponent \ufb01eld, a negative exponent will look like a big number. For example, 1.0two \u00d7 2\u22121 would be represented as", "start_char_idx": 0, "end_char_idx": 227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48": {"__data__": {"id_": "d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8cf06d78-6b5b-4407-8a76-90404007f1b2", "node_type": "4", "metadata": {}, "hash": "3dfee7cf048da9de5944502fe2ec67ed6dc820914d36418efed181eb0ac3b474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fea17699-389f-434e-b490-a3f7d0494313", "node_type": "1", "metadata": {}, "hash": "9ac361a7e01ed49ebbfd4a21c230a78208c50a5a18be6e6fe40fda2bf4778683", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07375756-0465-40ae-98e0-f35453b84bde", "node_type": "1", "metadata": {}, "hash": "6f72d992aa363ee158ef45ef152c96bda7a56fec071b8dba7127bb6a8e2fcc84", "class_name": "RelatedNodeInfo"}}, "text": "(Remember that the leading 1 is implicit in the signi\ufb01cand.) The", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "07375756-0465-40ae-98e0-f35453b84bde": {"__data__": {"id_": "07375756-0465-40ae-98e0-f35453b84bde", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b67dfc9-60b6-45ab-87b4-76951db8acbd", "node_type": "4", "metadata": {}, "hash": "6f72d992aa363ee158ef45ef152c96bda7a56fec071b8dba7127bb6a8e2fcc84", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48", "node_type": "1", "metadata": {}, "hash": "3dfee7cf048da9de5944502fe2ec67ed6dc820914d36418efed181eb0ac3b474", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3389f99c-0365-483b-a06f-a3c538260a89", "node_type": "1", "metadata": {}, "hash": "a816a38e85c70439db06ef2ae225a02d6cce4ef9bdc31d39069cfa601787c9c1", "class_name": "RelatedNodeInfo"}}, "text": "value 1.0two \u00d7 2+1 would look like the smaller binary number", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3389f99c-0365-483b-a06f-a3c538260a89": {"__data__": {"id_": "3389f99c-0365-483b-a06f-a3c538260a89", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "91f22cf2-cdfc-4898-913b-a651348e6c2e", "node_type": "4", "metadata": {}, "hash": "a816a38e85c70439db06ef2ae225a02d6cce4ef9bdc31d39069cfa601787c9c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "07375756-0465-40ae-98e0-f35453b84bde", "node_type": "1", "metadata": {}, "hash": "6f72d992aa363ee158ef45ef152c96bda7a56fec071b8dba7127bb6a8e2fcc84", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b75477f-3a36-40d4-852d-597a3e0fae56", "node_type": "1", "metadata": {}, "hash": "1761db2a6fd76a70a263705f8381ba68193ad8098326bc69553485bd0853d4a1", "class_name": "RelatedNodeInfo"}}, "text": "The desirable notation must therefore represent the most negative", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3b75477f-3a36-40d4-852d-597a3e0fae56": {"__data__": {"id_": "3b75477f-3a36-40d4-852d-597a3e0fae56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fa5484a3-0e67-4338-977f-dd61d4ca4075", "node_type": "4", "metadata": {}, "hash": "1761db2a6fd76a70a263705f8381ba68193ad8098326bc69553485bd0853d4a1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3389f99c-0365-483b-a06f-a3c538260a89", "node_type": "1", "metadata": {}, "hash": "a816a38e85c70439db06ef2ae225a02d6cce4ef9bdc31d39069cfa601787c9c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "839b19a0-bc2d-41c6-8d36-257708d9e27b", "node_type": "1", "metadata": {}, "hash": "ee5a73be50634cf371ad61a7e90020c8d5cb6f1868cc8a57ad46ecf4601b18c9", "class_name": "RelatedNodeInfo"}}, "text": "exponent as 00 \u2026 00two and the most positive as 11 \u2026 11two. This convention is called biased notation, with the bias being the number subtracted from the normal, unsigned representation to determine the real value.", "start_char_idx": 0, "end_char_idx": 214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "839b19a0-bc2d-41c6-8d36-257708d9e27b": {"__data__": {"id_": "839b19a0-bc2d-41c6-8d36-257708d9e27b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5cc8f74-2501-41a8-8134-a625430e23ed", "node_type": "4", "metadata": {}, "hash": "ee5a73be50634cf371ad61a7e90020c8d5cb6f1868cc8a57ad46ecf4601b18c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b75477f-3a36-40d4-852d-597a3e0fae56", "node_type": "1", "metadata": {}, "hash": "1761db2a6fd76a70a263705f8381ba68193ad8098326bc69553485bd0853d4a1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efc65296-1b96-4be3-8697-81f8b403aebb", "node_type": "1", "metadata": {}, "hash": "71bb492e16c82bdbdef5643322ed0d3772622e18f725c0875f52da9cee1f61ed", "class_name": "RelatedNodeInfo"}}, "text": "IEEE 754 uses a bias of 127 for single precision, so an exponent of \u2212", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efc65296-1b96-4be3-8697-81f8b403aebb": {"__data__": {"id_": "efc65296-1b96-4be3-8697-81f8b403aebb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9441cb22-ee76-431a-bd30-76bba5fe3fef", "node_type": "4", "metadata": {}, "hash": "71bb492e16c82bdbdef5643322ed0d3772622e18f725c0875f52da9cee1f61ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "839b19a0-bc2d-41c6-8d36-257708d9e27b", "node_type": "1", "metadata": {}, "hash": "ee5a73be50634cf371ad61a7e90020c8d5cb6f1868cc8a57ad46ecf4601b18c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b5398d9-9738-4b1d-a914-f99dbcd4e49e", "node_type": "1", "metadata": {}, "hash": "74c75e5f51ca9a338e84da71d8b539f247adf0dd171554188a613c6bf207106a", "class_name": "RelatedNodeInfo"}}, "text": "1 is represented by the bit pa\u0000ern of the value \u2212 1 + 127ten, or 126ten=0111 1110two, and + 1 is represented by 1 + 127, or 128ten=1000 0000two. The exponent bias for double precision is 1023. Biased exponent means that the value represented by a \ufb02oating-point number is really", "start_char_idx": 0, "end_char_idx": 277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b5398d9-9738-4b1d-a914-f99dbcd4e49e": {"__data__": {"id_": "5b5398d9-9738-4b1d-a914-f99dbcd4e49e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a1f55f21-4657-4da8-89a2-7dd32fb42d5c", "node_type": "4", "metadata": {}, "hash": "74c75e5f51ca9a338e84da71d8b539f247adf0dd171554188a613c6bf207106a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efc65296-1b96-4be3-8697-81f8b403aebb", "node_type": "1", "metadata": {}, "hash": "71bb492e16c82bdbdef5643322ed0d3772622e18f725c0875f52da9cee1f61ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "061dba23-dc9f-4d09-81d7-019410a950d0", "node_type": "1", "metadata": {}, "hash": "4d85e6081f24fb8bb412e1f0a75a7151b30b013bcc11df5b9cb6671982e60649", "class_name": "RelatedNodeInfo"}}, "text": "The range of single precision numbers is then from as small as", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "061dba23-dc9f-4d09-81d7-019410a950d0": {"__data__": {"id_": "061dba23-dc9f-4d09-81d7-019410a950d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "af056eb7-5050-4b2e-8672-d832e080873d", "node_type": "4", "metadata": {}, "hash": "4d85e6081f24fb8bb412e1f0a75a7151b30b013bcc11df5b9cb6671982e60649", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b5398d9-9738-4b1d-a914-f99dbcd4e49e", "node_type": "1", "metadata": {}, "hash": "74c75e5f51ca9a338e84da71d8b539f247adf0dd171554188a613c6bf207106a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a", "node_type": "1", "metadata": {}, "hash": "db66f1a1ba1385360ca9f1e7b24a102e43da9a799a8d2736d49fe0e6d54fbc55", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s demonstrate.", "start_char_idx": 0, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a": {"__data__": {"id_": "dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4365a805-929b-4e96-be61-ef73018d003d", "node_type": "4", "metadata": {}, "hash": "db66f1a1ba1385360ca9f1e7b24a102e43da9a799a8d2736d49fe0e6d54fbc55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "061dba23-dc9f-4d09-81d7-019410a950d0", "node_type": "1", "metadata": {}, "hash": "4d85e6081f24fb8bb412e1f0a75a7151b30b013bcc11df5b9cb6671982e60649", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b163c55b-a88d-4ef3-aa97-254e0e513baa", "node_type": "1", "metadata": {}, "hash": "66fde63b285b11734945edf5e9ebdb578689f230a2f005a61def93569797134d", "class_name": "RelatedNodeInfo"}}, "text": "Example Show the IEEE 754 binary representation of the number \u2212 0.75ten in single and double precision.", "start_char_idx": 0, "end_char_idx": 103, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b163c55b-a88d-4ef3-aa97-254e0e513baa": {"__data__": {"id_": "b163c55b-a88d-4ef3-aa97-254e0e513baa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "660a6b27-868b-4273-a28e-87a1fd7a150f", "node_type": "4", "metadata": {}, "hash": "66fde63b285b11734945edf5e9ebdb578689f230a2f005a61def93569797134d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a", "node_type": "1", "metadata": {}, "hash": "db66f1a1ba1385360ca9f1e7b24a102e43da9a799a8d2736d49fe0e6d54fbc55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ddf98014-b0db-4090-ac63-7bf9f169fe0e", "node_type": "1", "metadata": {}, "hash": "cf9f44b9d70cd07b25e62f544a1d2b6e24bc8b0ddade7b24f3bb288906b0b49b", "class_name": "RelatedNodeInfo"}}, "text": "Answer The number \u2212 0.75ten is also", "start_char_idx": 0, "end_char_idx": 35, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddf98014-b0db-4090-ac63-7bf9f169fe0e": {"__data__": {"id_": "ddf98014-b0db-4090-ac63-7bf9f169fe0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9be281f8-6084-4da3-9c33-f7988e3533cc", "node_type": "4", "metadata": {}, "hash": "cf9f44b9d70cd07b25e62f544a1d2b6e24bc8b0ddade7b24f3bb288906b0b49b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b163c55b-a88d-4ef3-aa97-254e0e513baa", "node_type": "1", "metadata": {}, "hash": "66fde63b285b11734945edf5e9ebdb578689f230a2f005a61def93569797134d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53cab28e-abc6-4a4f-b645-553a7aed6321", "node_type": "1", "metadata": {}, "hash": "d4532d8a70b0bc3ea5bcdadee1ec838dbe7b861a03c235472111e7f7eaf06dd3", "class_name": "RelatedNodeInfo"}}, "text": "It is also represented by the binary fraction", "start_char_idx": 0, "end_char_idx": 45, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53cab28e-abc6-4a4f-b645-553a7aed6321": {"__data__": {"id_": "53cab28e-abc6-4a4f-b645-553a7aed6321", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0f97b675-c1b8-4754-a09f-7c385ff396d5", "node_type": "4", "metadata": {}, "hash": "d4532d8a70b0bc3ea5bcdadee1ec838dbe7b861a03c235472111e7f7eaf06dd3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ddf98014-b0db-4090-ac63-7bf9f169fe0e", "node_type": "1", "metadata": {}, "hash": "cf9f44b9d70cd07b25e62f544a1d2b6e24bc8b0ddade7b24f3bb288906b0b49b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "904d9f8e-c859-4f19-ba91-a4270716d33c", "node_type": "1", "metadata": {}, "hash": "67d92a7e1ed6675d4cc6f59742c5c1cedec8b930439628d0ef25e9ee15d29938", "class_name": "RelatedNodeInfo"}}, "text": "In scienti\ufb01c notation, the value is", "start_char_idx": 0, "end_char_idx": 35, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "904d9f8e-c859-4f19-ba91-a4270716d33c": {"__data__": {"id_": "904d9f8e-c859-4f19-ba91-a4270716d33c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1a666200-77e3-4b0d-af82-e260b7c311a6", "node_type": "4", "metadata": {}, "hash": "67d92a7e1ed6675d4cc6f59742c5c1cedec8b930439628d0ef25e9ee15d29938", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53cab28e-abc6-4a4f-b645-553a7aed6321", "node_type": "1", "metadata": {}, "hash": "d4532d8a70b0bc3ea5bcdadee1ec838dbe7b861a03c235472111e7f7eaf06dd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a835099-9e5f-426e-90de-0c966952599e", "node_type": "1", "metadata": {}, "hash": "2c6a25b6bbb80658831065f8ae6ee8f39d56ce18643c10d047b3a09349f2771e", "class_name": "RelatedNodeInfo"}}, "text": "and in normalized scienti\ufb01c notation, it is", "start_char_idx": 0, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a835099-9e5f-426e-90de-0c966952599e": {"__data__": {"id_": "9a835099-9e5f-426e-90de-0c966952599e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ee4da73-0299-42c4-9a33-a2daff840a34", "node_type": "4", "metadata": {}, "hash": "2c6a25b6bbb80658831065f8ae6ee8f39d56ce18643c10d047b3a09349f2771e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "904d9f8e-c859-4f19-ba91-a4270716d33c", "node_type": "1", "metadata": {}, "hash": "67d92a7e1ed6675d4cc6f59742c5c1cedec8b930439628d0ef25e9ee15d29938", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f644fffa-88af-4eb4-8509-8a54a4bfb4d8", "node_type": "1", "metadata": {}, "hash": "e44919f88ace1e06760de909471cf03b4d9ab1c23526ada5db9a3f022343de8e", "class_name": "RelatedNodeInfo"}}, "text": "The general representation for a single precision number is", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f644fffa-88af-4eb4-8509-8a54a4bfb4d8": {"__data__": {"id_": "f644fffa-88af-4eb4-8509-8a54a4bfb4d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2b9457e7-20f3-436a-9a9e-2441e55c245c", "node_type": "4", "metadata": {}, "hash": "e44919f88ace1e06760de909471cf03b4d9ab1c23526ada5db9a3f022343de8e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a835099-9e5f-426e-90de-0c966952599e", "node_type": "1", "metadata": {}, "hash": "2c6a25b6bbb80658831065f8ae6ee8f39d56ce18643c10d047b3a09349f2771e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83f6f991-db0f-4527-86cc-65e7fb683baf", "node_type": "1", "metadata": {}, "hash": "f3be0b7a83ef6f9c746fd2831bc53f0fa0052f47efa467c3318fa88a405df26d", "class_name": "RelatedNodeInfo"}}, "text": "Subtracting the bias 127 from the exponent of \u2212 1.1two \u00d7 2\u22121 yields", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83f6f991-db0f-4527-86cc-65e7fb683baf": {"__data__": {"id_": "83f6f991-db0f-4527-86cc-65e7fb683baf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5be32343-a17a-4734-ae67-f366d99ca1ac", "node_type": "4", "metadata": {}, "hash": "f3be0b7a83ef6f9c746fd2831bc53f0fa0052f47efa467c3318fa88a405df26d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f644fffa-88af-4eb4-8509-8a54a4bfb4d8", "node_type": "1", "metadata": {}, "hash": "e44919f88ace1e06760de909471cf03b4d9ab1c23526ada5db9a3f022343de8e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db3e303c-5d55-418c-99b9-5050758dc25b", "node_type": "1", "metadata": {}, "hash": "8accfe28c559dba20fffe2ac344e76827c058881edc046a0d65b2974838b751e", "class_name": "RelatedNodeInfo"}}, "text": "The single precision binary representation of \u2212 0.75ten is then", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db3e303c-5d55-418c-99b9-5050758dc25b": {"__data__": {"id_": "db3e303c-5d55-418c-99b9-5050758dc25b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "10c210d2-a93b-4461-9bbc-ec88f5e78dba", "node_type": "4", "metadata": {}, "hash": "8accfe28c559dba20fffe2ac344e76827c058881edc046a0d65b2974838b751e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83f6f991-db0f-4527-86cc-65e7fb683baf", "node_type": "1", "metadata": {}, "hash": "f3be0b7a83ef6f9c746fd2831bc53f0fa0052f47efa467c3318fa88a405df26d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a13a9b17-3d16-4adc-86db-71408860e865", "node_type": "1", "metadata": {}, "hash": "1b1626241a09a49e8326f3a1baa6b7fa974dbe73244d1343ebaa0fad4993f938", "class_name": "RelatedNodeInfo"}}, "text": "The double precision representation is", "start_char_idx": 0, "end_char_idx": 38, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a13a9b17-3d16-4adc-86db-71408860e865": {"__data__": {"id_": "a13a9b17-3d16-4adc-86db-71408860e865", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0b146157-cb0d-4c1d-a18e-e4f7d9a1d281", "node_type": "4", "metadata": {}, "hash": "1b1626241a09a49e8326f3a1baa6b7fa974dbe73244d1343ebaa0fad4993f938", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db3e303c-5d55-418c-99b9-5050758dc25b", "node_type": "1", "metadata": {}, "hash": "8accfe28c559dba20fffe2ac344e76827c058881edc046a0d65b2974838b751e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b170cd61-17f0-4677-ae53-65ae00359b85", "node_type": "1", "metadata": {}, "hash": "c90c2b4c343808de767a7c2974e0184db77300fa771e5cc10db3f2f7d3a87cbc", "class_name": "RelatedNodeInfo"}}, "text": "Now let\u2019s try going the other direction.", "start_char_idx": 0, "end_char_idx": 40, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b170cd61-17f0-4677-ae53-65ae00359b85": {"__data__": {"id_": "b170cd61-17f0-4677-ae53-65ae00359b85", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "850320d2-bec2-4c39-b863-462d24f86926", "node_type": "4", "metadata": {}, "hash": "c90c2b4c343808de767a7c2974e0184db77300fa771e5cc10db3f2f7d3a87cbc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a13a9b17-3d16-4adc-86db-71408860e865", "node_type": "1", "metadata": {}, "hash": "1b1626241a09a49e8326f3a1baa6b7fa974dbe73244d1343ebaa0fad4993f938", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d42a912-e6f9-4182-842a-ea041436f194", "node_type": "1", "metadata": {}, "hash": "9c4109d4cfebf4414e7397c782625449ec39513c5e9bea8de7a8c68d9ff1b1c1", "class_name": "RelatedNodeInfo"}}, "text": "Example What decimal number is represented by this single precision \ufb02oat?", "start_char_idx": 0, "end_char_idx": 73, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d42a912-e6f9-4182-842a-ea041436f194": {"__data__": {"id_": "9d42a912-e6f9-4182-842a-ea041436f194", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1cbad5d0-eb86-485d-8df4-08e9bd8189fb", "node_type": "4", "metadata": {}, "hash": "9c4109d4cfebf4414e7397c782625449ec39513c5e9bea8de7a8c68d9ff1b1c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b170cd61-17f0-4677-ae53-65ae00359b85", "node_type": "1", "metadata": {}, "hash": "c90c2b4c343808de767a7c2974e0184db77300fa771e5cc10db3f2f7d3a87cbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "248ebe53-5528-454a-bc63-c127decd63b6", "node_type": "1", "metadata": {}, "hash": "daa0b1268ea434246e0045d279bfaf4f26adc8f0a6a3be9f98ad9e1c0785f14c", "class_name": "RelatedNodeInfo"}}, "text": "Answer The sign bit is 1, the exponent \ufb01eld contains 129, and the fraction \ufb01eld contains 1 \u00d7 2\u22122 = 1/4, or 0.25. Using the basic equation,", "start_char_idx": 0, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "248ebe53-5528-454a-bc63-c127decd63b6": {"__data__": {"id_": "248ebe53-5528-454a-bc63-c127decd63b6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9ce3b0c7-0884-4061-b62d-0a36504d4db7", "node_type": "4", "metadata": {}, "hash": "daa0b1268ea434246e0045d279bfaf4f26adc8f0a6a3be9f98ad9e1c0785f14c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d42a912-e6f9-4182-842a-ea041436f194", "node_type": "1", "metadata": {}, "hash": "9c4109d4cfebf4414e7397c782625449ec39513c5e9bea8de7a8c68d9ff1b1c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a929d1e-9189-4504-84e9-a8dbb3531945", "node_type": "1", "metadata": {}, "hash": "11d18527891781d6cd72d928e9b037ab1f9ebc19db0f7210436ee37841892474", "class_name": "RelatedNodeInfo"}}, "text": "In the next few subsections, we will give the algorithms for", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a929d1e-9189-4504-84e9-a8dbb3531945": {"__data__": {"id_": "7a929d1e-9189-4504-84e9-a8dbb3531945", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e6b8895f-f81c-43d5-b992-043e95f84ce3", "node_type": "4", "metadata": {}, "hash": "11d18527891781d6cd72d928e9b037ab1f9ebc19db0f7210436ee37841892474", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "248ebe53-5528-454a-bc63-c127decd63b6", "node_type": "1", "metadata": {}, "hash": "daa0b1268ea434246e0045d279bfaf4f26adc8f0a6a3be9f98ad9e1c0785f14c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24ef898d-2f22-4fee-8b59-79465a7cf831", "node_type": "1", "metadata": {}, "hash": "99a229fa27be725d3296a6bbf022df478e01c13ff74ec0501b08d9518d851b95", "class_name": "RelatedNodeInfo"}}, "text": "\ufb02oating-point addition and multiplication. At their core, they use the corresponding integer operations on the signi\ufb01cands, but extra bookkeeping is necessary to handle the exponents and normalize the result. We \ufb01rst give an intuitive derivation of the algorithms in decimal and then give a more detailed, binary version in the \ufb01gures. Following IEEE guidelines, the IEEE 754 commi\u0000ee was reformed", "start_char_idx": 0, "end_char_idx": 397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24ef898d-2f22-4fee-8b59-79465a7cf831": {"__data__": {"id_": "24ef898d-2f22-4fee-8b59-79465a7cf831", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83c7913f-5bae-44b7-af55-50698092edbb", "node_type": "4", "metadata": {}, "hash": "99a229fa27be725d3296a6bbf022df478e01c13ff74ec0501b08d9518d851b95", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a929d1e-9189-4504-84e9-a8dbb3531945", "node_type": "1", "metadata": {}, "hash": "11d18527891781d6cd72d928e9b037ab1f9ebc19db0f7210436ee37841892474", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c04df0f-4719-4d6c-937b-54b36e0557e8", "node_type": "1", "metadata": {}, "hash": "f5ddad80085807460349daa0e6d422068cfc951daf742ed8f02694f1b08dc19d", "class_name": "RelatedNodeInfo"}}, "text": "20 years after the standard to see what changes, if any, should be made. The revised standard IEEE 754-2008 includes nearly all the IEEE 754-1985 and adds a 16-bit format (\u201chalf precision\u201d) and a 128- bit format (\u201cquadruple precision\u201d). Half precision has a 1-bit sign, 5- bit exponent (with a bias of 15), and a 10-bit fraction. Quadruple precision has a 1-bit sign, 15-bit exponent (with a bias of 262143), and a 112-bit fraction. No hardware has yet been built that supports quadruple precision, but it will surely come. The revised standard also add decimal \ufb02oating point arithmetic, which IBM mainframes have implemented.", "start_char_idx": 0, "end_char_idx": 626, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c04df0f-4719-4d6c-937b-54b36e0557e8": {"__data__": {"id_": "4c04df0f-4719-4d6c-937b-54b36e0557e8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f893b623-dd08-45bb-8f3c-9fb3c0b3ee85", "node_type": "4", "metadata": {}, "hash": "f5ddad80085807460349daa0e6d422068cfc951daf742ed8f02694f1b08dc19d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24ef898d-2f22-4fee-8b59-79465a7cf831", "node_type": "1", "metadata": {}, "hash": "99a229fa27be725d3296a6bbf022df478e01c13ff74ec0501b08d9518d851b95", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94cc32e7-6487-4a54-8642-c1c22002cfba", "node_type": "1", "metadata": {}, "hash": "91613bdc4b7eefed032098d0a6245cf7b3e153b7683bae358d196bc0c536d6f6", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration In an a\u0000empt to increase range without removing bits from the signi\ufb01cand, some computers before the IEEE 754 standard used a base other than 2. For example, the IBM 360 and 370 mainframe computers used base 16. Since changing the IBM exponent by one means shifting the signi\ufb01cand by 4 bits, \u201cnormalized\u201d base 16 numbers can have up to 3 leading bits of 0s! Hence, hexadecimal digits mean that up to 3 bits must be dropped from the signi\ufb01cand, which leads to surprising problems in the accuracy of \ufb02oating-point arithmetic. IBM mainframes now support IEEE 754 as well as the hex format.", "start_char_idx": 0, "end_char_idx": 597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94cc32e7-6487-4a54-8642-c1c22002cfba": {"__data__": {"id_": "94cc32e7-6487-4a54-8642-c1c22002cfba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3fc03d3e-4786-4798-9dcc-73c172831b48", "node_type": "4", "metadata": {}, "hash": "91613bdc4b7eefed032098d0a6245cf7b3e153b7683bae358d196bc0c536d6f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c04df0f-4719-4d6c-937b-54b36e0557e8", "node_type": "1", "metadata": {}, "hash": "f5ddad80085807460349daa0e6d422068cfc951daf742ed8f02694f1b08dc19d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "057fbba6-1944-45bc-8f9c-8541b5cd991a", "node_type": "1", "metadata": {}, "hash": "5fd31cbe8549b380aeb2cca91d3760c740994397df13d3bdf7176816bb4e7ca3", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s add numbers in scienti\ufb01c notation by hand to illustrate the problems in \ufb02oating-point addition: 9.999ten \u00d7 101 + 1.610ten \u00d7 10\u22121. Assume that we can store only four decimal digits of the signi\ufb01cand and two decimal digits of the exponent.", "start_char_idx": 0, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "057fbba6-1944-45bc-8f9c-8541b5cd991a": {"__data__": {"id_": "057fbba6-1944-45bc-8f9c-8541b5cd991a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2ba397eb-6d39-4584-bb2b-8b427da3d25a", "node_type": "4", "metadata": {}, "hash": "5fd31cbe8549b380aeb2cca91d3760c740994397df13d3bdf7176816bb4e7ca3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94cc32e7-6487-4a54-8642-c1c22002cfba", "node_type": "1", "metadata": {}, "hash": "91613bdc4b7eefed032098d0a6245cf7b3e153b7683bae358d196bc0c536d6f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "42624bdd-7325-4abe-aa57-b6703a8b029d", "node_type": "1", "metadata": {}, "hash": "167b56bcc602612b6f3e6f6b16e6310ede5f052f6f15d9165cec41a45ab0ccd6", "class_name": "RelatedNodeInfo"}}, "text": "Step 1. To be able to add these numbers properly, we must align the decimal point of the number that has the smaller exponent. Hence, we need a form of the smaller number, 1.610ten \u00d7 10\u22121, that matches the larger exponent. We obtain this by observing that there are multiple representations of an unnormalized \ufb02oating-point number in scienti\ufb01c notation:", "start_char_idx": 0, "end_char_idx": 353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42624bdd-7325-4abe-aa57-b6703a8b029d": {"__data__": {"id_": "42624bdd-7325-4abe-aa57-b6703a8b029d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1d90a201-1189-42d3-a7b4-3e1f650d3eb9", "node_type": "4", "metadata": {}, "hash": "167b56bcc602612b6f3e6f6b16e6310ede5f052f6f15d9165cec41a45ab0ccd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "057fbba6-1944-45bc-8f9c-8541b5cd991a", "node_type": "1", "metadata": {}, "hash": "5fd31cbe8549b380aeb2cca91d3760c740994397df13d3bdf7176816bb4e7ca3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b380bae-b186-466e-b888-af23effe7eb7", "node_type": "1", "metadata": {}, "hash": "f16178dac196f6267c312694f2d300d10c47147945a117ea00942744c6fb6abb", "class_name": "RelatedNodeInfo"}}, "text": "The number on the right is the version we desire, since its exponent matches the exponent of the larger number, 9.999ten \u00d7 101. Thus, the \ufb01rst step shifts the signi\ufb01cand of the smaller number to the right until its corrected exponent matches that of the larger number. But we can represent only four decimal digits so, after shifting, the number is really", "start_char_idx": 0, "end_char_idx": 355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b380bae-b186-466e-b888-af23effe7eb7": {"__data__": {"id_": "5b380bae-b186-466e-b888-af23effe7eb7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60a8530b-d0e5-47d6-b516-1f5d4eb663e3", "node_type": "4", "metadata": {}, "hash": "f16178dac196f6267c312694f2d300d10c47147945a117ea00942744c6fb6abb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "42624bdd-7325-4abe-aa57-b6703a8b029d", "node_type": "1", "metadata": {}, "hash": "167b56bcc602612b6f3e6f6b16e6310ede5f052f6f15d9165cec41a45ab0ccd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2a094f6-2db9-48ef-a2c9-b2e0470a52ce", "node_type": "1", "metadata": {}, "hash": "1f1a06c21dce1b235a62ffe4e6aceafef62cbb5b9748ea43b8ab628e6ce17a9e", "class_name": "RelatedNodeInfo"}}, "text": "Step 2. Next comes the addition of the signi\ufb01cands:", "start_char_idx": 0, "end_char_idx": 51, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2a094f6-2db9-48ef-a2c9-b2e0470a52ce": {"__data__": {"id_": "f2a094f6-2db9-48ef-a2c9-b2e0470a52ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7b7d3550-751d-465e-bbbd-ab277d5acfc6", "node_type": "4", "metadata": {}, "hash": "1f1a06c21dce1b235a62ffe4e6aceafef62cbb5b9748ea43b8ab628e6ce17a9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b380bae-b186-466e-b888-af23effe7eb7", "node_type": "1", "metadata": {}, "hash": "f16178dac196f6267c312694f2d300d10c47147945a117ea00942744c6fb6abb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ccd9869-9c12-46a9-8c06-789690d8dd3c", "node_type": "1", "metadata": {}, "hash": "e28a371969b7357efb154673a72e54dcd7f2a0a13e17fdc59a77ff81be775ea8", "class_name": "RelatedNodeInfo"}}, "text": "The sum is 10.015ten \u00d7 101. Step 3. This sum is not in normalized scienti\ufb01c notation, so we need to adjust it:", "start_char_idx": 0, "end_char_idx": 110, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ccd9869-9c12-46a9-8c06-789690d8dd3c": {"__data__": {"id_": "4ccd9869-9c12-46a9-8c06-789690d8dd3c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "74f13071-46ec-4e1b-895e-b82ac56e12f0", "node_type": "4", "metadata": {}, "hash": "e28a371969b7357efb154673a72e54dcd7f2a0a13e17fdc59a77ff81be775ea8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2a094f6-2db9-48ef-a2c9-b2e0470a52ce", "node_type": "1", "metadata": {}, "hash": "1f1a06c21dce1b235a62ffe4e6aceafef62cbb5b9748ea43b8ab628e6ce17a9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "335f8606-6a7d-4339-abe5-b112a96814e1", "node_type": "1", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}}, "text": "After the addition we may have to shift the sum to put it into normalized form, adjusting the exponent appropriately. This example shows shifting to the right, but if one number were positive and the other were negative, it would be possible for the sum to have many leading 0s, requiring left shifts. Whenever the exponent is increased or decreased, we must check for over\ufb02ow or under\ufb02ow\u2014that is, we must make sure that the exponent still \ufb01ts in its \ufb01eld. Step 4. Since we assumed that the signi\ufb01cand can be only four digits long (excluding the sign), we must round the number. In our grammar school algorithm, the rules truncate the number if the digit to the right of the desired point is between 0 and 4 and add 1 to the digit if the number to the right is between 5 and 9. The number", "start_char_idx": 0, "end_char_idx": 788, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "335f8606-6a7d-4339-abe5-b112a96814e1": {"__data__": {"id_": "335f8606-6a7d-4339-abe5-b112a96814e1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "103ca0cf-524d-4d7d-9e57-9fc4188ffdc8", "node_type": "4", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ccd9869-9c12-46a9-8c06-789690d8dd3c", "node_type": "1", "metadata": {}, "hash": "e28a371969b7357efb154673a72e54dcd7f2a0a13e17fdc59a77ff81be775ea8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fb69d8f-a0dc-4257-819e-037e68e0115a", "node_type": "1", "metadata": {}, "hash": "400d641f54ee6deebb3c413724325cd844da2d14c5840cb34740d126a9796250", "class_name": "RelatedNodeInfo"}}, "text": "is rounded to four digits in the signi\ufb01cand to", "start_char_idx": 0, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fb69d8f-a0dc-4257-819e-037e68e0115a": {"__data__": {"id_": "5fb69d8f-a0dc-4257-819e-037e68e0115a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64ec8d8a-b3dd-41c1-b020-cae7f01418ce", "node_type": "4", "metadata": {}, "hash": "400d641f54ee6deebb3c413724325cd844da2d14c5840cb34740d126a9796250", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "335f8606-6a7d-4339-abe5-b112a96814e1", "node_type": "1", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "658dd5b6-71cd-45d2-b48a-4d9c018cd803", "node_type": "1", "metadata": {}, "hash": "7435c152c38ce491d73cee4aef5f694009c33ec5d7454830c3d051774f665057", "class_name": "RelatedNodeInfo"}}, "text": "since the fourth digit to the right of the decimal point was between 5 and 9. Notice that if we have bad luck on rounding, such as adding 1 to a string of 9s, the sum may no longer be normalized and we would need to perform step 3 again.", "start_char_idx": 0, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "658dd5b6-71cd-45d2-b48a-4d9c018cd803": {"__data__": {"id_": "658dd5b6-71cd-45d2-b48a-4d9c018cd803", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5ecae0c-89ab-4a2d-bacd-6645b8a3f94a", "node_type": "4", "metadata": {}, "hash": "7435c152c38ce491d73cee4aef5f694009c33ec5d7454830c3d051774f665057", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fb69d8f-a0dc-4257-819e-037e68e0115a", "node_type": "1", "metadata": {}, "hash": "400d641f54ee6deebb3c413724325cd844da2d14c5840cb34740d126a9796250", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c06a1e04-1059-468d-8743-6955db84422f", "node_type": "1", "metadata": {}, "hash": "6967c1c8265fe88de9b34a09ef15dd73135bff429c68416a8a1a1933f224fb76", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.14 shows the algorithm for binary \ufb02oating-point addition", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c06a1e04-1059-468d-8743-6955db84422f": {"__data__": {"id_": "c06a1e04-1059-468d-8743-6955db84422f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0aee6b76-55b1-4c36-b5f6-7caea3a33f82", "node_type": "4", "metadata": {}, "hash": "6967c1c8265fe88de9b34a09ef15dd73135bff429c68416a8a1a1933f224fb76", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "658dd5b6-71cd-45d2-b48a-4d9c018cd803", "node_type": "1", "metadata": {}, "hash": "7435c152c38ce491d73cee4aef5f694009c33ec5d7454830c3d051774f665057", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32b87b6c-7e2f-4e13-a5a8-4079677eac8e", "node_type": "1", "metadata": {}, "hash": "47a8139f1ffb01377af8c98cf233e04cccdefda20ce4aa2ab1971db9854884da", "class_name": "RelatedNodeInfo"}}, "text": "that follows this decimal example. Steps 1 and 2 are similar to the example just discussed: adjust the signi\ufb01cand of the number with the smaller exponent and then add the two signi\ufb01cands. Step 3 normalizes the results, forcing a check for over\ufb02ow or under\ufb02ow. The test for over\ufb02ow and under\ufb02ow in step 3 depends on the precision of the operands. Recall that the pa\u0000ern of all 0 bits in the exponent is reserved and used for the \ufb02oating-point representation", "start_char_idx": 0, "end_char_idx": 456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32b87b6c-7e2f-4e13-a5a8-4079677eac8e": {"__data__": {"id_": "32b87b6c-7e2f-4e13-a5a8-4079677eac8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8625af05-ba7d-4238-8336-1148e0d1c3ed", "node_type": "4", "metadata": {}, "hash": "47a8139f1ffb01377af8c98cf233e04cccdefda20ce4aa2ab1971db9854884da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c06a1e04-1059-468d-8743-6955db84422f", "node_type": "1", "metadata": {}, "hash": "6967c1c8265fe88de9b34a09ef15dd73135bff429c68416a8a1a1933f224fb76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e488d82e-0886-4ddc-a7da-56caca7b4e1b", "node_type": "1", "metadata": {}, "hash": "beeeb22dbd83d903deafa023fae49eed297545f61dd67c31a3addecdac3e3671", "class_name": "RelatedNodeInfo"}}, "text": "of zero. Moreover, the pa\u0000ern of all 1 bits in the exponent is reserved for indicating values and situations outside the scope of normal \ufb02oating-point numbers (see the Elaboration on page 232). For the example below, remember that for single precision, the maximum exponent is 127, and the minimum exponent is \u2212126.", "start_char_idx": 0, "end_char_idx": 315, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e488d82e-0886-4ddc-a7da-56caca7b4e1b": {"__data__": {"id_": "e488d82e-0886-4ddc-a7da-56caca7b4e1b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "432a4166-febb-40bf-afd0-544601c658eb", "node_type": "4", "metadata": {}, "hash": "beeeb22dbd83d903deafa023fae49eed297545f61dd67c31a3addecdac3e3671", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32b87b6c-7e2f-4e13-a5a8-4079677eac8e", "node_type": "1", "metadata": {}, "hash": "47a8139f1ffb01377af8c98cf233e04cccdefda20ce4aa2ab1971db9854884da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3ab9f865-dc30-4226-b4f8-88aa5a199f7f", "node_type": "1", "metadata": {}, "hash": "7cc8581bc79bccad2e1417f82f39ff900bc4af53e5f6179eebec15878d3b1695", "class_name": "RelatedNodeInfo"}}, "text": "Example Try adding the numbers 0.5ten and \u2212 0.4375ten in binary using the algorithm in Figure 3.14.", "start_char_idx": 0, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3ab9f865-dc30-4226-b4f8-88aa5a199f7f": {"__data__": {"id_": "3ab9f865-dc30-4226-b4f8-88aa5a199f7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "162c1f18-91e2-46cb-9bf0-e0feb5a90606", "node_type": "4", "metadata": {}, "hash": "7cc8581bc79bccad2e1417f82f39ff900bc4af53e5f6179eebec15878d3b1695", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e488d82e-0886-4ddc-a7da-56caca7b4e1b", "node_type": "1", "metadata": {}, "hash": "beeeb22dbd83d903deafa023fae49eed297545f61dd67c31a3addecdac3e3671", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f109dd60-c377-42c7-b3a0-0e7a861cd542", "node_type": "1", "metadata": {}, "hash": "4f015c9633a957f9c20f8e4750df0e6b6029ac0ce3814c4702ce9dde050d88d2", "class_name": "RelatedNodeInfo"}}, "text": "Answer Let\u2019s \ufb01rst look at the binary version of the two numbers in normalized scienti\ufb01c notation, assuming that we keep 4 bits of precision:", "start_char_idx": 0, "end_char_idx": 140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f109dd60-c377-42c7-b3a0-0e7a861cd542": {"__data__": {"id_": "f109dd60-c377-42c7-b3a0-0e7a861cd542", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4ec5bcf6-81b8-4bd0-8094-cdc47606b1f3", "node_type": "4", "metadata": {}, "hash": "4f015c9633a957f9c20f8e4750df0e6b6029ac0ce3814c4702ce9dde050d88d2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3ab9f865-dc30-4226-b4f8-88aa5a199f7f", "node_type": "1", "metadata": {}, "hash": "7cc8581bc79bccad2e1417f82f39ff900bc4af53e5f6179eebec15878d3b1695", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c6366f4-651d-4a94-adf4-de81d867cb62", "node_type": "1", "metadata": {}, "hash": "4453344bb785c7dd88c0f43f041ac02ff2ef9144ae36ed586443a53c91d50937", "class_name": "RelatedNodeInfo"}}, "text": "Now we follow the algorithm:", "start_char_idx": 0, "end_char_idx": 28, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c6366f4-651d-4a94-adf4-de81d867cb62": {"__data__": {"id_": "7c6366f4-651d-4a94-adf4-de81d867cb62", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9787d327-29e9-4f5b-aeca-922a1f395ce6", "node_type": "4", "metadata": {}, "hash": "4453344bb785c7dd88c0f43f041ac02ff2ef9144ae36ed586443a53c91d50937", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f109dd60-c377-42c7-b3a0-0e7a861cd542", "node_type": "1", "metadata": {}, "hash": "4f015c9633a957f9c20f8e4750df0e6b6029ac0ce3814c4702ce9dde050d88d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2bfcc599-d22f-42e5-a1a7-5ecd6023b8de", "node_type": "1", "metadata": {}, "hash": "d626dcc1030ee9c3234efba10d45d8acce4436576f063c5bae9984d254008d2f", "class_name": "RelatedNodeInfo"}}, "text": "Step 1. The signi\ufb01cand of the number with the lesser exponent (\u22121.11two \u00d7 2\u22122) is shifted right until its exponent matches the larger number:", "start_char_idx": 0, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2bfcc599-d22f-42e5-a1a7-5ecd6023b8de": {"__data__": {"id_": "2bfcc599-d22f-42e5-a1a7-5ecd6023b8de", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1cd869a3-c36f-44a3-9e98-039fd23a5478", "node_type": "4", "metadata": {}, "hash": "d626dcc1030ee9c3234efba10d45d8acce4436576f063c5bae9984d254008d2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c6366f4-651d-4a94-adf4-de81d867cb62", "node_type": "1", "metadata": {}, "hash": "4453344bb785c7dd88c0f43f041ac02ff2ef9144ae36ed586443a53c91d50937", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ba509ab-2617-45d2-b7d9-f1e1b576d81f", "node_type": "1", "metadata": {}, "hash": "f8263ebd54c3de08be91b4194cf665baf49b3d625f1b5ec858e75002fdfa2fca", "class_name": "RelatedNodeInfo"}}, "text": "Step 3. Normalize the sum, checking for over\ufb02ow or under\ufb02ow:", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ba509ab-2617-45d2-b7d9-f1e1b576d81f": {"__data__": {"id_": "9ba509ab-2617-45d2-b7d9-f1e1b576d81f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "696d891e-3a50-45fd-bad2-8c0628abacd6", "node_type": "4", "metadata": {}, "hash": "f8263ebd54c3de08be91b4194cf665baf49b3d625f1b5ec858e75002fdfa2fca", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2bfcc599-d22f-42e5-a1a7-5ecd6023b8de", "node_type": "1", "metadata": {}, "hash": "d626dcc1030ee9c3234efba10d45d8acce4436576f063c5bae9984d254008d2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22dc7c04-870e-4073-a733-bacbdca3e116", "node_type": "1", "metadata": {}, "hash": "353217db480e1c8dcbdbf874513f5ab9bde25d86fadd4483af4211d426130fbe", "class_name": "RelatedNodeInfo"}}, "text": "Since 127 \u2265 \u22124 \u2265 \u2212 126, there is no over\ufb02ow or under\ufb02ow. (The biased exponent would be \u22124 + 127, or 123, which is between 1 and 254, the smallest and largest unreserved biased exponents.) Step 4. Round the sum:", "start_char_idx": 0, "end_char_idx": 210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22dc7c04-870e-4073-a733-bacbdca3e116": {"__data__": {"id_": "22dc7c04-870e-4073-a733-bacbdca3e116", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf5fe259-2d20-4b96-bb12-eb80b24e0e72", "node_type": "4", "metadata": {}, "hash": "353217db480e1c8dcbdbf874513f5ab9bde25d86fadd4483af4211d426130fbe", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ba509ab-2617-45d2-b7d9-f1e1b576d81f", "node_type": "1", "metadata": {}, "hash": "f8263ebd54c3de08be91b4194cf665baf49b3d625f1b5ec858e75002fdfa2fca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91a3aec0-ea14-4273-8d29-b49b98fe36a7", "node_type": "1", "metadata": {}, "hash": "9d85731e5d0cee95794ffdfa63608cb8fe43ebfae4897c568b2219c7622e7ffa", "class_name": "RelatedNodeInfo"}}, "text": "The sum already \ufb01ts exactly in 4 bits, so there is no change to the bits due to rounding. This sum is then", "start_char_idx": 0, "end_char_idx": 106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "91a3aec0-ea14-4273-8d29-b49b98fe36a7": {"__data__": {"id_": "91a3aec0-ea14-4273-8d29-b49b98fe36a7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ff290db7-e39c-4fe1-9168-df0a1a3255a7", "node_type": "4", "metadata": {}, "hash": "9d85731e5d0cee95794ffdfa63608cb8fe43ebfae4897c568b2219c7622e7ffa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22dc7c04-870e-4073-a733-bacbdca3e116", "node_type": "1", "metadata": {}, "hash": "353217db480e1c8dcbdbf874513f5ab9bde25d86fadd4483af4211d426130fbe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "835717d3-4612-498a-84e9-9806dac4886c", "node_type": "1", "metadata": {}, "hash": "deea5be6e32382bd32766317d823ccfa796f128e8a97ef5dcac8ab5e41bc7238", "class_name": "RelatedNodeInfo"}}, "text": "This sum is what we would expect from adding 0.5ten to \u2212", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "835717d3-4612-498a-84e9-9806dac4886c": {"__data__": {"id_": "835717d3-4612-498a-84e9-9806dac4886c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "00670afc-a33a-46eb-b092-89a6c5fe2dd8", "node_type": "4", "metadata": {}, "hash": "deea5be6e32382bd32766317d823ccfa796f128e8a97ef5dcac8ab5e41bc7238", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91a3aec0-ea14-4273-8d29-b49b98fe36a7", "node_type": "1", "metadata": {}, "hash": "9d85731e5d0cee95794ffdfa63608cb8fe43ebfae4897c568b2219c7622e7ffa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11b27806-3fa5-41ac-97da-7d7de9939978", "node_type": "1", "metadata": {}, "hash": "d4abc36adeb3dca92310bdb325489e6913d086146b23c04087c4e2ee654763b4", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.14 Floating-point addition. The normal path is to execute steps 3 and 4 once, but if rounding causes the sum to be unnormalized, we must repeat step 3.", "start_char_idx": 0, "end_char_idx": 160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11b27806-3fa5-41ac-97da-7d7de9939978": {"__data__": {"id_": "11b27806-3fa5-41ac-97da-7d7de9939978", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ab8d4606-52d0-446a-a9dd-8968762353f5", "node_type": "4", "metadata": {}, "hash": "d4abc36adeb3dca92310bdb325489e6913d086146b23c04087c4e2ee654763b4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "835717d3-4612-498a-84e9-9806dac4886c", "node_type": "1", "metadata": {}, "hash": "deea5be6e32382bd32766317d823ccfa796f128e8a97ef5dcac8ab5e41bc7238", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19648df2-a009-4802-a8d8-00467e629ac1", "node_type": "1", "metadata": {}, "hash": "138b046659b4feca9e91936d0556bc42328ed0e8fca582399b8c947dfe8e459c", "class_name": "RelatedNodeInfo"}}, "text": "Many computers dedicate hardware to run \ufb02oating-point operations as fast as possible. Figure 3.15 sketches the basic organization of hardware for \ufb02oating-point addition.", "start_char_idx": 0, "end_char_idx": 169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19648df2-a009-4802-a8d8-00467e629ac1": {"__data__": {"id_": "19648df2-a009-4802-a8d8-00467e629ac1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6d71874b-4478-473e-b573-8c5336f6b753", "node_type": "4", "metadata": {}, "hash": "138b046659b4feca9e91936d0556bc42328ed0e8fca582399b8c947dfe8e459c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11b27806-3fa5-41ac-97da-7d7de9939978", "node_type": "1", "metadata": {}, "hash": "d4abc36adeb3dca92310bdb325489e6913d086146b23c04087c4e2ee654763b4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6", "node_type": "1", "metadata": {}, "hash": "84b455c71a334d719ae7ec9263ad23314126b7dd56670514dc4a0675afaa3626", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.15 Block diagram of an arithmetic unit dedicated to floating-point addition. The steps of Figure 3.14 correspond to each block, from top to bottom. First, the exponent of one operand is subtracted from the other using the small ALU to determine which is larger and by how much. This difference controls the three multiplexors; from left to right, they select the larger exponent, the significand of the smaller number, and the significand of the larger number. The smaller significand is shifted right, and then the significands are added together using the big ALU. The normalization step then shifts the sum left or right and increments or decrements the exponent. Rounding then creates the final result, which may require normalizing again to produce the actual final result.", "start_char_idx": 0, "end_char_idx": 787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6": {"__data__": {"id_": "cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3b4cf9e0-499d-4ebb-9d92-e77f622055b5", "node_type": "4", "metadata": {}, "hash": "84b455c71a334d719ae7ec9263ad23314126b7dd56670514dc4a0675afaa3626", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19648df2-a009-4802-a8d8-00467e629ac1", "node_type": "1", "metadata": {}, "hash": "138b046659b4feca9e91936d0556bc42328ed0e8fca582399b8c947dfe8e459c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4c839dc-2095-49f7-bdc5-2a7bb90132b2", "node_type": "1", "metadata": {}, "hash": "f92c1aba93f2aaafac4f64e24d29046f5f5c3dfb1a48bf4080f5aa415622570a", "class_name": "RelatedNodeInfo"}}, "text": "Floating-Point Multiplication Now that we have explained \ufb02oating-point addition, let\u2019s try \ufb02oating-point multiplication. We start by multiplying decimal", "start_char_idx": 0, "end_char_idx": 152, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4c839dc-2095-49f7-bdc5-2a7bb90132b2": {"__data__": {"id_": "b4c839dc-2095-49f7-bdc5-2a7bb90132b2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6316e4c0-e7a0-4510-b782-a9bc0d72a70d", "node_type": "4", "metadata": {}, "hash": "f92c1aba93f2aaafac4f64e24d29046f5f5c3dfb1a48bf4080f5aa415622570a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6", "node_type": "1", "metadata": {}, "hash": "84b455c71a334d719ae7ec9263ad23314126b7dd56670514dc4a0675afaa3626", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6557abc6-0695-4f65-80f3-c797838960f7", "node_type": "1", "metadata": {}, "hash": "f043174652a85b02bb05385ed6d8f1cf507b523997d53ae024201a8976891fad", "class_name": "RelatedNodeInfo"}}, "text": "numbers in scienti\ufb01c notation by hand: 1.110ten \u00d7 1010 \u00d7 9.200ten \u00d7 10\u22125. Assume that we can store only four digits of the signi\ufb01cand and two digits of the exponent.", "start_char_idx": 0, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6557abc6-0695-4f65-80f3-c797838960f7": {"__data__": {"id_": "6557abc6-0695-4f65-80f3-c797838960f7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a01d6f78-3cd3-4006-a49b-2f30f5781d3a", "node_type": "4", "metadata": {}, "hash": "f043174652a85b02bb05385ed6d8f1cf507b523997d53ae024201a8976891fad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4c839dc-2095-49f7-bdc5-2a7bb90132b2", "node_type": "1", "metadata": {}, "hash": "f92c1aba93f2aaafac4f64e24d29046f5f5c3dfb1a48bf4080f5aa415622570a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d95f130-eaab-45b7-a90a-02dfac0f8de7", "node_type": "1", "metadata": {}, "hash": "aefbc7b96ee6898206221e704dd9e072ce2bbac4a9b7c8592e2e88a48ec47519", "class_name": "RelatedNodeInfo"}}, "text": "Step 1. Unlike addition, we calculate the exponent of the product by simply adding the exponents of the operands together:", "start_char_idx": 0, "end_char_idx": 122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d95f130-eaab-45b7-a90a-02dfac0f8de7": {"__data__": {"id_": "5d95f130-eaab-45b7-a90a-02dfac0f8de7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e2ceb6c1-6640-415e-8f4e-6520f2410874", "node_type": "4", "metadata": {}, "hash": "aefbc7b96ee6898206221e704dd9e072ce2bbac4a9b7c8592e2e88a48ec47519", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6557abc6-0695-4f65-80f3-c797838960f7", "node_type": "1", "metadata": {}, "hash": "f043174652a85b02bb05385ed6d8f1cf507b523997d53ae024201a8976891fad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60576e17-0992-4f71-89b5-7035a24edd55", "node_type": "1", "metadata": {}, "hash": "d0bbaca1123ae9d1a747f30ebe4e936277eddd2cba75337fd312bed14aa9b052", "class_name": "RelatedNodeInfo"}}, "text": "Let\u2019s do this with the biased exponents as well to make sure we obtain the same result: 10 + 127 = 137, and \u2212 5 + 127 = 122, so", "start_char_idx": 0, "end_char_idx": 127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60576e17-0992-4f71-89b5-7035a24edd55": {"__data__": {"id_": "60576e17-0992-4f71-89b5-7035a24edd55", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73aacf01-3fa5-4745-9881-b7eeb9ea617b", "node_type": "4", "metadata": {}, "hash": "d0bbaca1123ae9d1a747f30ebe4e936277eddd2cba75337fd312bed14aa9b052", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d95f130-eaab-45b7-a90a-02dfac0f8de7", "node_type": "1", "metadata": {}, "hash": "aefbc7b96ee6898206221e704dd9e072ce2bbac4a9b7c8592e2e88a48ec47519", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06995add-f706-428a-86f7-af70ad6c9ee4", "node_type": "1", "metadata": {}, "hash": "111b331cb32fc57fdc8145f883c60ddeae650b8ad89a9f4202af901b46973961", "class_name": "RelatedNodeInfo"}}, "text": "This result is too large for the 8-bit exponent \ufb01eld, so something is amiss! The problem is with the bias because we are adding the biases as well as the exponents:", "start_char_idx": 0, "end_char_idx": 164, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06995add-f706-428a-86f7-af70ad6c9ee4": {"__data__": {"id_": "06995add-f706-428a-86f7-af70ad6c9ee4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9b92808-d77e-4330-ac83-bdd60658a246", "node_type": "4", "metadata": {}, "hash": "111b331cb32fc57fdc8145f883c60ddeae650b8ad89a9f4202af901b46973961", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60576e17-0992-4f71-89b5-7035a24edd55", "node_type": "1", "metadata": {}, "hash": "d0bbaca1123ae9d1a747f30ebe4e936277eddd2cba75337fd312bed14aa9b052", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66", "node_type": "1", "metadata": {}, "hash": "b86ba1ec56a868e7bb6fad2619695b3484b3fbf45915b22e9598e9704612b685", "class_name": "RelatedNodeInfo"}}, "text": "Accordingly, to get the correct biased sum when we add biased numbers, we must subtract the bias from the sum:", "start_char_idx": 0, "end_char_idx": 110, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66": {"__data__": {"id_": "c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b8ab30d-82dd-424b-819a-62eb336fdb79", "node_type": "4", "metadata": {}, "hash": "b86ba1ec56a868e7bb6fad2619695b3484b3fbf45915b22e9598e9704612b685", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06995add-f706-428a-86f7-af70ad6c9ee4", "node_type": "1", "metadata": {}, "hash": "111b331cb32fc57fdc8145f883c60ddeae650b8ad89a9f4202af901b46973961", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "477cccc2-edfc-4fd4-8b79-5f0b39aba0c7", "node_type": "1", "metadata": {}, "hash": "fb1e5e84acd7d1aaf2b1a9d0c21fcaffe8d213779b315357b177faee5c259608", "class_name": "RelatedNodeInfo"}}, "text": "and 5 is indeed the exponent we calculated initially. Step 2. Next comes the multiplication of the signi\ufb01cands:", "start_char_idx": 0, "end_char_idx": 111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "477cccc2-edfc-4fd4-8b79-5f0b39aba0c7": {"__data__": {"id_": "477cccc2-edfc-4fd4-8b79-5f0b39aba0c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4736c0b7-775c-44b0-b392-cc34dab103b1", "node_type": "4", "metadata": {}, "hash": "fb1e5e84acd7d1aaf2b1a9d0c21fcaffe8d213779b315357b177faee5c259608", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66", "node_type": "1", "metadata": {}, "hash": "b86ba1ec56a868e7bb6fad2619695b3484b3fbf45915b22e9598e9704612b685", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc5bb9a2-5229-4d17-a565-d1d4e0dce577", "node_type": "1", "metadata": {}, "hash": "c2f75b1313b32c4d9d5754bd07910ac8f75689c4e21398986ddafc22a984a1b1", "class_name": "RelatedNodeInfo"}}, "text": "There are three digits to the right of the decimal point for each operand, so the decimal point is placed six digits from the right in the product signi\ufb01cand:", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc5bb9a2-5229-4d17-a565-d1d4e0dce577": {"__data__": {"id_": "bc5bb9a2-5229-4d17-a565-d1d4e0dce577", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81261962-4876-4f56-9256-8440f51fd913", "node_type": "4", "metadata": {}, "hash": "c2f75b1313b32c4d9d5754bd07910ac8f75689c4e21398986ddafc22a984a1b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "477cccc2-edfc-4fd4-8b79-5f0b39aba0c7", "node_type": "1", "metadata": {}, "hash": "fb1e5e84acd7d1aaf2b1a9d0c21fcaffe8d213779b315357b177faee5c259608", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abfb14bf-f029-45bc-8d1e-07a8d6b71788", "node_type": "1", "metadata": {}, "hash": "ff73ec67090e472f33ccece4430650fadfa978607ddae4ce5027e8253ed4dfaa", "class_name": "RelatedNodeInfo"}}, "text": "Assuming that we can keep only three digits to the right of the decimal point, the product is 10.212 \u00d7 105. Step 3. This product is unnormalized, so we need to normalize it:", "start_char_idx": 0, "end_char_idx": 173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abfb14bf-f029-45bc-8d1e-07a8d6b71788": {"__data__": {"id_": "abfb14bf-f029-45bc-8d1e-07a8d6b71788", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "aca40966-a930-49d8-939c-08675dda4fa2", "node_type": "4", "metadata": {}, "hash": "ff73ec67090e472f33ccece4430650fadfa978607ddae4ce5027e8253ed4dfaa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc5bb9a2-5229-4d17-a565-d1d4e0dce577", "node_type": "1", "metadata": {}, "hash": "c2f75b1313b32c4d9d5754bd07910ac8f75689c4e21398986ddafc22a984a1b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d7420d4-ff00-4816-bf2b-135395eb6956", "node_type": "1", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}}, "text": "Thus, after the multiplication, the product can be shifted right one digit to put it in normalized form, adding 1 to the exponent. At this point, we can check for over\ufb02ow and under\ufb02ow. Under\ufb02ow may occur if both operands are small\u2014 that is, if both have large negative exponents. Step 4. We assumed that the signi\ufb01cand is only four digits long (excluding the sign), so we must round the number. The number", "start_char_idx": 0, "end_char_idx": 405, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d7420d4-ff00-4816-bf2b-135395eb6956": {"__data__": {"id_": "0d7420d4-ff00-4816-bf2b-135395eb6956", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4ba9a01-5e2b-49c4-8488-0e5288cfbb9c", "node_type": "4", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abfb14bf-f029-45bc-8d1e-07a8d6b71788", "node_type": "1", "metadata": {}, "hash": "ff73ec67090e472f33ccece4430650fadfa978607ddae4ce5027e8253ed4dfaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e44447ba-f75b-4716-a958-f88577b5382c", "node_type": "1", "metadata": {}, "hash": "966e58009363c8aa0ba4fd9edf0d67a6b24eaf83af4508c84957c493ee894534", "class_name": "RelatedNodeInfo"}}, "text": "is rounded to four digits in the signi\ufb01cand to", "start_char_idx": 0, "end_char_idx": 46, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e44447ba-f75b-4716-a958-f88577b5382c": {"__data__": {"id_": "e44447ba-f75b-4716-a958-f88577b5382c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a1f26be7-dddb-413d-bf22-27ebf2ed0263", "node_type": "4", "metadata": {}, "hash": "966e58009363c8aa0ba4fd9edf0d67a6b24eaf83af4508c84957c493ee894534", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d7420d4-ff00-4816-bf2b-135395eb6956", "node_type": "1", "metadata": {}, "hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef5ba1a9-21d3-45c7-9400-77d1705d5d20", "node_type": "1", "metadata": {}, "hash": "d014cb3d8c31a2aa38da2cb555f181bc35543ca376a00cf74bef1d9424879e43", "class_name": "RelatedNodeInfo"}}, "text": "Step 5. The sign of the product depends on the signs of the original operands. If they are both the same, the sign is positive; otherwise, it\u2019s negative. Hence, the product is", "start_char_idx": 0, "end_char_idx": 175, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef5ba1a9-21d3-45c7-9400-77d1705d5d20": {"__data__": {"id_": "ef5ba1a9-21d3-45c7-9400-77d1705d5d20", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0de3acc-557f-4784-85ed-a2c9132805a9", "node_type": "4", "metadata": {}, "hash": "d014cb3d8c31a2aa38da2cb555f181bc35543ca376a00cf74bef1d9424879e43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e44447ba-f75b-4716-a958-f88577b5382c", "node_type": "1", "metadata": {}, "hash": "966e58009363c8aa0ba4fd9edf0d67a6b24eaf83af4508c84957c493ee894534", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76fc8aae-23e0-48ff-9fa2-5e964f020b1a", "node_type": "1", "metadata": {}, "hash": "2c5444081082e52e3e8c44ed199d0ad83489f35c639a82b44f4bd04c77656d8b", "class_name": "RelatedNodeInfo"}}, "text": "The sign of the sum in the addition algorithm was determined by addition of the signi\ufb01cands, but in multiplication, the sign of the product is determined by the signs of the operands.", "start_char_idx": 0, "end_char_idx": 183, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76fc8aae-23e0-48ff-9fa2-5e964f020b1a": {"__data__": {"id_": "76fc8aae-23e0-48ff-9fa2-5e964f020b1a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "72c5d73f-d69c-4103-9885-14a3895ab160", "node_type": "4", "metadata": {}, "hash": "2c5444081082e52e3e8c44ed199d0ad83489f35c639a82b44f4bd04c77656d8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef5ba1a9-21d3-45c7-9400-77d1705d5d20", "node_type": "1", "metadata": {}, "hash": "d014cb3d8c31a2aa38da2cb555f181bc35543ca376a00cf74bef1d9424879e43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93066231-17f1-4e28-9023-b261c88536e7", "node_type": "1", "metadata": {}, "hash": "78ebd3c3f57d783bfb1c2f3fb99916b4340e1a227581835a22ca47464fa69512", "class_name": "RelatedNodeInfo"}}, "text": "Once again, as Figure 3.16 shows, multiplication of binary \ufb02oating-point numbers is quite similar to the steps we have just completed. We start with calculating the new exponent of the product by adding the biased exponents, being sure to subtract one bias to get the proper result. Next is multiplication of signi\ufb01cands, followed by an optional normalization step. The size of the exponent is checked for over\ufb02ow or under\ufb02ow, and then the product is rounded. If rounding leads to further normalization, we once again check for exponent size. Finally, set the sign bit to 1 if the signs of the operands were di\ufb00erent (negative product) or to 0 if they were the same (positive product).", "start_char_idx": 0, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93066231-17f1-4e28-9023-b261c88536e7": {"__data__": {"id_": "93066231-17f1-4e28-9023-b261c88536e7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9e51b533-d3cc-4fca-ba3f-c48e8621876a", "node_type": "4", "metadata": {}, "hash": "78ebd3c3f57d783bfb1c2f3fb99916b4340e1a227581835a22ca47464fa69512", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76fc8aae-23e0-48ff-9fa2-5e964f020b1a", "node_type": "1", "metadata": {}, "hash": "2c5444081082e52e3e8c44ed199d0ad83489f35c639a82b44f4bd04c77656d8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40efea49-c5a1-4583-8d2b-c00ba1e64c73", "node_type": "1", "metadata": {}, "hash": "f9b2f225e19cb34ad7287f5b4716894a762d172dd355e0381b9b785d9e34e971", "class_name": "RelatedNodeInfo"}}, "text": "Example Let\u2019s try multiplying the numbers 0.5ten and \u2212 0.4375ten, using the steps in Figure 3.16.", "start_char_idx": 0, "end_char_idx": 97, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40efea49-c5a1-4583-8d2b-c00ba1e64c73": {"__data__": {"id_": "40efea49-c5a1-4583-8d2b-c00ba1e64c73", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e60aa1ef-cfc4-47aa-a167-a940dfdf05dd", "node_type": "4", "metadata": {}, "hash": "f9b2f225e19cb34ad7287f5b4716894a762d172dd355e0381b9b785d9e34e971", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93066231-17f1-4e28-9023-b261c88536e7", "node_type": "1", "metadata": {}, "hash": "78ebd3c3f57d783bfb1c2f3fb99916b4340e1a227581835a22ca47464fa69512", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e6505bf-9dc0-425e-8a06-6dce77f44e39", "node_type": "1", "metadata": {}, "hash": "650cae2a86cfd6ec84829d574725588cfb0442ad902f57635117dbf84cedca49", "class_name": "RelatedNodeInfo"}}, "text": "Answer In binary, the task is multiplying 1.000two \u00d7 2\u22121 by \u2212 1.110two \u00d7 2\u22122.", "start_char_idx": 0, "end_char_idx": 77, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e6505bf-9dc0-425e-8a06-6dce77f44e39": {"__data__": {"id_": "1e6505bf-9dc0-425e-8a06-6dce77f44e39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "91ad4775-630f-4bf4-a29a-438386c2e4cf", "node_type": "4", "metadata": {}, "hash": "650cae2a86cfd6ec84829d574725588cfb0442ad902f57635117dbf84cedca49", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40efea49-c5a1-4583-8d2b-c00ba1e64c73", "node_type": "1", "metadata": {}, "hash": "f9b2f225e19cb34ad7287f5b4716894a762d172dd355e0381b9b785d9e34e971", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fb209a3-4117-4e5a-8cf8-23d4392cbd1c", "node_type": "1", "metadata": {}, "hash": "b736b1af157ad691c63626c4a8e959a734410e3858a8c083ddd7f2d6c95c183a", "class_name": "RelatedNodeInfo"}}, "text": "Step 1. Adding the exponents without bias:", "start_char_idx": 0, "end_char_idx": 42, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fb209a3-4117-4e5a-8cf8-23d4392cbd1c": {"__data__": {"id_": "0fb209a3-4117-4e5a-8cf8-23d4392cbd1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d1e8f7dc-84a8-4537-9882-94ab69da0b61", "node_type": "4", "metadata": {}, "hash": "b736b1af157ad691c63626c4a8e959a734410e3858a8c083ddd7f2d6c95c183a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e6505bf-9dc0-425e-8a06-6dce77f44e39", "node_type": "1", "metadata": {}, "hash": "650cae2a86cfd6ec84829d574725588cfb0442ad902f57635117dbf84cedca49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1a42015-ec8f-4a62-a09b-afa6034c806e", "node_type": "1", "metadata": {}, "hash": "6178bf74396080fc14cf5cf16f0c4eb5e912623259eba22838a620c0ca82a9c3", "class_name": "RelatedNodeInfo"}}, "text": "or, using the biased representation:", "start_char_idx": 0, "end_char_idx": 36, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1a42015-ec8f-4a62-a09b-afa6034c806e": {"__data__": {"id_": "b1a42015-ec8f-4a62-a09b-afa6034c806e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e47550d1-eefc-4b62-972d-b7a2d9e42ec9", "node_type": "4", "metadata": {}, "hash": "6178bf74396080fc14cf5cf16f0c4eb5e912623259eba22838a620c0ca82a9c3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fb209a3-4117-4e5a-8cf8-23d4392cbd1c", "node_type": "1", "metadata": {}, "hash": "b736b1af157ad691c63626c4a8e959a734410e3858a8c083ddd7f2d6c95c183a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "823a2eef-4a23-489d-be92-cac626389b5f", "node_type": "1", "metadata": {}, "hash": "98bc42325e4dcec50ed43a2a8137e010653e5539fde41d0b56eb0beea1980c4e", "class_name": "RelatedNodeInfo"}}, "text": "Step 2. Multiplying the signi\ufb01cands:", "start_char_idx": 0, "end_char_idx": 36, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "823a2eef-4a23-489d-be92-cac626389b5f": {"__data__": {"id_": "823a2eef-4a23-489d-be92-cac626389b5f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "953ad1ff-b9df-43d2-bda8-8026569316e4", "node_type": "4", "metadata": {}, "hash": "98bc42325e4dcec50ed43a2a8137e010653e5539fde41d0b56eb0beea1980c4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1a42015-ec8f-4a62-a09b-afa6034c806e", "node_type": "1", "metadata": {}, "hash": "6178bf74396080fc14cf5cf16f0c4eb5e912623259eba22838a620c0ca82a9c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "750f1531-1497-46a9-9f8d-45b7a5e46811", "node_type": "1", "metadata": {}, "hash": "c8c5452dbef493a7365a1afe2651cb7cc1684b5e45ed313edad5dd5ab8f16ced", "class_name": "RelatedNodeInfo"}}, "text": "The product is 1.110000two \u00d7 2\u22123, but we need to keep it to 4 bits, so it is 1.110two \u00d7 2\u22123. Step 3. Now we check the product to make sure it is normalized, and then check the exponent for over\ufb02ow or under\ufb02ow. The product is already normalized and, since 127 \u2265", "start_char_idx": 0, "end_char_idx": 260, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "750f1531-1497-46a9-9f8d-45b7a5e46811": {"__data__": {"id_": "750f1531-1497-46a9-9f8d-45b7a5e46811", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1fa3a76f-99d3-43de-badf-a71848c796b6", "node_type": "4", "metadata": {}, "hash": "c8c5452dbef493a7365a1afe2651cb7cc1684b5e45ed313edad5dd5ab8f16ced", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "823a2eef-4a23-489d-be92-cac626389b5f", "node_type": "1", "metadata": {}, "hash": "98bc42325e4dcec50ed43a2a8137e010653e5539fde41d0b56eb0beea1980c4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1472646f-f558-4578-aeeb-84624fc75ef3", "node_type": "1", "metadata": {}, "hash": "df3a0b308449197c6c93f3009c70676fdf7ba1aa202189a3d67538dac8cef695", "class_name": "RelatedNodeInfo"}}, "text": "\u2212 3 \u2265 \u2212 126, there is no over\ufb02ow or under\ufb02ow. (Using the biased representation, 254 \u2265 124 \u2265 1, so the exponent \ufb01ts.) Step 4. Rounding the product makes no change:", "start_char_idx": 0, "end_char_idx": 162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1472646f-f558-4578-aeeb-84624fc75ef3": {"__data__": {"id_": "1472646f-f558-4578-aeeb-84624fc75ef3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e781b816-fe17-40ca-b4ab-f1d9f1a0f730", "node_type": "4", "metadata": {}, "hash": "df3a0b308449197c6c93f3009c70676fdf7ba1aa202189a3d67538dac8cef695", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "750f1531-1497-46a9-9f8d-45b7a5e46811", "node_type": "1", "metadata": {}, "hash": "c8c5452dbef493a7365a1afe2651cb7cc1684b5e45ed313edad5dd5ab8f16ced", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1e855793-ef00-4066-962f-b45a93222cfa", "node_type": "1", "metadata": {}, "hash": "4f0fc5f11c5975823db4fdf3371466d4c14ed95c9d5a6bcbe9de8837f435686a", "class_name": "RelatedNodeInfo"}}, "text": "Step 5. Since the signs of the original operands di\ufb00er, make the sign of the product negative. Hence, the product is", "start_char_idx": 0, "end_char_idx": 116, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e855793-ef00-4066-962f-b45a93222cfa": {"__data__": {"id_": "1e855793-ef00-4066-962f-b45a93222cfa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "526e1e31-5bf9-4766-bc84-831fc4c1d641", "node_type": "4", "metadata": {}, "hash": "4f0fc5f11c5975823db4fdf3371466d4c14ed95c9d5a6bcbe9de8837f435686a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1472646f-f558-4578-aeeb-84624fc75ef3", "node_type": "1", "metadata": {}, "hash": "df3a0b308449197c6c93f3009c70676fdf7ba1aa202189a3d67538dac8cef695", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4516948f-dfa6-4ef6-9058-01af21565bdf", "node_type": "1", "metadata": {}, "hash": "94884ad6d84a0cd147ee538bfcc7c4991f80241ea17c8cc2b9ebf4e457ccee65", "class_name": "RelatedNodeInfo"}}, "text": "Converting to decimal to check our results:", "start_char_idx": 0, "end_char_idx": 43, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4516948f-dfa6-4ef6-9058-01af21565bdf": {"__data__": {"id_": "4516948f-dfa6-4ef6-9058-01af21565bdf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fb5d5025-6bf6-46e8-affd-c57b8546184a", "node_type": "4", "metadata": {}, "hash": "94884ad6d84a0cd147ee538bfcc7c4991f80241ea17c8cc2b9ebf4e457ccee65", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1e855793-ef00-4066-962f-b45a93222cfa", "node_type": "1", "metadata": {}, "hash": "4f0fc5f11c5975823db4fdf3371466d4c14ed95c9d5a6bcbe9de8837f435686a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dd7807d5-56f3-4e73-877b-55e5bb25e8fd", "node_type": "1", "metadata": {}, "hash": "66aa6cff4afd675937b716a9f40ddc479b10478eb878c41e1d6c826f8c548351", "class_name": "RelatedNodeInfo"}}, "text": "The product of 0.5ten and \u2212 0.4375ten is indeed \u2212 0.21875ten.", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dd7807d5-56f3-4e73-877b-55e5bb25e8fd": {"__data__": {"id_": "dd7807d5-56f3-4e73-877b-55e5bb25e8fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dfa658a0-e524-44e7-8945-6bf847a0ecc8", "node_type": "4", "metadata": {}, "hash": "66aa6cff4afd675937b716a9f40ddc479b10478eb878c41e1d6c826f8c548351", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4516948f-dfa6-4ef6-9058-01af21565bdf", "node_type": "1", "metadata": {}, "hash": "94884ad6d84a0cd147ee538bfcc7c4991f80241ea17c8cc2b9ebf4e457ccee65", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a4b59647-922a-454d-9490-878bf772b655", "node_type": "1", "metadata": {}, "hash": "bc0167c923dfef355f6f90de5c936c68c5c294cd73ff430a67311a61a69ffa13", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.16 Floating-point multiplication. The normal path is to execute steps 3 and 4 once, but if rounding causes the sum to be unnormalized, we must repeat step 3.", "start_char_idx": 0, "end_char_idx": 166, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a4b59647-922a-454d-9490-878bf772b655": {"__data__": {"id_": "a4b59647-922a-454d-9490-878bf772b655", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f930e826-b6fb-4235-b88f-49a3b3ad3906", "node_type": "4", "metadata": {}, "hash": "bc0167c923dfef355f6f90de5c936c68c5c294cd73ff430a67311a61a69ffa13", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dd7807d5-56f3-4e73-877b-55e5bb25e8fd", "node_type": "1", "metadata": {}, "hash": "66aa6cff4afd675937b716a9f40ddc479b10478eb878c41e1d6c826f8c548351", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8", "node_type": "1", "metadata": {}, "hash": "4c81c1042f41119319c69a6e0b24e0b93ef45981d5d6bf6491cfa6a4fc056586", "class_name": "RelatedNodeInfo"}}, "text": "Floating-Point Instructions in MIPS MIPS supports the IEEE 754 single precision and double precision formats with these instructions:", "start_char_idx": 0, "end_char_idx": 133, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8": {"__data__": {"id_": "dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5873b544-fbc9-4c89-b6e0-705cf4b16d4e", "node_type": "4", "metadata": {}, "hash": "4c81c1042f41119319c69a6e0b24e0b93ef45981d5d6bf6491cfa6a4fc056586", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a4b59647-922a-454d-9490-878bf772b655", "node_type": "1", "metadata": {}, "hash": "bc0167c923dfef355f6f90de5c936c68c5c294cd73ff430a67311a61a69ffa13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c8b1588-0d6e-4904-b384-2e839add97da", "node_type": "1", "metadata": {}, "hash": "15b678c70378ae2a7896c51bef043b52fe97e638774fe5f3a16e6f6fb523a8bc", "class_name": "RelatedNodeInfo"}}, "text": "\u25a0 Floating-point addition, single (add.s) and addition, double (add.d) \u25a0 Floating-point subtraction, single (sub.s) and subtraction, double (sub.d)", "start_char_idx": 0, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c8b1588-0d6e-4904-b384-2e839add97da": {"__data__": {"id_": "9c8b1588-0d6e-4904-b384-2e839add97da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da4b84ef-0454-4778-9bcf-6ee12711f4ae", "node_type": "4", "metadata": {}, "hash": "15b678c70378ae2a7896c51bef043b52fe97e638774fe5f3a16e6f6fb523a8bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8", "node_type": "1", "metadata": {}, "hash": "4c81c1042f41119319c69a6e0b24e0b93ef45981d5d6bf6491cfa6a4fc056586", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5406aee-3175-4a6f-b42a-652167a368b3", "node_type": "1", "metadata": {}, "hash": "2d212ae9566c4066d41ca6d8b0a86d9030e29c736acc1f92016280ddbe92ac6d", "class_name": "RelatedNodeInfo"}}, "text": "\u25a0 Floating-point multiplication, single (mul.s) and multiplication, double (mul.d) \u25a0 Floating-point division, single (div.s) and division, double (div.d) \u25a0 Floating-point comparison, single (c.x.s) and comparison, double (c.x.d), where x may be equal (eq), not equal (neq), less than (lt), less than or equal (le), greater than (gt), or greater than or equal (ge) \u25a0 Floating-point branch, true (bclt) and branch, false (bclf)", "start_char_idx": 0, "end_char_idx": 425, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5406aee-3175-4a6f-b42a-652167a368b3": {"__data__": {"id_": "b5406aee-3175-4a6f-b42a-652167a368b3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "857cd767-db79-458e-a2f0-71f9a12cdd12", "node_type": "4", "metadata": {}, "hash": "2d212ae9566c4066d41ca6d8b0a86d9030e29c736acc1f92016280ddbe92ac6d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c8b1588-0d6e-4904-b384-2e839add97da", "node_type": "1", "metadata": {}, "hash": "15b678c70378ae2a7896c51bef043b52fe97e638774fe5f3a16e6f6fb523a8bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c360862-8411-4abf-ad32-bba564c1aa56", "node_type": "1", "metadata": {}, "hash": "953326295f95b3ed474625d28acca031a3cc8485ddd78d16aeeb6510c10a6f1e", "class_name": "RelatedNodeInfo"}}, "text": "Floating-point comparison sets a bit to true or false, depending on the comparison condition, and a \ufb02oating-point branch then decides whether or not to branch, depending on the condition.", "start_char_idx": 0, "end_char_idx": 187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c360862-8411-4abf-ad32-bba564c1aa56": {"__data__": {"id_": "6c360862-8411-4abf-ad32-bba564c1aa56", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a25ea45f-7852-4cb1-a982-3996ac6e392e", "node_type": "4", "metadata": {}, "hash": "953326295f95b3ed474625d28acca031a3cc8485ddd78d16aeeb6510c10a6f1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5406aee-3175-4a6f-b42a-652167a368b3", "node_type": "1", "metadata": {}, "hash": "2d212ae9566c4066d41ca6d8b0a86d9030e29c736acc1f92016280ddbe92ac6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f1528fe-e423-4b1c-a7b9-66e96029cdc4", "node_type": "1", "metadata": {}, "hash": "a834efb6b428d0156b79922bb47c5ff72ee8d3d1c1caffd83dc98c58018caa30", "class_name": "RelatedNodeInfo"}}, "text": "The MIPS designers decided to add separate \ufb02oating-point", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f1528fe-e423-4b1c-a7b9-66e96029cdc4": {"__data__": {"id_": "7f1528fe-e423-4b1c-a7b9-66e96029cdc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98b5f93f-ce75-415c-b091-3b7df5654b40", "node_type": "4", "metadata": {}, "hash": "a834efb6b428d0156b79922bb47c5ff72ee8d3d1c1caffd83dc98c58018caa30", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c360862-8411-4abf-ad32-bba564c1aa56", "node_type": "1", "metadata": {}, "hash": "953326295f95b3ed474625d28acca031a3cc8485ddd78d16aeeb6510c10a6f1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7616eea7-d3c7-45c8-a126-1ff77b13bb69", "node_type": "1", "metadata": {}, "hash": "4169d47896fcb99fa49dd8d631cd3fd41ccb644525ce9700134f96427ad02fda", "class_name": "RelatedNodeInfo"}}, "text": "registers\u2014called $f0, $f1, $f2, \u2026\u2014used either for single precision or double precision. Hence, they included separate loads and stores for \ufb02oating-point registers: lwc1 and swc1. The base registers for \ufb02oating-point data transfers which are used for addresses remain integer registers. The MIPS code to load two single precision numbers from memory, add them, and then store the sum might look like this:", "start_char_idx": 0, "end_char_idx": 404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7616eea7-d3c7-45c8-a126-1ff77b13bb69": {"__data__": {"id_": "7616eea7-d3c7-45c8-a126-1ff77b13bb69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8ab729e-724c-4ae8-955a-33ea8fa63812", "node_type": "4", "metadata": {}, "hash": "4169d47896fcb99fa49dd8d631cd3fd41ccb644525ce9700134f96427ad02fda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f1528fe-e423-4b1c-a7b9-66e96029cdc4", "node_type": "1", "metadata": {}, "hash": "a834efb6b428d0156b79922bb47c5ff72ee8d3d1c1caffd83dc98c58018caa30", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e6d6c03-44c5-4603-9763-c19cf5e50b46", "node_type": "1", "metadata": {}, "hash": "a9c8c64402eca25127ec674e8921ad87e0f1406412daf6dbf14a265b9d403f91", "class_name": "RelatedNodeInfo"}}, "text": "lwc1 $f4,c($sp) # Load 32-bit F.P. number into F4 lwc1 $f6,a($sp) # Load 32-bit F.P. number into F6 add.s $f2,$f4,$f6 # F2 = F4 + F6 single precision swc1 $f2,b($sp) # Store 32-bit F.P. number from F2", "start_char_idx": 0, "end_char_idx": 200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e6d6c03-44c5-4603-9763-c19cf5e50b46": {"__data__": {"id_": "7e6d6c03-44c5-4603-9763-c19cf5e50b46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5e0a6e2b-be78-4dc2-bf12-7a5bca9e8917", "node_type": "4", "metadata": {}, "hash": "a9c8c64402eca25127ec674e8921ad87e0f1406412daf6dbf14a265b9d403f91", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7616eea7-d3c7-45c8-a126-1ff77b13bb69", "node_type": "1", "metadata": {}, "hash": "4169d47896fcb99fa49dd8d631cd3fd41ccb644525ce9700134f96427ad02fda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0970580-0592-4662-8de5-b94d74411397", "node_type": "1", "metadata": {}, "hash": "a96721c07630d94fb88296b4d9c7b3e09d042daa22a60ec0596c3d956ceebb53", "class_name": "RelatedNodeInfo"}}, "text": "A double precision register is really an even-odd pair of single precision registers, using the even register number as its name. Thus, the pair of single precision registers $f2 and $f3 also form the double precision register named $f2.", "start_char_idx": 0, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0970580-0592-4662-8de5-b94d74411397": {"__data__": {"id_": "c0970580-0592-4662-8de5-b94d74411397", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "66d2f18f-cad3-4868-8db8-92ca13194f94", "node_type": "4", "metadata": {}, "hash": "a96721c07630d94fb88296b4d9c7b3e09d042daa22a60ec0596c3d956ceebb53", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e6d6c03-44c5-4603-9763-c19cf5e50b46", "node_type": "1", "metadata": {}, "hash": "a9c8c64402eca25127ec674e8921ad87e0f1406412daf6dbf14a265b9d403f91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ce4ec69b-4421-4a45-883e-674c40c44e16", "node_type": "1", "metadata": {}, "hash": "7fc910a2048ee15abf13a00300d51b4bb6aaed2902fdb00c374a1104e13fa5ab", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.17 summarizes the \ufb02oating-point portion of the MIPS architecture revealed in this chapter, with the additions to support \ufb02oating point shown in color. Similar to Figure 2.19 in Chapter 2, Figure 3.18 shows the encoding of these instructions.", "start_char_idx": 0, "end_char_idx": 250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce4ec69b-4421-4a45-883e-674c40c44e16": {"__data__": {"id_": "ce4ec69b-4421-4a45-883e-674c40c44e16", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81379386-4742-4204-9f24-89dc841b8c26", "node_type": "4", "metadata": {}, "hash": "7fc910a2048ee15abf13a00300d51b4bb6aaed2902fdb00c374a1104e13fa5ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0970580-0592-4662-8de5-b94d74411397", "node_type": "1", "metadata": {}, "hash": "a96721c07630d94fb88296b4d9c7b3e09d042daa22a60ec0596c3d956ceebb53", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5c9538b-597e-448a-ad3f-88b68c4223d9", "node_type": "1", "metadata": {}, "hash": "ff8c3514e9cf5654c5f32c6235a8446a80f17c9d14ed84fd24c19a82b8097e4e", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/Software Interface One issue that architects face in supporting \ufb02oating-point arithmetic is whether to use the same registers used by the integer instructions or to add a special set for \ufb02oating point. Because programs normally perform integer operations and \ufb02oating-point operations on di\ufb00erent data, separating the registers will only slightly increase the number of instructions needed to execute a program. The major impact is to create a separate set of data transfer instructions to move data between \ufb02oating-point registers and memory.", "start_char_idx": 0, "end_char_idx": 551, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5c9538b-597e-448a-ad3f-88b68c4223d9": {"__data__": {"id_": "b5c9538b-597e-448a-ad3f-88b68c4223d9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "97a27ff5-4560-46ad-9ed1-6fc6698b85d6", "node_type": "4", "metadata": {}, "hash": "ff8c3514e9cf5654c5f32c6235a8446a80f17c9d14ed84fd24c19a82b8097e4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ce4ec69b-4421-4a45-883e-674c40c44e16", "node_type": "1", "metadata": {}, "hash": "7fc910a2048ee15abf13a00300d51b4bb6aaed2902fdb00c374a1104e13fa5ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2f673f0-7013-47c9-bd40-6c405357dfc3", "node_type": "1", "metadata": {}, "hash": "45a1654e3d8108f5e184cb1ecdebb720138c3fd930e0ab10bacbf6ed65dfa991", "class_name": "RelatedNodeInfo"}}, "text": "The bene\ufb01ts of separate \ufb02oating-point registers are having twice", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2f673f0-7013-47c9-bd40-6c405357dfc3": {"__data__": {"id_": "b2f673f0-7013-47c9-bd40-6c405357dfc3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3573b733-5ca5-4aeb-8646-75023c3a4121", "node_type": "4", "metadata": {}, "hash": "45a1654e3d8108f5e184cb1ecdebb720138c3fd930e0ab10bacbf6ed65dfa991", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5c9538b-597e-448a-ad3f-88b68c4223d9", "node_type": "1", "metadata": {}, "hash": "ff8c3514e9cf5654c5f32c6235a8446a80f17c9d14ed84fd24c19a82b8097e4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db6db6b5-2f7e-4b76-8e7c-b93a472025cd", "node_type": "1", "metadata": {}, "hash": "acbbb3c557129266e7a43c18cef998e253f2d548fb96129caf10e2fee7d2cede", "class_name": "RelatedNodeInfo"}}, "text": "as many registers without using up more bits in the instruction format, having twice the register bandwidth by having separate integer and \ufb02oating-point register sets, and being able to customize registers to \ufb02oating point; for example, some computers convert all sized operands in registers into a single internal format.", "start_char_idx": 0, "end_char_idx": 322, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db6db6b5-2f7e-4b76-8e7c-b93a472025cd": {"__data__": {"id_": "db6db6b5-2f7e-4b76-8e7c-b93a472025cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0d0da4f1-7d9c-4a2d-a3c3-7b48693fcbf3", "node_type": "4", "metadata": {}, "hash": "acbbb3c557129266e7a43c18cef998e253f2d548fb96129caf10e2fee7d2cede", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2f673f0-7013-47c9-bd40-6c405357dfc3", "node_type": "1", "metadata": {}, "hash": "45a1654e3d8108f5e184cb1ecdebb720138c3fd930e0ab10bacbf6ed65dfa991", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4086658-b201-430e-9bda-782dea18d280", "node_type": "1", "metadata": {}, "hash": "234c2652a9ed3c5c25ad7bac28258911e10d7eb7f6aea54bdd0cca850ed6bb70", "class_name": "RelatedNodeInfo"}}, "text": "Example Let\u2019s convert a temperature in Fahrenheit to Celsius:", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4086658-b201-430e-9bda-782dea18d280": {"__data__": {"id_": "d4086658-b201-430e-9bda-782dea18d280", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a0d977e5-ba7f-4a23-a37f-00a20cacc08c", "node_type": "4", "metadata": {}, "hash": "234c2652a9ed3c5c25ad7bac28258911e10d7eb7f6aea54bdd0cca850ed6bb70", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db6db6b5-2f7e-4b76-8e7c-b93a472025cd", "node_type": "1", "metadata": {}, "hash": "acbbb3c557129266e7a43c18cef998e253f2d548fb96129caf10e2fee7d2cede", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ea36535-4835-405b-9b20-30001418354d", "node_type": "1", "metadata": {}, "hash": "d4f2fae3722700bd9003ab27b3dceb268fbd08bca0182fd2beaceb77ab521e8b", "class_name": "RelatedNodeInfo"}}, "text": "Assume that the \ufb02oating-point argument fahr is passed in $f12 and the result should go in $f0. (Unlike integer registers, \ufb02oating- point register 0 can contain a number.) What is the MIPS assembly code?", "start_char_idx": 0, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ea36535-4835-405b-9b20-30001418354d": {"__data__": {"id_": "8ea36535-4835-405b-9b20-30001418354d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "135c7b44-4c46-46f1-bc6b-819fe55aaf13", "node_type": "4", "metadata": {}, "hash": "d4f2fae3722700bd9003ab27b3dceb268fbd08bca0182fd2beaceb77ab521e8b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4086658-b201-430e-9bda-782dea18d280", "node_type": "1", "metadata": {}, "hash": "234c2652a9ed3c5c25ad7bac28258911e10d7eb7f6aea54bdd0cca850ed6bb70", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84eaad8d-6026-4fb9-a1cf-c721f808cd65", "node_type": "1", "metadata": {}, "hash": "7d90bcd3c68cf4e07edc61ab85bb4b1a7074dfad84d72a56d76e729a7460efaf", "class_name": "RelatedNodeInfo"}}, "text": "We assume that the compiler places the three \ufb02oating-point constants in memory within easy reach of the global pointer $gp. The \ufb01rst two instructions load the constants 5.0 and 9.0 into \ufb02oating- point registers:", "start_char_idx": 0, "end_char_idx": 211, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84eaad8d-6026-4fb9-a1cf-c721f808cd65": {"__data__": {"id_": "84eaad8d-6026-4fb9-a1cf-c721f808cd65", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f1cf6713-c09a-4335-a7e2-f32a2389c5d8", "node_type": "4", "metadata": {}, "hash": "7d90bcd3c68cf4e07edc61ab85bb4b1a7074dfad84d72a56d76e729a7460efaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ea36535-4835-405b-9b20-30001418354d", "node_type": "1", "metadata": {}, "hash": "d4f2fae3722700bd9003ab27b3dceb268fbd08bca0182fd2beaceb77ab521e8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a31615d-4b04-400c-b7ec-a47e16e3fea8", "node_type": "1", "metadata": {}, "hash": "b86ba6da758f363208196f54cf33a677332d8218373453a7cd9fa6bb90c172c8", "class_name": "RelatedNodeInfo"}}, "text": "They are then divided to get the fraction 5.0/9.0:", "start_char_idx": 0, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a31615d-4b04-400c-b7ec-a47e16e3fea8": {"__data__": {"id_": "7a31615d-4b04-400c-b7ec-a47e16e3fea8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3d567488-7781-4a65-8655-4084d989545a", "node_type": "4", "metadata": {}, "hash": "b86ba6da758f363208196f54cf33a677332d8218373453a7cd9fa6bb90c172c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84eaad8d-6026-4fb9-a1cf-c721f808cd65", "node_type": "1", "metadata": {}, "hash": "7d90bcd3c68cf4e07edc61ab85bb4b1a7074dfad84d72a56d76e729a7460efaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6426e555-3111-4860-9669-0f284ff11144", "node_type": "1", "metadata": {}, "hash": "98ecedca261ab83c40afd2ce974b37a43fa71a3edc19d58b5d25b75461adf52f", "class_name": "RelatedNodeInfo"}}, "text": "(Many compilers would divide 5.0 by 9.0 at compile time and save the single constant 5.0/9.0 in memory, thereby avoiding the divide at runtime.) Next, we load the constant 32.0 and then subtract it from fahr ($f12):", "start_char_idx": 0, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6426e555-3111-4860-9669-0f284ff11144": {"__data__": {"id_": "6426e555-3111-4860-9669-0f284ff11144", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c8c47cf-c37a-476c-b15e-68478a086002", "node_type": "4", "metadata": {}, "hash": "98ecedca261ab83c40afd2ce974b37a43fa71a3edc19d58b5d25b75461adf52f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7a31615d-4b04-400c-b7ec-a47e16e3fea8", "node_type": "1", "metadata": {}, "hash": "b86ba6da758f363208196f54cf33a677332d8218373453a7cd9fa6bb90c172c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f4137df-8ff7-4008-b496-a429d09ba7a4", "node_type": "1", "metadata": {}, "hash": "ce4fa5c5f07cca274f2db50319bd93d7e35c3df2799e431dd6f018b00ed37390", "class_name": "RelatedNodeInfo"}}, "text": "Finally, we multiply the two intermediate results, placing the", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f4137df-8ff7-4008-b496-a429d09ba7a4": {"__data__": {"id_": "0f4137df-8ff7-4008-b496-a429d09ba7a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "261f962f-1a5f-48e5-b108-e43bc8819395", "node_type": "4", "metadata": {}, "hash": "ce4fa5c5f07cca274f2db50319bd93d7e35c3df2799e431dd6f018b00ed37390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6426e555-3111-4860-9669-0f284ff11144", "node_type": "1", "metadata": {}, "hash": "98ecedca261ab83c40afd2ce974b37a43fa71a3edc19d58b5d25b75461adf52f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49de2c7b-f56e-49a4-a6e8-2c0fd595082c", "node_type": "1", "metadata": {}, "hash": "c9fa7120c1f7993c871aac5a1addf2e12e38082eccb16cfcf162eb95177204c9", "class_name": "RelatedNodeInfo"}}, "text": "product in $f0 as the return result, and then return", "start_char_idx": 0, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49de2c7b-f56e-49a4-a6e8-2c0fd595082c": {"__data__": {"id_": "49de2c7b-f56e-49a4-a6e8-2c0fd595082c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "78fedbab-49ec-44de-844d-6a9800341f1e", "node_type": "4", "metadata": {}, "hash": "c9fa7120c1f7993c871aac5a1addf2e12e38082eccb16cfcf162eb95177204c9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f4137df-8ff7-4008-b496-a429d09ba7a4", "node_type": "1", "metadata": {}, "hash": "ce4fa5c5f07cca274f2db50319bd93d7e35c3df2799e431dd6f018b00ed37390", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f64fdf59-4dc0-4f6e-829a-a1ad3208a912", "node_type": "1", "metadata": {}, "hash": "f15650d4347b750ac24acbee0ce47230250fd275bae2871c1c89c471e407792d", "class_name": "RelatedNodeInfo"}}, "text": "mul.s $f0, $f16, $f18 # $f0 = (5/9)*(fahr - 32.0) jr $ra # return Now let\u2019s perform \ufb02oating-point operations on matrices, code", "start_char_idx": 0, "end_char_idx": 126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f64fdf59-4dc0-4f6e-829a-a1ad3208a912": {"__data__": {"id_": "f64fdf59-4dc0-4f6e-829a-a1ad3208a912", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "572170b8-9d69-4070-8601-86b35ee2e253", "node_type": "4", "metadata": {}, "hash": "f15650d4347b750ac24acbee0ce47230250fd275bae2871c1c89c471e407792d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49de2c7b-f56e-49a4-a6e8-2c0fd595082c", "node_type": "1", "metadata": {}, "hash": "c9fa7120c1f7993c871aac5a1addf2e12e38082eccb16cfcf162eb95177204c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc345544-2ef6-42c7-886f-4a6e8efdb9cc", "node_type": "1", "metadata": {}, "hash": "adf2fec560ec9c8065acda6e07bab79bac7fdad6bc9870517859cb2ec89252fb", "class_name": "RelatedNodeInfo"}}, "text": "commonly found in scienti\ufb01c programs.", "start_char_idx": 0, "end_char_idx": 37, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc345544-2ef6-42c7-886f-4a6e8efdb9cc": {"__data__": {"id_": "bc345544-2ef6-42c7-886f-4a6e8efdb9cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "38a5ad20-d2b6-46bf-9124-b2236b2e0519", "node_type": "4", "metadata": {}, "hash": "adf2fec560ec9c8065acda6e07bab79bac7fdad6bc9870517859cb2ec89252fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f64fdf59-4dc0-4f6e-829a-a1ad3208a912", "node_type": "1", "metadata": {}, "hash": "f15650d4347b750ac24acbee0ce47230250fd275bae2871c1c89c471e407792d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9d5de35-e229-4f64-88cb-0ee5745925d5", "node_type": "1", "metadata": {}, "hash": "85d99ca4163c43eb36060f0b97c025b11a44e9488336006e81a8b630a488484c", "class_name": "RelatedNodeInfo"}}, "text": "Example Most \ufb02oating-point calculations are performed in double precision. Let\u2019s per-form matrix multiply of C = C + A * B. This code is a", "start_char_idx": 0, "end_char_idx": 138, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9d5de35-e229-4f64-88cb-0ee5745925d5": {"__data__": {"id_": "d9d5de35-e229-4f64-88cb-0ee5745925d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7a2848aa-7555-4d2f-8e49-486569507f7e", "node_type": "4", "metadata": {}, "hash": "85d99ca4163c43eb36060f0b97c025b11a44e9488336006e81a8b630a488484c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc345544-2ef6-42c7-886f-4a6e8efdb9cc", "node_type": "1", "metadata": {}, "hash": "adf2fec560ec9c8065acda6e07bab79bac7fdad6bc9870517859cb2ec89252fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d24f48fd-0dfc-4d98-ab84-dc4511adaf6b", "node_type": "1", "metadata": {}, "hash": "d902081478c5eb64656dc10233e773a9564396e3e9409eae2c4bfcee31ffa309", "class_name": "RelatedNodeInfo"}}, "text": "simpli\ufb01ed version of the DGEMM program in Figure 2.43 on page 166. Let\u2019s assume C, A, and B are all square matrices with 32 elements in each dimension.", "start_char_idx": 0, "end_char_idx": 151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d24f48fd-0dfc-4d98-ab84-dc4511adaf6b": {"__data__": {"id_": "d24f48fd-0dfc-4d98-ab84-dc4511adaf6b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b96c0c2-fba4-4fa3-9e48-9baaa3d3e08c", "node_type": "4", "metadata": {}, "hash": "d902081478c5eb64656dc10233e773a9564396e3e9409eae2c4bfcee31ffa309", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9d5de35-e229-4f64-88cb-0ee5745925d5", "node_type": "1", "metadata": {}, "hash": "85d99ca4163c43eb36060f0b97c025b11a44e9488336006e81a8b630a488484c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3016aa9d-cb95-44cb-9b48-74fcd2993245", "node_type": "1", "metadata": {}, "hash": "88a7faaa95dbfd3f70691d09af3364c7be4e505fe32ad6bc47abf89a20b41626", "class_name": "RelatedNodeInfo"}}, "text": "The array starting addresses are parameters, so they are in $a0, $a1, and $a2. Assume that the integer variables are in $s0, $s1, and $s2, respectively. What is the MIPS assembly code for the body of the procedure?", "start_char_idx": 0, "end_char_idx": 214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3016aa9d-cb95-44cb-9b48-74fcd2993245": {"__data__": {"id_": "3016aa9d-cb95-44cb-9b48-74fcd2993245", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e34a1ab8-0748-43ad-9fa3-112054b21bc1", "node_type": "4", "metadata": {}, "hash": "88a7faaa95dbfd3f70691d09af3364c7be4e505fe32ad6bc47abf89a20b41626", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d24f48fd-0dfc-4d98-ab84-dc4511adaf6b", "node_type": "1", "metadata": {}, "hash": "d902081478c5eb64656dc10233e773a9564396e3e9409eae2c4bfcee31ffa309", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32e34e7d-e3e1-467f-b776-7b54c245aada", "node_type": "1", "metadata": {}, "hash": "ddf94c0245e329d329ccd1d58a2d2c8541c9e76d1a0cfd54ec2fd66b34021239", "class_name": "RelatedNodeInfo"}}, "text": "Answer Note that c[i][j] is used in the innermost loop above. Since the loop index is k, the index does not a\ufb00ect c[i][j], so we can avoid loading and storing c[i][j] each iteration. Instead, the compiler loads c[i][j] into a register outside the loop, accumulates the sum of the products of a[i][k] and b[k][j] in that same register, and then stores the sum into c[i][j] upon termination of the innermost loop.", "start_char_idx": 0, "end_char_idx": 411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32e34e7d-e3e1-467f-b776-7b54c245aada": {"__data__": {"id_": "32e34e7d-e3e1-467f-b776-7b54c245aada", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "539f960b-2dc5-4115-b7f2-902d1ddd0afa", "node_type": "4", "metadata": {}, "hash": "ddf94c0245e329d329ccd1d58a2d2c8541c9e76d1a0cfd54ec2fd66b34021239", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3016aa9d-cb95-44cb-9b48-74fcd2993245", "node_type": "1", "metadata": {}, "hash": "88a7faaa95dbfd3f70691d09af3364c7be4e505fe32ad6bc47abf89a20b41626", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a", "node_type": "1", "metadata": {}, "hash": "1ba6469529cddeacbd9c2d7ef80eaf9299ac62bc3eb13881e49f9b97990b5038", "class_name": "RelatedNodeInfo"}}, "text": "We keep the code simpler by using the assembly language", "start_char_idx": 0, "end_char_idx": 55, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a": {"__data__": {"id_": "7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccc8a85f-cf9d-4ba8-a8cf-41345b8614b6", "node_type": "4", "metadata": {}, "hash": "1ba6469529cddeacbd9c2d7ef80eaf9299ac62bc3eb13881e49f9b97990b5038", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32e34e7d-e3e1-467f-b776-7b54c245aada", "node_type": "1", "metadata": {}, "hash": "ddf94c0245e329d329ccd1d58a2d2c8541c9e76d1a0cfd54ec2fd66b34021239", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27464a6f-2093-423f-b575-52650967b7cb", "node_type": "1", "metadata": {}, "hash": "4d7e94d0eccf819dbe6298a1342c2c4e79c050dcfc53ba29d9ace7e4c3ed7e66", "class_name": "RelatedNodeInfo"}}, "text": "pseudoinstructions li (which loads a constant into a register), and l.d and s.d (which the assembler turns into a pair of data transfer instructions, lwc1 or swc1, to a pair of \ufb02oating-point registers).", "start_char_idx": 0, "end_char_idx": 202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27464a6f-2093-423f-b575-52650967b7cb": {"__data__": {"id_": "27464a6f-2093-423f-b575-52650967b7cb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2039709-6308-4b21-89ee-fa2e9b782698", "node_type": "4", "metadata": {}, "hash": "4d7e94d0eccf819dbe6298a1342c2c4e79c050dcfc53ba29d9ace7e4c3ed7e66", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a", "node_type": "1", "metadata": {}, "hash": "1ba6469529cddeacbd9c2d7ef80eaf9299ac62bc3eb13881e49f9b97990b5038", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3770e80-456a-4e40-b1bc-a48086cb4866", "node_type": "1", "metadata": {}, "hash": "d3432fa09c5ac398c99313e6d77bab2914c5d4d71d8a568bacd3818daf984065", "class_name": "RelatedNodeInfo"}}, "text": "The body of the procedure starts with saving the loop termination value of 32 in a temporary register and then initializing the three for loop variables:", "start_char_idx": 0, "end_char_idx": 153, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3770e80-456a-4e40-b1bc-a48086cb4866": {"__data__": {"id_": "e3770e80-456a-4e40-b1bc-a48086cb4866", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "63d9dbf9-4a44-4c9a-8bde-30b93df4878f", "node_type": "4", "metadata": {}, "hash": "d3432fa09c5ac398c99313e6d77bab2914c5d4d71d8a568bacd3818daf984065", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27464a6f-2093-423f-b575-52650967b7cb", "node_type": "1", "metadata": {}, "hash": "4d7e94d0eccf819dbe6298a1342c2c4e79c050dcfc53ba29d9ace7e4c3ed7e66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef88011c-40c5-4716-9330-92a364fa550a", "node_type": "1", "metadata": {}, "hash": "91bd866477c870957fe10e5ee68e4202ab556b45557397b06b24ee6129c8ad4a", "class_name": "RelatedNodeInfo"}}, "text": "To calculate the address of c[i][j], we need to know how a 32 \u00d7", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef88011c-40c5-4716-9330-92a364fa550a": {"__data__": {"id_": "ef88011c-40c5-4716-9330-92a364fa550a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "baeee50a-0507-49c6-ad0a-3114637f4d0f", "node_type": "4", "metadata": {}, "hash": "91bd866477c870957fe10e5ee68e4202ab556b45557397b06b24ee6129c8ad4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3770e80-456a-4e40-b1bc-a48086cb4866", "node_type": "1", "metadata": {}, "hash": "d3432fa09c5ac398c99313e6d77bab2914c5d4d71d8a568bacd3818daf984065", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e76bb23-2277-4907-8329-210781458d45", "node_type": "1", "metadata": {}, "hash": "8306a76d884e5a3244c8f03d4206e0abdc78f9fb5d8bf68987608cbf7cd500fa", "class_name": "RelatedNodeInfo"}}, "text": "32, two-dimensional array is stored in memory. As you might expect, its layout is the same as if there were 32 single-dimension arrays, each with 32 elements. So the \ufb01rst step is to skip over the i \u201csingle-dimensional arrays,\u201d or rows, to get the one we want. Thus, we multiply the index in the \ufb01rst dimension by the size of the row, 32. Since 32 is a power of 2, we can use a shift instead:", "start_char_idx": 0, "end_char_idx": 391, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e76bb23-2277-4907-8329-210781458d45": {"__data__": {"id_": "3e76bb23-2277-4907-8329-210781458d45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d61b81da-6f87-4bd8-a2c5-9044e1173fdf", "node_type": "4", "metadata": {}, "hash": "8306a76d884e5a3244c8f03d4206e0abdc78f9fb5d8bf68987608cbf7cd500fa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef88011c-40c5-4716-9330-92a364fa550a", "node_type": "1", "metadata": {}, "hash": "91bd866477c870957fe10e5ee68e4202ab556b45557397b06b24ee6129c8ad4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1757036b-5a1d-416e-9ac3-62b79b0c0c0f", "node_type": "1", "metadata": {}, "hash": "2ab7b7b64de251d19f19a992152af4e30a86b43687690ce42fffe2f72d3622f3", "class_name": "RelatedNodeInfo"}}, "text": "sll $t2, $s0, 5 # $t2 = i * 25 (size of row of c)", "start_char_idx": 0, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1757036b-5a1d-416e-9ac3-62b79b0c0c0f": {"__data__": {"id_": "1757036b-5a1d-416e-9ac3-62b79b0c0c0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c1bbbd33-2ab6-41f5-ab5b-ed077c10c84e", "node_type": "4", "metadata": {}, "hash": "2ab7b7b64de251d19f19a992152af4e30a86b43687690ce42fffe2f72d3622f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e76bb23-2277-4907-8329-210781458d45", "node_type": "1", "metadata": {}, "hash": "8306a76d884e5a3244c8f03d4206e0abdc78f9fb5d8bf68987608cbf7cd500fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "877450de-1735-4d1b-9a23-51bb72de7e36", "node_type": "1", "metadata": {}, "hash": "b6b7555bb216ffb1fdd74004048bd99a04532bf5eb71f0aae3904f27c4126a33", "class_name": "RelatedNodeInfo"}}, "text": "Now we add the second index to select the jth element of the", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "877450de-1735-4d1b-9a23-51bb72de7e36": {"__data__": {"id_": "877450de-1735-4d1b-9a23-51bb72de7e36", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c86ac1c-2a3d-43d6-95cf-a4d87a04e80d", "node_type": "4", "metadata": {}, "hash": "b6b7555bb216ffb1fdd74004048bd99a04532bf5eb71f0aae3904f27c4126a33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1757036b-5a1d-416e-9ac3-62b79b0c0c0f", "node_type": "1", "metadata": {}, "hash": "2ab7b7b64de251d19f19a992152af4e30a86b43687690ce42fffe2f72d3622f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0", "node_type": "1", "metadata": {}, "hash": "5bfe650d737306e9597c8663a80d1e39a6122ed68e0b2dda41ab6ab072443ad2", "class_name": "RelatedNodeInfo"}}, "text": "desired row:", "start_char_idx": 0, "end_char_idx": 12, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0": {"__data__": {"id_": "d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9409da37-43c3-4fda-b8ad-776c90ae586f", "node_type": "4", "metadata": {}, "hash": "5bfe650d737306e9597c8663a80d1e39a6122ed68e0b2dda41ab6ab072443ad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "877450de-1735-4d1b-9a23-51bb72de7e36", "node_type": "1", "metadata": {}, "hash": "b6b7555bb216ffb1fdd74004048bd99a04532bf5eb71f0aae3904f27c4126a33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cc7c075-6091-454b-a287-c21b70536c7e", "node_type": "1", "metadata": {}, "hash": "81d1ebc57c4a4c599318a8e0bdc1a7b80f5fa5d5db4612dc013dd181786a4c15", "class_name": "RelatedNodeInfo"}}, "text": "addu $t2, $t2, $s1 # $t2 = i * size(row) + j", "start_char_idx": 0, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cc7c075-6091-454b-a287-c21b70536c7e": {"__data__": {"id_": "3cc7c075-6091-454b-a287-c21b70536c7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "97fbaee8-78de-4152-8dd8-52c4c1a5b449", "node_type": "4", "metadata": {}, "hash": "81d1ebc57c4a4c599318a8e0bdc1a7b80f5fa5d5db4612dc013dd181786a4c15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0", "node_type": "1", "metadata": {}, "hash": "5bfe650d737306e9597c8663a80d1e39a6122ed68e0b2dda41ab6ab072443ad2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "026668d9-c202-4ec6-bc5c-13cbc847792c", "node_type": "1", "metadata": {}, "hash": "f2bbcc20c458b3dc6e02ce92b4fac7c8b38032fcee38b0f028bcde0312798ec3", "class_name": "RelatedNodeInfo"}}, "text": "To turn this sum into a byte index, we multiply it by the size of a", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "026668d9-c202-4ec6-bc5c-13cbc847792c": {"__data__": {"id_": "026668d9-c202-4ec6-bc5c-13cbc847792c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6be10d8b-c23c-4cc6-a317-6f54b93dd3ae", "node_type": "4", "metadata": {}, "hash": "f2bbcc20c458b3dc6e02ce92b4fac7c8b38032fcee38b0f028bcde0312798ec3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cc7c075-6091-454b-a287-c21b70536c7e", "node_type": "1", "metadata": {}, "hash": "81d1ebc57c4a4c599318a8e0bdc1a7b80f5fa5d5db4612dc013dd181786a4c15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9", "node_type": "1", "metadata": {}, "hash": "d0a9608a3a65a60888a3bf68bc8f645b2320f705fe92e0452b63fc57b11309c2", "class_name": "RelatedNodeInfo"}}, "text": "matrix element in bytes. Since each element is 8 bytes for double precision, we can instead shift left by 3 since 8 is a power of 2:", "start_char_idx": 0, "end_char_idx": 132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9": {"__data__": {"id_": "04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f9c3ac4b-a94f-417b-9284-4a48b19ebd51", "node_type": "4", "metadata": {}, "hash": "d0a9608a3a65a60888a3bf68bc8f645b2320f705fe92e0452b63fc57b11309c2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "026668d9-c202-4ec6-bc5c-13cbc847792c", "node_type": "1", "metadata": {}, "hash": "f2bbcc20c458b3dc6e02ce92b4fac7c8b38032fcee38b0f028bcde0312798ec3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac42879a-1f8b-49c9-b0c7-0e6ec266497c", "node_type": "1", "metadata": {}, "hash": "fc946e152f4b419fb4cfc086a34ab79f0f9add3b3cd36c1e5878b351b0703304", "class_name": "RelatedNodeInfo"}}, "text": "sll $t2, $t2, 3 # $t2 = byte offset of [i][j]", "start_char_idx": 0, "end_char_idx": 45, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac42879a-1f8b-49c9-b0c7-0e6ec266497c": {"__data__": {"id_": "ac42879a-1f8b-49c9-b0c7-0e6ec266497c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f8fdf1ce-5174-4af5-bf52-b1ab9806a465", "node_type": "4", "metadata": {}, "hash": "fc946e152f4b419fb4cfc086a34ab79f0f9add3b3cd36c1e5878b351b0703304", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9", "node_type": "1", "metadata": {}, "hash": "d0a9608a3a65a60888a3bf68bc8f645b2320f705fe92e0452b63fc57b11309c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb903d6d-62e8-4284-ba92-4cd3c1341f9c", "node_type": "1", "metadata": {}, "hash": "db7b6876064ab91155d2a173cfa9165052a12e943c205a874a6890c68875266a", "class_name": "RelatedNodeInfo"}}, "text": "Next we add this sum to the base address of c, giving the address of c[i][j], and then load the double precision number c[i][j] into $f4:", "start_char_idx": 0, "end_char_idx": 137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb903d6d-62e8-4284-ba92-4cd3c1341f9c": {"__data__": {"id_": "fb903d6d-62e8-4284-ba92-4cd3c1341f9c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d088d6f2-2cf4-41c6-9b2b-d2ae911d2b04", "node_type": "4", "metadata": {}, "hash": "db7b6876064ab91155d2a173cfa9165052a12e943c205a874a6890c68875266a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac42879a-1f8b-49c9-b0c7-0e6ec266497c", "node_type": "1", "metadata": {}, "hash": "fc946e152f4b419fb4cfc086a34ab79f0f9add3b3cd36c1e5878b351b0703304", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22fe33ab-7058-43cc-83ab-1a2585f4271b", "node_type": "1", "metadata": {}, "hash": "a576986632d61d2e9034c0cb11cbf35e01c7a527efa8f971e60836c3950f61b9", "class_name": "RelatedNodeInfo"}}, "text": "addu $t2, $a0, $t2 # $t2 = byte address of c[i][j] l.d $f4, 0($t2) # $f4 = 8 bytes of c[i][j]", "start_char_idx": 0, "end_char_idx": 93, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "22fe33ab-7058-43cc-83ab-1a2585f4271b": {"__data__": {"id_": "22fe33ab-7058-43cc-83ab-1a2585f4271b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "aa70a2b1-40a8-4e41-a82f-327a5ebe1ff3", "node_type": "4", "metadata": {}, "hash": "a576986632d61d2e9034c0cb11cbf35e01c7a527efa8f971e60836c3950f61b9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb903d6d-62e8-4284-ba92-4cd3c1341f9c", "node_type": "1", "metadata": {}, "hash": "db7b6876064ab91155d2a173cfa9165052a12e943c205a874a6890c68875266a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae685ddc-2bac-49e8-be0a-1086be2fc1a6", "node_type": "1", "metadata": {}, "hash": "47170e0ebaf010755fdd65ad6214279ed487a21133c5fd59bdab2e52919502ad", "class_name": "RelatedNodeInfo"}}, "text": "The following \ufb01ve instructions are virtually identical to the last", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae685ddc-2bac-49e8-be0a-1086be2fc1a6": {"__data__": {"id_": "ae685ddc-2bac-49e8-be0a-1086be2fc1a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "096c41c3-d450-409b-8b2d-964a1467248b", "node_type": "4", "metadata": {}, "hash": "47170e0ebaf010755fdd65ad6214279ed487a21133c5fd59bdab2e52919502ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22fe33ab-7058-43cc-83ab-1a2585f4271b", "node_type": "1", "metadata": {}, "hash": "a576986632d61d2e9034c0cb11cbf35e01c7a527efa8f971e60836c3950f61b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1aef8f9-af2a-405d-90fe-d61b0a42d31d", "node_type": "1", "metadata": {}, "hash": "94fd4c0a54a9bfcfc3d0225b8c58c29040be5a4675028f73f8d8c96ce7c3c908", "class_name": "RelatedNodeInfo"}}, "text": "\ufb01ve: calculate the address and then load the double precision", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1aef8f9-af2a-405d-90fe-d61b0a42d31d": {"__data__": {"id_": "e1aef8f9-af2a-405d-90fe-d61b0a42d31d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "67b19a1b-c8c3-424d-93ab-31b6b8fb34d1", "node_type": "4", "metadata": {}, "hash": "94fd4c0a54a9bfcfc3d0225b8c58c29040be5a4675028f73f8d8c96ce7c3c908", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae685ddc-2bac-49e8-be0a-1086be2fc1a6", "node_type": "1", "metadata": {}, "hash": "47170e0ebaf010755fdd65ad6214279ed487a21133c5fd59bdab2e52919502ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "062e369d-3b85-4ae7-8508-58af3366fbb9", "node_type": "1", "metadata": {}, "hash": "ef2b8670e4c3af0f16296c8feea634e2a3810aab3f97b4b1c9043a26560b3ef6", "class_name": "RelatedNodeInfo"}}, "text": "Similarly, the next \ufb01ve instructions are like the last \ufb01ve: calculate", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "062e369d-3b85-4ae7-8508-58af3366fbb9": {"__data__": {"id_": "062e369d-3b85-4ae7-8508-58af3366fbb9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ef08820-e57f-4a08-9e23-f21d475e8b06", "node_type": "4", "metadata": {}, "hash": "ef2b8670e4c3af0f16296c8feea634e2a3810aab3f97b4b1c9043a26560b3ef6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1aef8f9-af2a-405d-90fe-d61b0a42d31d", "node_type": "1", "metadata": {}, "hash": "94fd4c0a54a9bfcfc3d0225b8c58c29040be5a4675028f73f8d8c96ce7c3c908", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b49c941-425d-46b7-8244-525834f823c0", "node_type": "1", "metadata": {}, "hash": "69f491bd08147b3864c87556ccba7b36fc5054d34f40faac84b9809f39e65d52", "class_name": "RelatedNodeInfo"}}, "text": "the address and then load the double precision number a[i][k].", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b49c941-425d-46b7-8244-525834f823c0": {"__data__": {"id_": "9b49c941-425d-46b7-8244-525834f823c0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d54bf77f-bc0e-4f8c-acdf-ca27bb9fc1c4", "node_type": "4", "metadata": {}, "hash": "69f491bd08147b3864c87556ccba7b36fc5054d34f40faac84b9809f39e65d52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "062e369d-3b85-4ae7-8508-58af3366fbb9", "node_type": "1", "metadata": {}, "hash": "ef2b8670e4c3af0f16296c8feea634e2a3810aab3f97b4b1c9043a26560b3ef6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65b44b09-e787-4aa1-ac17-59a5348d6332", "node_type": "1", "metadata": {}, "hash": "a55ab711d3e2b8c039ac4bd551844f18fab9d1df2c6e2df918468fb14936d359", "class_name": "RelatedNodeInfo"}}, "text": "Now that we have loaded all the data, we are \ufb01nally ready to do", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65b44b09-e787-4aa1-ac17-59a5348d6332": {"__data__": {"id_": "65b44b09-e787-4aa1-ac17-59a5348d6332", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb720173-1797-4134-9e1a-b61273d67a76", "node_type": "4", "metadata": {}, "hash": "a55ab711d3e2b8c039ac4bd551844f18fab9d1df2c6e2df918468fb14936d359", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b49c941-425d-46b7-8244-525834f823c0", "node_type": "1", "metadata": {}, "hash": "69f491bd08147b3864c87556ccba7b36fc5054d34f40faac84b9809f39e65d52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a96a19f5-2b87-4a6a-8518-33a96d21ed45", "node_type": "1", "metadata": {}, "hash": "6d8ca3df47418c918cc7d1267de79c5f6aae9b491388e0f880292007ac36d5b7", "class_name": "RelatedNodeInfo"}}, "text": "some \ufb02oating-point operations! We multiply elements of a and b located in registers $f18 and $f16, and then accumulate the sum in $f4. mul.d $f16, $f18, $f16 # $f16 = a[i][k] * b[k][j]", "start_char_idx": 0, "end_char_idx": 184, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a96a19f5-2b87-4a6a-8518-33a96d21ed45": {"__data__": {"id_": "a96a19f5-2b87-4a6a-8518-33a96d21ed45", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "540ada36-0615-4654-91f2-473b791ee70f", "node_type": "4", "metadata": {}, "hash": "6d8ca3df47418c918cc7d1267de79c5f6aae9b491388e0f880292007ac36d5b7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65b44b09-e787-4aa1-ac17-59a5348d6332", "node_type": "1", "metadata": {}, "hash": "a55ab711d3e2b8c039ac4bd551844f18fab9d1df2c6e2df918468fb14936d359", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0297d30b-1471-4148-9834-2fcf40ea4b5b", "node_type": "1", "metadata": {}, "hash": "406249e284f981791f859c00ef9edfd472c49e572a3d66c44494624b6dd67e0b", "class_name": "RelatedNodeInfo"}}, "text": "add.d $f4, $f4, $f16 # f4 = c[i][j] + a[i][k] * b[k][j] The \ufb01nal block increments the index k and loops back if the index is not 32. If it is 32, and thus the end of the innermost loop, we need to store the sum accumulated in $f4 into c[i][j].", "start_char_idx": 0, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0297d30b-1471-4148-9834-2fcf40ea4b5b": {"__data__": {"id_": "0297d30b-1471-4148-9834-2fcf40ea4b5b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "99871a37-cdf5-4ce2-be73-85753a730815", "node_type": "4", "metadata": {}, "hash": "406249e284f981791f859c00ef9edfd472c49e572a3d66c44494624b6dd67e0b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a96a19f5-2b87-4a6a-8518-33a96d21ed45", "node_type": "1", "metadata": {}, "hash": "6d8ca3df47418c918cc7d1267de79c5f6aae9b491388e0f880292007ac36d5b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dfcbd6b9-b330-4184-a803-79766aaaa07a", "node_type": "1", "metadata": {}, "hash": "86c5caaaf556ddf3facc3ba18ce79dc4b3018df3c2f0f37d361c4bdf3e1401b3", "class_name": "RelatedNodeInfo"}}, "text": "addiu $s2, $s2, 1 # $k = k + 1 bne $s2, $t1, L3 # if (k ! = 32) go to L3 s.d $f4, 0($t2) # c[i][j] = $f4 Similarly, these \ufb01nal four instructions increment the index variable of the middle and outermost loops, looping back if the index is not 32 and exiting if the index is 32.", "start_char_idx": 0, "end_char_idx": 276, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfcbd6b9-b330-4184-a803-79766aaaa07a": {"__data__": {"id_": "dfcbd6b9-b330-4184-a803-79766aaaa07a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "816e0a23-35a5-4bd3-bf5f-dac15d3b8d73", "node_type": "4", "metadata": {}, "hash": "86c5caaaf556ddf3facc3ba18ce79dc4b3018df3c2f0f37d361c4bdf3e1401b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0297d30b-1471-4148-9834-2fcf40ea4b5b", "node_type": "1", "metadata": {}, "hash": "406249e284f981791f859c00ef9edfd472c49e572a3d66c44494624b6dd67e0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "963f2f1d-1935-4ced-9745-65220ffc82ac", "node_type": "1", "metadata": {}, "hash": "0396d867945f612b0a70ce6516352f568241229db20e0e289bb5159d29735a31", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.22 below shows the x86 assembly language code for a", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "963f2f1d-1935-4ced-9745-65220ffc82ac": {"__data__": {"id_": "963f2f1d-1935-4ced-9745-65220ffc82ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f92c4b4a-52e4-4c53-b3f0-795877aac848", "node_type": "4", "metadata": {}, "hash": "0396d867945f612b0a70ce6516352f568241229db20e0e289bb5159d29735a31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dfcbd6b9-b330-4184-a803-79766aaaa07a", "node_type": "1", "metadata": {}, "hash": "86c5caaaf556ddf3facc3ba18ce79dc4b3018df3c2f0f37d361c4bdf3e1401b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c", "node_type": "1", "metadata": {}, "hash": "b606dd25b676a02f5b0af0eff9b83f13657fd014537448e3474e10d43b2c75cc", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration The array layout discussed in the example, called row-major order, is used by C and many other programming languages. Fortran instead uses column-major order, whereby the array is stored column by column.", "start_char_idx": 0, "end_char_idx": 216, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c": {"__data__": {"id_": "fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a663d69-0a3e-4271-abcb-59e8fa53d34b", "node_type": "4", "metadata": {}, "hash": "b606dd25b676a02f5b0af0eff9b83f13657fd014537448e3474e10d43b2c75cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963f2f1d-1935-4ced-9745-65220ffc82ac", "node_type": "1", "metadata": {}, "hash": "0396d867945f612b0a70ce6516352f568241229db20e0e289bb5159d29735a31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbfc1918-415d-403a-96ea-89c519e1ee08", "node_type": "1", "metadata": {}, "hash": "710dfd8055682bbf4550dc91ad9a8573f69a0d06844178c540f2d0be5338efef", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration Only 16 of the 32 MIPS \ufb02oating-point registers could originally be used for double precision operations: $f0, $f2, $f4, \u2026, $f30. Double precision is computed using pairs of these single precision registers. The odd-numbered \ufb02oating-point registers were used only to load and store the right half of 64-bit \ufb02oating-point numbers. MIPS-32 added l.d and s.d to the instruction set. MIPS-32 also added \u201cpaired single\u201d versions of all \ufb02oating-point instructions, where a single instruction results in two parallel \ufb02oating-point operations on two 32-bit operands inside 64-bit registers (see Section 3.6). For example, add.ps $f0, $f2, $f4 is equivalent to add.s $f0, $f2, $f4 followed by add.s $f1, $f3, $f5.", "start_char_idx": 0, "end_char_idx": 715, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbfc1918-415d-403a-96ea-89c519e1ee08": {"__data__": {"id_": "bbfc1918-415d-403a-96ea-89c519e1ee08", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9368d87d-3b17-47a6-9af2-f4578aac44b6", "node_type": "4", "metadata": {}, "hash": "710dfd8055682bbf4550dc91ad9a8573f69a0d06844178c540f2d0be5338efef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c", "node_type": "1", "metadata": {}, "hash": "b606dd25b676a02f5b0af0eff9b83f13657fd014537448e3474e10d43b2c75cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fcccc78-41ff-4169-bbcd-3e5c87169108", "node_type": "1", "metadata": {}, "hash": "35deb840d98e88cabb2ef32450f98da3fe5a07490d6466c54ef1cebd97a26775", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration Another reason for separate integers and \ufb02oating-point registers is that microprocessors in the 1980s didn\u2019t have enough transistors to", "start_char_idx": 0, "end_char_idx": 147, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fcccc78-41ff-4169-bbcd-3e5c87169108": {"__data__": {"id_": "6fcccc78-41ff-4169-bbcd-3e5c87169108", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f334c45-5acb-457b-bb48-4f25b33ccaba", "node_type": "4", "metadata": {}, "hash": "35deb840d98e88cabb2ef32450f98da3fe5a07490d6466c54ef1cebd97a26775", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbfc1918-415d-403a-96ea-89c519e1ee08", "node_type": "1", "metadata": {}, "hash": "710dfd8055682bbf4550dc91ad9a8573f69a0d06844178c540f2d0be5338efef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c28411b-3f04-4bc2-9d54-1e4434ddf390", "node_type": "1", "metadata": {}, "hash": "1c4f744eea15a07f7dcb29d5b2e24289097648a269f0313f754ad13525fc418f", "class_name": "RelatedNodeInfo"}}, "text": "put the \ufb02oating-point unit on the same chip as the integer unit. Hence, the \ufb02oating-point unit, including the \ufb02oating-point registers, was optionally available as a second chip. Such optional accelerator chips are called coprocessors, and explain the acronym for \ufb02oating- point loads in MIPS: lwc1 means load word to coprocessor 1, the \ufb02oating-point unit. (Coprocessor 0 deals with virtual memory, described in Chapter 5.) Since the early 1990s, microprocessors have integrated \ufb02oating point (and just about everything else) on chip.", "start_char_idx": 0, "end_char_idx": 533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c28411b-3f04-4bc2-9d54-1e4434ddf390": {"__data__": {"id_": "4c28411b-3f04-4bc2-9d54-1e4434ddf390", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1cb5572d-6ec9-49fe-9816-1b8a78ed9287", "node_type": "4", "metadata": {}, "hash": "1c4f744eea15a07f7dcb29d5b2e24289097648a269f0313f754ad13525fc418f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fcccc78-41ff-4169-bbcd-3e5c87169108", "node_type": "1", "metadata": {}, "hash": "35deb840d98e88cabb2ef32450f98da3fe5a07490d6466c54ef1cebd97a26775", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "714f0bb8-946a-4700-a768-b6e66349905d", "node_type": "1", "metadata": {}, "hash": "ba513530706b0f01831ab0818c2dab799d619453deea8a5cc9fc6619e5c6eb76", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration As mentioned in Section 3.4, accelerating division is more challenging than multiplication. In addition to SRT, another technique to leverage a fast multiplier is Newton\u2019s iteration, where division is recast as \ufb01nding the zero of a function to \ufb01nd the reciprocal 1/c, which is then multiplied by the other operand. Iteration techniques cannot be rounded properly without calculating many extra bits. A TI chip solved this problem by calculating an extra-precise reciprocal.", "start_char_idx": 0, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "714f0bb8-946a-4700-a768-b6e66349905d": {"__data__": {"id_": "714f0bb8-946a-4700-a768-b6e66349905d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e4da60c1-cb71-42fb-a47e-b774f1d23042", "node_type": "4", "metadata": {}, "hash": "ba513530706b0f01831ab0818c2dab799d619453deea8a5cc9fc6619e5c6eb76", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c28411b-3f04-4bc2-9d54-1e4434ddf390", "node_type": "1", "metadata": {}, "hash": "1c4f744eea15a07f7dcb29d5b2e24289097648a269f0313f754ad13525fc418f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "237457ed-c8d5-411b-816d-04df31152659", "node_type": "1", "metadata": {}, "hash": "2a58b2a6cd9b09173a4592223b8ff8d14dc8cb206bac6e610f30b980d20c43da", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration Java embraces IEEE 754 by name in its de\ufb01nition of Java \ufb02oating- point data types and operations. Thus, the code in the \ufb01rst example could have well been generated for a class method that converted Fahrenheit to Celsius.", "start_char_idx": 0, "end_char_idx": 232, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "237457ed-c8d5-411b-816d-04df31152659": {"__data__": {"id_": "237457ed-c8d5-411b-816d-04df31152659", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "afb6a292-9afb-4bb3-880e-2d45fb4ce775", "node_type": "4", "metadata": {}, "hash": "2a58b2a6cd9b09173a4592223b8ff8d14dc8cb206bac6e610f30b980d20c43da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "714f0bb8-946a-4700-a768-b6e66349905d", "node_type": "1", "metadata": {}, "hash": "ba513530706b0f01831ab0818c2dab799d619453deea8a5cc9fc6619e5c6eb76", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fe4b2ed-8bf3-49f5-b06c-879da52552e0", "node_type": "1", "metadata": {}, "hash": "8f4baf71bc0c31e28746421db885a934bc128dcb553cd82b561becb9d2e8278d", "class_name": "RelatedNodeInfo"}}, "text": "The second example above uses multiple dimensional arrays, which are not explicitly supported in Java. Java allows arrays of arrays, but each array may have its own length, unlike multiple dimensional arrays in C. Like the examples in Chapter 2, a Java version of this second example would require a good deal of checking code for array bounds, including a new length calculation at the end of row access. It would also need to check that the object reference is not null.", "start_char_idx": 0, "end_char_idx": 472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5fe4b2ed-8bf3-49f5-b06c-879da52552e0": {"__data__": {"id_": "5fe4b2ed-8bf3-49f5-b06c-879da52552e0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4582ccd-b280-4392-87c0-d3e013bc43d6", "node_type": "4", "metadata": {}, "hash": "8f4baf71bc0c31e28746421db885a934bc128dcb553cd82b561becb9d2e8278d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "237457ed-c8d5-411b-816d-04df31152659", "node_type": "1", "metadata": {}, "hash": "2a58b2a6cd9b09173a4592223b8ff8d14dc8cb206bac6e610f30b980d20c43da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33a89641-02f1-4fd2-801d-be113af8cb69", "node_type": "1", "metadata": {}, "hash": "ece7ee5a1832cf481b3e7657b04393edbc27303800985225e8a41f5ef77168b1", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.17 MIPS floating-point architecture revealed thus far. See Appendix A, Section A.10, for more detail. This information is also found in column 2 of the MIPS Reference Data Card at the front of this book.", "start_char_idx": 0, "end_char_idx": 212, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33a89641-02f1-4fd2-801d-be113af8cb69": {"__data__": {"id_": "33a89641-02f1-4fd2-801d-be113af8cb69", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b4a28b23-72db-4707-be7f-78b02ef81e9b", "node_type": "4", "metadata": {}, "hash": "ece7ee5a1832cf481b3e7657b04393edbc27303800985225e8a41f5ef77168b1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fe4b2ed-8bf3-49f5-b06c-879da52552e0", "node_type": "1", "metadata": {}, "hash": "8f4baf71bc0c31e28746421db885a934bc128dcb553cd82b561becb9d2e8278d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7e3f098-e61d-4df8-9fe0-57be1d99fa8a", "node_type": "1", "metadata": {}, "hash": "f843fe9da699ddfbf7bbe262f16e267fba0b8a5d3ada8a8a76e35bdd043521a4", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.18 MIPS floating-point instruction encoding. This notation gives the value of a field by row and by column. For example, in the top portion of the figure, lw is found in row number 4 (100two for bits 31\u201329 of the instruction) and column number 3 (011two for bits 28\u201326 of the instruction), so the corresponding value of the op field (bits 31\u201326) is 100011two. Underlined text means the field is used elsewhere. For example, FlPt in row 2 and column 1 (op = 010001two) is defined in the bottom part of the figure. Hence sub.f in row 0 and column 1 of the bottom section means that the funct field (bits 5\u20130) of the instruction is 000001two and the op field (bits 31\u201326) is 010001two. Note that the 5-bit rs field, specified in the middle portion of the figure, determines whether the operation is single precision (f = s, so rs = 10000) or double precision (f = d, so rs = 10001). Similarly, bit 16 of the instruction determines if the bc1.c instruction tests for true (bit 16 = 1= > bc1.t) or false (bit 16 = 0= > bc1.f). This information is also found in column 2 of the MIPS Reference Data Card at the front of this book.", "start_char_idx": 0, "end_char_idx": 1132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7e3f098-e61d-4df8-9fe0-57be1d99fa8a": {"__data__": {"id_": "f7e3f098-e61d-4df8-9fe0-57be1d99fa8a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "457f05e6-5ecf-40fa-aa8c-e20996e560e5", "node_type": "4", "metadata": {}, "hash": "f843fe9da699ddfbf7bbe262f16e267fba0b8a5d3ada8a8a76e35bdd043521a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33a89641-02f1-4fd2-801d-be113af8cb69", "node_type": "1", "metadata": {}, "hash": "ece7ee5a1832cf481b3e7657b04393edbc27303800985225e8a41f5ef77168b1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e1be0ef4-c2ea-4785-a57a-00b70f7867b4", "node_type": "1", "metadata": {}, "hash": "02eb923838b1e39d8f589857d570b611fec2e3bb9541d54dacba92e58f1c17f2", "class_name": "RelatedNodeInfo"}}, "text": "Accurate Arithmetic Unlike integers, which can represent exactly every number between the smallest and largest number, \ufb02oating-point numbers are normally approximations for a number they can\u2019t really represent. The reason is that an in\ufb01nite variety of real numbers exists between, say, 0 and 1, but no more than 253 can be represented exactly in double precision \ufb02oating point. The best we can do is ge\u0000ing the \ufb02oating-point representation close to the actual number. Thus, IEEE 754 o\ufb00ers several modes of rounding to let the programmer pick the desired approximation.", "start_char_idx": 0, "end_char_idx": 568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1be0ef4-c2ea-4785-a57a-00b70f7867b4": {"__data__": {"id_": "e1be0ef4-c2ea-4785-a57a-00b70f7867b4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9701fdcb-4e4f-4365-b387-71d3e74ac6ed", "node_type": "4", "metadata": {}, "hash": "02eb923838b1e39d8f589857d570b611fec2e3bb9541d54dacba92e58f1c17f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7e3f098-e61d-4df8-9fe0-57be1d99fa8a", "node_type": "1", "metadata": {}, "hash": "f843fe9da699ddfbf7bbe262f16e267fba0b8a5d3ada8a8a76e35bdd043521a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9863306e-e535-4cc7-8b94-cc81bb6e1745", "node_type": "1", "metadata": {}, "hash": "a8b49242bf98ddb5a854454556cf74768604d6379d50a4aa1185bbc085a1bbbd", "class_name": "RelatedNodeInfo"}}, "text": "Rounding sounds simple enough, but to round accurately requires the hardware to include extra bits in the calculation. In the preceding examples, we were vague on the number of bits that an intermediate representation can occupy, but clearly, if every intermediate result had to be truncated to the exact number of digits, there would be no opportunity to round. IEEE 754, therefore, always keeps two extra bits on the right during intermediate additions, called guard and round, respectively. Let\u2019s do a decimal example to illustrate their value.", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9863306e-e535-4cc7-8b94-cc81bb6e1745": {"__data__": {"id_": "9863306e-e535-4cc7-8b94-cc81bb6e1745", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b53159ae-78ae-4403-b21b-01a9bafea4bb", "node_type": "4", "metadata": {}, "hash": "a8b49242bf98ddb5a854454556cf74768604d6379d50a4aa1185bbc085a1bbbd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1be0ef4-c2ea-4785-a57a-00b70f7867b4", "node_type": "1", "metadata": {}, "hash": "02eb923838b1e39d8f589857d570b611fec2e3bb9541d54dacba92e58f1c17f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77bec705-312d-4772-bff9-f2deef76e9c5", "node_type": "1", "metadata": {}, "hash": "3dc54ceaa2b35d7c7b27e2c8314a8113dc8cea472f1bb12977a1492abe180d0e", "class_name": "RelatedNodeInfo"}}, "text": "guard The \ufb01rst of two extra bits kept on the right during intermediate calculations of \ufb02oating-point numbers; used to improve rounding accuracy.", "start_char_idx": 0, "end_char_idx": 144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77bec705-312d-4772-bff9-f2deef76e9c5": {"__data__": {"id_": "77bec705-312d-4772-bff9-f2deef76e9c5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4eaea1e3-d59a-4696-ad2e-531ab501cf36", "node_type": "4", "metadata": {}, "hash": "3dc54ceaa2b35d7c7b27e2c8314a8113dc8cea472f1bb12977a1492abe180d0e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9863306e-e535-4cc7-8b94-cc81bb6e1745", "node_type": "1", "metadata": {}, "hash": "a8b49242bf98ddb5a854454556cf74768604d6379d50a4aa1185bbc085a1bbbd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bbf7bc2a-6775-44f3-b071-c2c14931ee0f", "node_type": "1", "metadata": {}, "hash": "b35f9e08072b015c5cb5b744e486445ba9f2ac38a1ca84d600a5ac8446bd6b1d", "class_name": "RelatedNodeInfo"}}, "text": "round Method to make the intermediate \ufb02oating-point result \ufb01t the \ufb02oating-point format; the goal is typically to \ufb01nd the nearest number that can be represented in the format.", "start_char_idx": 0, "end_char_idx": 174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbf7bc2a-6775-44f3-b071-c2c14931ee0f": {"__data__": {"id_": "bbf7bc2a-6775-44f3-b071-c2c14931ee0f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7a05eafc-51c7-4e34-9ca8-2cb13259e711", "node_type": "4", "metadata": {}, "hash": "b35f9e08072b015c5cb5b744e486445ba9f2ac38a1ca84d600a5ac8446bd6b1d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77bec705-312d-4772-bff9-f2deef76e9c5", "node_type": "1", "metadata": {}, "hash": "3dc54ceaa2b35d7c7b27e2c8314a8113dc8cea472f1bb12977a1492abe180d0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d425ca9f-5c01-41a9-bd23-9933679bb384", "node_type": "1", "metadata": {}, "hash": "9a9ee5904abe451ecee8448ca6b605b6d2cc2994b6fdc19715ae976b1769a14f", "class_name": "RelatedNodeInfo"}}, "text": "Example Add 2.56ten \u00d7 100 to 2.34ten \u00d7 102, assuming that we have three signi\ufb01cant decimal digits. Round to the nearest decimal number with three signi\ufb01cant decimal digits, \ufb01rst with guard and round digits, and then without them.", "start_char_idx": 0, "end_char_idx": 229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d425ca9f-5c01-41a9-bd23-9933679bb384": {"__data__": {"id_": "d425ca9f-5c01-41a9-bd23-9933679bb384", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2c4d615d-c49b-4161-800d-543065bbf394", "node_type": "4", "metadata": {}, "hash": "9a9ee5904abe451ecee8448ca6b605b6d2cc2994b6fdc19715ae976b1769a14f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bbf7bc2a-6775-44f3-b071-c2c14931ee0f", "node_type": "1", "metadata": {}, "hash": "b35f9e08072b015c5cb5b744e486445ba9f2ac38a1ca84d600a5ac8446bd6b1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aa440905-ac01-4e9c-acfa-6586a83dca01", "node_type": "1", "metadata": {}, "hash": "a48a81efff514b68f52b5af0e3b1cfca5fa002f622f21ce44c389e530b076df9", "class_name": "RelatedNodeInfo"}}, "text": "Answer First we must shift the smaller number to the right to align the exponents, so 2.56ten \u00d7 100 becomes 0.0256ten \u00d7 102. Since we have guard and round digits, we are able to represent the two least signi\ufb01cant digits when we align expo-nents. The guard digit holds 5 and the round digit holds 6. The sum is", "start_char_idx": 0, "end_char_idx": 309, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa440905-ac01-4e9c-acfa-6586a83dca01": {"__data__": {"id_": "aa440905-ac01-4e9c-acfa-6586a83dca01", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94db6863-579c-4d3f-b83f-aacb1e1428e5", "node_type": "4", "metadata": {}, "hash": "a48a81efff514b68f52b5af0e3b1cfca5fa002f622f21ce44c389e530b076df9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d425ca9f-5c01-41a9-bd23-9933679bb384", "node_type": "1", "metadata": {}, "hash": "9a9ee5904abe451ecee8448ca6b605b6d2cc2994b6fdc19715ae976b1769a14f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fc8f8c3f-9327-4731-8071-02c9b498ce39", "node_type": "1", "metadata": {}, "hash": "65e8dfc0742a2893e371939582422518d6dbebe87802606027231bf78d9fb1be", "class_name": "RelatedNodeInfo"}}, "text": "Thus the sum is 2.3656ten \u00d7 102. Since we have two digits to round,", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fc8f8c3f-9327-4731-8071-02c9b498ce39": {"__data__": {"id_": "fc8f8c3f-9327-4731-8071-02c9b498ce39", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a97b280-b69a-4c10-91bc-23e86691b6d0", "node_type": "4", "metadata": {}, "hash": "65e8dfc0742a2893e371939582422518d6dbebe87802606027231bf78d9fb1be", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aa440905-ac01-4e9c-acfa-6586a83dca01", "node_type": "1", "metadata": {}, "hash": "a48a81efff514b68f52b5af0e3b1cfca5fa002f622f21ce44c389e530b076df9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2efe2d9-2b52-498f-aeb9-cd026f4c2314", "node_type": "1", "metadata": {}, "hash": "e983d893cca40f3f99d0fc51bb866cd8d127cf408f6a1f0d9e14b6a0e4746200", "class_name": "RelatedNodeInfo"}}, "text": "we want values 0 to 49 to round down and 51 to 99 to round up, with 50 being the tiebreaker. Rounding the sum up with three signi\ufb01cant digits yields 2.37ten \u00d7 102.", "start_char_idx": 0, "end_char_idx": 163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2efe2d9-2b52-498f-aeb9-cd026f4c2314": {"__data__": {"id_": "d2efe2d9-2b52-498f-aeb9-cd026f4c2314", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7752ebb-4a9c-44fb-85cd-4fcf33109d72", "node_type": "4", "metadata": {}, "hash": "e983d893cca40f3f99d0fc51bb866cd8d127cf408f6a1f0d9e14b6a0e4746200", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fc8f8c3f-9327-4731-8071-02c9b498ce39", "node_type": "1", "metadata": {}, "hash": "65e8dfc0742a2893e371939582422518d6dbebe87802606027231bf78d9fb1be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c42edc7a-6e5e-41e8-9af4-87a1da4fa15d", "node_type": "1", "metadata": {}, "hash": "e6c9aeee9082f4eb15d88b7fb7ab76cdb3abffbce918c2d84d1582e9cc519776", "class_name": "RelatedNodeInfo"}}, "text": "Doing this without guard and round digits drops two digits from", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c42edc7a-6e5e-41e8-9af4-87a1da4fa15d": {"__data__": {"id_": "c42edc7a-6e5e-41e8-9af4-87a1da4fa15d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "74206a89-4d7b-47e1-b9f7-ed0d7f7fd5a5", "node_type": "4", "metadata": {}, "hash": "e6c9aeee9082f4eb15d88b7fb7ab76cdb3abffbce918c2d84d1582e9cc519776", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2efe2d9-2b52-498f-aeb9-cd026f4c2314", "node_type": "1", "metadata": {}, "hash": "e983d893cca40f3f99d0fc51bb866cd8d127cf408f6a1f0d9e14b6a0e4746200", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d603fbad-680c-409b-aa2b-6753e11e62fa", "node_type": "1", "metadata": {}, "hash": "e3cb319385073f430184984a62ba608572cdf9d502f9b7030db9b8ee97e8dee1", "class_name": "RelatedNodeInfo"}}, "text": "the calculation. The new sum is then", "start_char_idx": 0, "end_char_idx": 36, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d603fbad-680c-409b-aa2b-6753e11e62fa": {"__data__": {"id_": "d603fbad-680c-409b-aa2b-6753e11e62fa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ef401959-3a00-4aa3-bf65-f44600154757", "node_type": "4", "metadata": {}, "hash": "e3cb319385073f430184984a62ba608572cdf9d502f9b7030db9b8ee97e8dee1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c42edc7a-6e5e-41e8-9af4-87a1da4fa15d", "node_type": "1", "metadata": {}, "hash": "e6c9aeee9082f4eb15d88b7fb7ab76cdb3abffbce918c2d84d1582e9cc519776", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfcc835b-341b-4ae5-a515-f238269e0d38", "node_type": "1", "metadata": {}, "hash": "cb9ebfc0103cbf9504d1e5b7d919f442f4a8c32298ec4ab11601e7cc684b0252", "class_name": "RelatedNodeInfo"}}, "text": "The answer is 2.36ten \u00d7 102, o\ufb00 by 1 in the last digit from the sum", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfcc835b-341b-4ae5-a515-f238269e0d38": {"__data__": {"id_": "bfcc835b-341b-4ae5-a515-f238269e0d38", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "97a6d3d8-2445-43d0-a58b-ef9bb41d77ec", "node_type": "4", "metadata": {}, "hash": "cb9ebfc0103cbf9504d1e5b7d919f442f4a8c32298ec4ab11601e7cc684b0252", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d603fbad-680c-409b-aa2b-6753e11e62fa", "node_type": "1", "metadata": {}, "hash": "e3cb319385073f430184984a62ba608572cdf9d502f9b7030db9b8ee97e8dee1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f2651c55-4ecf-48b2-8151-7d453c46a9f5", "node_type": "1", "metadata": {}, "hash": "8f04fa168fec9dd7ea4e5f012f7f24a95d9051121d0b7dfd18e0bdb0cde83e14", "class_name": "RelatedNodeInfo"}}, "text": "Since the worst case for rounding would be when the actual number is halfway between two \ufb02oating-point representations, accuracy in \ufb02oating point is normally measured in terms of the number of bits in error in the least signi\ufb01cant bits of the signi\ufb01cand; the measure is called the number of units in the last place, or ulp. If", "start_char_idx": 0, "end_char_idx": 326, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2651c55-4ecf-48b2-8151-7d453c46a9f5": {"__data__": {"id_": "f2651c55-4ecf-48b2-8151-7d453c46a9f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "56c02c0f-1778-480b-9c1b-e0f5632c1467", "node_type": "4", "metadata": {}, "hash": "8f04fa168fec9dd7ea4e5f012f7f24a95d9051121d0b7dfd18e0bdb0cde83e14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfcc835b-341b-4ae5-a515-f238269e0d38", "node_type": "1", "metadata": {}, "hash": "cb9ebfc0103cbf9504d1e5b7d919f442f4a8c32298ec4ab11601e7cc684b0252", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2a827f5-3c16-4314-a1d5-95d00cfbc94a", "node_type": "1", "metadata": {}, "hash": "c8c9303e503dee39baef179d264e1cefd3bdffe83c7e877cfedec66e819714e9", "class_name": "RelatedNodeInfo"}}, "text": "a number were o\ufb00 by 2 in the least signi\ufb01cant bits, it would be called o\ufb00 by 2 ulps. Provided there is no over\ufb02ow, under\ufb02ow, or invalid operation exceptions, IEEE 754 guarantees that the computer uses the number that is within one-half ulp.", "start_char_idx": 0, "end_char_idx": 240, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2a827f5-3c16-4314-a1d5-95d00cfbc94a": {"__data__": {"id_": "e2a827f5-3c16-4314-a1d5-95d00cfbc94a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94ab26cc-31b4-4703-8bb1-a9ff48adf765", "node_type": "4", "metadata": {}, "hash": "c8c9303e503dee39baef179d264e1cefd3bdffe83c7e877cfedec66e819714e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f2651c55-4ecf-48b2-8151-7d453c46a9f5", "node_type": "1", "metadata": {}, "hash": "8f04fa168fec9dd7ea4e5f012f7f24a95d9051121d0b7dfd18e0bdb0cde83e14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7fc99eee-2778-48d2-a221-443827ec0c1c", "node_type": "1", "metadata": {}, "hash": "4a07332a07947aedaab1e9bf54c85f8ece3108c285c24d8715e22876ed55a79f", "class_name": "RelatedNodeInfo"}}, "text": "units in the last place (ulp) The number of bits in error in the least signi\ufb01cant bits of the signi\ufb01cand between the actual number and the number that can be represented.", "start_char_idx": 0, "end_char_idx": 170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fc99eee-2778-48d2-a221-443827ec0c1c": {"__data__": {"id_": "7fc99eee-2778-48d2-a221-443827ec0c1c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44dbb68a-4232-479c-9c90-5bcc146ae8cb", "node_type": "4", "metadata": {}, "hash": "4a07332a07947aedaab1e9bf54c85f8ece3108c285c24d8715e22876ed55a79f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2a827f5-3c16-4314-a1d5-95d00cfbc94a", "node_type": "1", "metadata": {}, "hash": "c8c9303e503dee39baef179d264e1cefd3bdffe83c7e877cfedec66e819714e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "951a41fb-c1ba-45e5-9fea-6c25c07672e9", "node_type": "1", "metadata": {}, "hash": "9e9e2e762b607206c751f1a8960f94022e2e724061097e51e242c5f0136e3c0f", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration Although the example above really needed just one extra digit, multiply can need two. A binary product may have one leading 0 bit; hence, the normalizing step must shift the product one bit left. This shifts the guard digit into the least signi\ufb01cant bit of the product, leaving the round bit to help accurately round the product. IEEE 754 has four rounding modes: always round up (toward + \u221e), always round down (toward \u2212 \u221e), truncate, and round to nearest even. The \ufb01nal mode determines what to do if the number is exactly halfway in between. The U.S. Internal Revenue Service (IRS) always rounds 0.50 dollars up, possibly to the bene\ufb01t of the IRS. A more equitable way would be to round up this case half the time and round down the other half. IEEE 754 says that if the least signi\ufb01cant bit retained in a halfway case would be odd, add one; if it\u2019s even, truncate. This method always creates a 0 in the least signi\ufb01cant bit in the tie-breaking case, giving the rounding mode its name. This mode is the most commonly used, and the only one that Java supports.", "start_char_idx": 0, "end_char_idx": 1073, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "951a41fb-c1ba-45e5-9fea-6c25c07672e9": {"__data__": {"id_": "951a41fb-c1ba-45e5-9fea-6c25c07672e9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "17e166fe-3d78-4e63-8ace-62f7ea196306", "node_type": "4", "metadata": {}, "hash": "9e9e2e762b607206c751f1a8960f94022e2e724061097e51e242c5f0136e3c0f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fc99eee-2778-48d2-a221-443827ec0c1c", "node_type": "1", "metadata": {}, "hash": "4a07332a07947aedaab1e9bf54c85f8ece3108c285c24d8715e22876ed55a79f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fdba8959-5438-4634-906e-cd2407811141", "node_type": "1", "metadata": {}, "hash": "85a05d6d1413f8b9382319ab13db031667878e9a0d38d2625fbe8563f09f641c", "class_name": "RelatedNodeInfo"}}, "text": "The goal of the extra rounding bits is to allow the computer to get", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdba8959-5438-4634-906e-cd2407811141": {"__data__": {"id_": "fdba8959-5438-4634-906e-cd2407811141", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "31cc59a6-d440-495d-b8e5-fb5fe20df523", "node_type": "4", "metadata": {}, "hash": "85a05d6d1413f8b9382319ab13db031667878e9a0d38d2625fbe8563f09f641c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "951a41fb-c1ba-45e5-9fea-6c25c07672e9", "node_type": "1", "metadata": {}, "hash": "9e9e2e762b607206c751f1a8960f94022e2e724061097e51e242c5f0136e3c0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13c40034-ccbd-4c30-8a91-208a798d46da", "node_type": "1", "metadata": {}, "hash": "231a450b0e6970def9d6d150cd494db2422352368bf6ee2123dda876cfa6b51f", "class_name": "RelatedNodeInfo"}}, "text": "the same results as if the intermediate results were calculated to in\ufb01nite precision and then rounded. To support this goal and round to the nearest even, the standard has a third bit in addition to guard and round; it is set whenever there are nonzero bits to the right of", "start_char_idx": 0, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13c40034-ccbd-4c30-8a91-208a798d46da": {"__data__": {"id_": "13c40034-ccbd-4c30-8a91-208a798d46da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "27c2e3ad-19a6-4f9f-9a4f-816d91a24bf1", "node_type": "4", "metadata": {}, "hash": "231a450b0e6970def9d6d150cd494db2422352368bf6ee2123dda876cfa6b51f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fdba8959-5438-4634-906e-cd2407811141", "node_type": "1", "metadata": {}, "hash": "85a05d6d1413f8b9382319ab13db031667878e9a0d38d2625fbe8563f09f641c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50b7b47e-4819-4a8e-ac58-b04a77ffedbc", "node_type": "1", "metadata": {}, "hash": "f67dd9ab125dbea94f1164f9cdc7b194a8ba5c000f084017a67723eb2cd24f33", "class_name": "RelatedNodeInfo"}}, "text": "the round bit. This sticky bit allows the computer to see the di\ufb00erence between 0.50 \u2026 00 ten and 0.50 \u2026 01ten when rounding.", "start_char_idx": 0, "end_char_idx": 125, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50b7b47e-4819-4a8e-ac58-b04a77ffedbc": {"__data__": {"id_": "50b7b47e-4819-4a8e-ac58-b04a77ffedbc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "55c94261-84d3-460d-87ad-b255514ddc1b", "node_type": "4", "metadata": {}, "hash": "f67dd9ab125dbea94f1164f9cdc7b194a8ba5c000f084017a67723eb2cd24f33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13c40034-ccbd-4c30-8a91-208a798d46da", "node_type": "1", "metadata": {}, "hash": "231a450b0e6970def9d6d150cd494db2422352368bf6ee2123dda876cfa6b51f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70991ff5-a905-4798-bc35-9be5a8e0961b", "node_type": "1", "metadata": {}, "hash": "aa57729c2e06da2484bdccaa8b042efbfe42b04b1164705cd82321ff762acc7d", "class_name": "RelatedNodeInfo"}}, "text": "sticky bit A bit used in rounding in addition to guard and round that is set whenever there are nonzero bits to the right of the round bit.", "start_char_idx": 0, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70991ff5-a905-4798-bc35-9be5a8e0961b": {"__data__": {"id_": "70991ff5-a905-4798-bc35-9be5a8e0961b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4e68e59-9445-4d02-bcd3-0bd77d42d2ed", "node_type": "4", "metadata": {}, "hash": "aa57729c2e06da2484bdccaa8b042efbfe42b04b1164705cd82321ff762acc7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50b7b47e-4819-4a8e-ac58-b04a77ffedbc", "node_type": "1", "metadata": {}, "hash": "f67dd9ab125dbea94f1164f9cdc7b194a8ba5c000f084017a67723eb2cd24f33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b9da6a29-d930-4922-8e90-5f986f42bc5c", "node_type": "1", "metadata": {}, "hash": "6b03262a689a2268d9a911ddfd039aeb0515829198fcd0db60d777897552958a", "class_name": "RelatedNodeInfo"}}, "text": "The sticky bit may be set, for example, during addition, when the", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9da6a29-d930-4922-8e90-5f986f42bc5c": {"__data__": {"id_": "b9da6a29-d930-4922-8e90-5f986f42bc5c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33c7f173-e7ba-4edb-822a-a5b3f7bd8aad", "node_type": "4", "metadata": {}, "hash": "6b03262a689a2268d9a911ddfd039aeb0515829198fcd0db60d777897552958a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70991ff5-a905-4798-bc35-9be5a8e0961b", "node_type": "1", "metadata": {}, "hash": "aa57729c2e06da2484bdccaa8b042efbfe42b04b1164705cd82321ff762acc7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d50cc086-71d1-482a-9783-eb339f53d488", "node_type": "1", "metadata": {}, "hash": "01347a5c734743d627103ad5330a635aaa860cdc76da8cf01d13b04bf2ab8b6d", "class_name": "RelatedNodeInfo"}}, "text": "smaller number is shifted to the right. Suppose we added 5.01ten \u00d7 \u22121 to 2.34ten \u00d7 102 in the example above. Even with guard and 10 round, we would be adding 0.0050 to 2.34, with a sum of 2.3450. The sticky bit would be set, since there are nonzero bits to the right. Without the sticky bit to remember whether any 1s were shifted o\ufb00, we would assume the number is equal to 2.345000 \u2026 00 and round to the nearest even of 2.34. With the sticky bit to remember that the number is larger than 2.345000 \u2026 00, we round instead to 2.35.", "start_char_idx": 0, "end_char_idx": 530, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d50cc086-71d1-482a-9783-eb339f53d488": {"__data__": {"id_": "d50cc086-71d1-482a-9783-eb339f53d488", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bf0032c3-68a4-447d-baaf-e295bc8e9913", "node_type": "4", "metadata": {}, "hash": "01347a5c734743d627103ad5330a635aaa860cdc76da8cf01d13b04bf2ab8b6d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b9da6a29-d930-4922-8e90-5f986f42bc5c", "node_type": "1", "metadata": {}, "hash": "6b03262a689a2268d9a911ddfd039aeb0515829198fcd0db60d777897552958a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca40220c-14ba-4f8c-adf1-f81e6f2a16fd", "node_type": "1", "metadata": {}, "hash": "023794cfbddddd618101bce8ba0a92c1507981596c457eeea85c2e00baf4294f", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration PowerPC, AMD SSE5, and Intel AVX architectures provide a single instruction that does a multiply and add on three registers: a = a + (b \u00d7 c). Obviously, this instruction allows potentially higher \ufb02oating- point performance for this common operation. Equally important is that instead of performing two roundings\u2014after the multiply and then after the add\u2014which would happen with separate instructions, the multiply add instruction can perform a single rounding after the add. A single rounding step increases the precision of multiply add. Such operations with a singlerounding are called fused multiply", "start_char_idx": 0, "end_char_idx": 614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca40220c-14ba-4f8c-adf1-f81e6f2a16fd": {"__data__": {"id_": "ca40220c-14ba-4f8c-adf1-f81e6f2a16fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8897100b-b214-452a-8c44-b6572aeedaf0", "node_type": "4", "metadata": {}, "hash": "023794cfbddddd618101bce8ba0a92c1507981596c457eeea85c2e00baf4294f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d50cc086-71d1-482a-9783-eb339f53d488", "node_type": "1", "metadata": {}, "hash": "01347a5c734743d627103ad5330a635aaa860cdc76da8cf01d13b04bf2ab8b6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bea5be73-6d9f-4ab8-adf6-afaa121f86f5", "node_type": "1", "metadata": {}, "hash": "61035456bb46bab586b5e6c39b6c8f352ebe6c5c308a655defa8eb5f670fce9c", "class_name": "RelatedNodeInfo"}}, "text": "add. It was added to the IEEE 754-2008 standard (see 3.11).", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bea5be73-6d9f-4ab8-adf6-afaa121f86f5": {"__data__": {"id_": "bea5be73-6d9f-4ab8-adf6-afaa121f86f5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "defd85b9-80e4-4482-b1d9-ebff4c63d241", "node_type": "4", "metadata": {}, "hash": "61035456bb46bab586b5e6c39b6c8f352ebe6c5c308a655defa8eb5f670fce9c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca40220c-14ba-4f8c-adf1-f81e6f2a16fd", "node_type": "1", "metadata": {}, "hash": "023794cfbddddd618101bce8ba0a92c1507981596c457eeea85c2e00baf4294f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ee34344-703f-456b-8343-f8a23e32ae43", "node_type": "1", "metadata": {}, "hash": "06a7340bd20550e316105b65ca1ba21ab76f3afa518930136e00c1148f337128", "class_name": "RelatedNodeInfo"}}, "text": "fused multiply add A \ufb02oating-point instruction that performs both a multiply and an add, but rounds only once after the add.", "start_char_idx": 0, "end_char_idx": 124, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ee34344-703f-456b-8343-f8a23e32ae43": {"__data__": {"id_": "5ee34344-703f-456b-8343-f8a23e32ae43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "40017cca-771f-4289-b42a-07468d63edd1", "node_type": "4", "metadata": {}, "hash": "06a7340bd20550e316105b65ca1ba21ab76f3afa518930136e00c1148f337128", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bea5be73-6d9f-4ab8-adf6-afaa121f86f5", "node_type": "1", "metadata": {}, "hash": "61035456bb46bab586b5e6c39b6c8f352ebe6c5c308a655defa8eb5f670fce9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d54a7471-95c1-4dfd-8a0e-4a88b50964ac", "node_type": "1", "metadata": {}, "hash": "b5868d3a0a8458f6897687714f1ed4f5fd25f9530bb2043214ed0c009afaac23", "class_name": "RelatedNodeInfo"}}, "text": "Summary The Big Picture that follows reinforces the stored-program concept from Chapter 2; the meaning of the information cannot be determined just by looking at the bits, for the same bits can represent a variety of objects. This section shows that computer arithmetic is \ufb01nite and thus can disagree with natural arithmetic. For example, the IEEE 754 standard \ufb02oating-point representation", "start_char_idx": 0, "end_char_idx": 389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d54a7471-95c1-4dfd-8a0e-4a88b50964ac": {"__data__": {"id_": "d54a7471-95c1-4dfd-8a0e-4a88b50964ac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8299290e-0f22-4b01-b84d-f025c058711b", "node_type": "4", "metadata": {}, "hash": "b5868d3a0a8458f6897687714f1ed4f5fd25f9530bb2043214ed0c009afaac23", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ee34344-703f-456b-8343-f8a23e32ae43", "node_type": "1", "metadata": {}, "hash": "06a7340bd20550e316105b65ca1ba21ab76f3afa518930136e00c1148f337128", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "077d3a30-0c11-47ac-80f8-245ebccc2896", "node_type": "1", "metadata": {}, "hash": "5348ec9b9409a9075196754cb48da18595812a96daaeedc004e95a7f71e27756", "class_name": "RelatedNodeInfo"}}, "text": "is almost always an approximation of the real number. Computer systems must take care to minimize this gap between computer arithmetic and arithmetic in the real world, and programmers at times need to be aware of the implications of this approximation.", "start_char_idx": 0, "end_char_idx": 253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "077d3a30-0c11-47ac-80f8-245ebccc2896": {"__data__": {"id_": "077d3a30-0c11-47ac-80f8-245ebccc2896", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "af2270a5-3eea-4595-b046-37c8ccb64f81", "node_type": "4", "metadata": {}, "hash": "5348ec9b9409a9075196754cb48da18595812a96daaeedc004e95a7f71e27756", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d54a7471-95c1-4dfd-8a0e-4a88b50964ac", "node_type": "1", "metadata": {}, "hash": "b5868d3a0a8458f6897687714f1ed4f5fd25f9530bb2043214ed0c009afaac23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1535f90e-a377-4542-bae2-c0576a255117", "node_type": "1", "metadata": {}, "hash": "f09ff3f517638361f34bb5e6432c96fd5d3aa1ba8b3a7cb689a004569de7ec0e", "class_name": "RelatedNodeInfo"}}, "text": "The BIG Picture Bit pa\u0000erns have no inherent meaning. They may represent signed integers, unsigned integers, \ufb02oating-point numbers, instructions, and so on. What is represented depends on the instruction that operates on the bits in the word.", "start_char_idx": 0, "end_char_idx": 242, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1535f90e-a377-4542-bae2-c0576a255117": {"__data__": {"id_": "1535f90e-a377-4542-bae2-c0576a255117", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d18d07a6-8fc5-4416-bfbe-b572a2534f37", "node_type": "4", "metadata": {}, "hash": "f09ff3f517638361f34bb5e6432c96fd5d3aa1ba8b3a7cb689a004569de7ec0e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "077d3a30-0c11-47ac-80f8-245ebccc2896", "node_type": "1", "metadata": {}, "hash": "5348ec9b9409a9075196754cb48da18595812a96daaeedc004e95a7f71e27756", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c900a411-98d6-4ae0-8357-cc8a7d1b135c", "node_type": "1", "metadata": {}, "hash": "518d4608f16209169a668207eebc800b47fd904a2ed0313bde560e5ecc36488b", "class_name": "RelatedNodeInfo"}}, "text": "the real world is that computer numbers have limited size and hence limited precision; it\u2019s possible to calculate a number too big or too small to be represented in a word. Programmers must remember these limits and write programs accordingly.", "start_char_idx": 0, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c900a411-98d6-4ae0-8357-cc8a7d1b135c": {"__data__": {"id_": "c900a411-98d6-4ae0-8357-cc8a7d1b135c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3cde3871-5dda-4f27-8e97-e2d96199e0f4", "node_type": "4", "metadata": {}, "hash": "518d4608f16209169a668207eebc800b47fd904a2ed0313bde560e5ecc36488b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1535f90e-a377-4542-bae2-c0576a255117", "node_type": "1", "metadata": {}, "hash": "f09ff3f517638361f34bb5e6432c96fd5d3aa1ba8b3a7cb689a004569de7ec0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e97ebac9-2349-4e6b-ae38-50a97d516fe3", "node_type": "1", "metadata": {}, "hash": "e8df1a202d2d72589ffe86b33360458e1a1c6910286f42cb0efb0d49efed5c2d", "class_name": "RelatedNodeInfo"}}, "text": "Data transfers lw, sw, lui lw, sw, lui lb, sb, lui lh, sh, lui lwc1, swc1", "start_char_idx": 0, "end_char_idx": 73, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e97ebac9-2349-4e6b-ae38-50a97d516fe3": {"__data__": {"id_": "e97ebac9-2349-4e6b-ae38-50a97d516fe3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2a1e30fa-3d59-4a6e-b109-abe4921867a4", "node_type": "4", "metadata": {}, "hash": "e8df1a202d2d72589ffe86b33360458e1a1c6910286f42cb0efb0d49efed5c2d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c900a411-98d6-4ae0-8357-cc8a7d1b135c", "node_type": "1", "metadata": {}, "hash": "518d4608f16209169a668207eebc800b47fd904a2ed0313bde560e5ecc36488b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8998c02f-c0fe-4672-b89c-2a577bcf0177", "node_type": "1", "metadata": {}, "hash": "e050397411d3a386c6a0aed8d552919979013b9b5c81b09b5876be89dac6986c", "class_name": "RelatedNodeInfo"}}, "text": "Hardware/ Software Interface In the last chapter, we presented the storage classes of the programming language C (see the Hardware/Software Interface section in Section 2.7). The table above shows some of the C and Java data types, the MIPS data transfer instructions, and instructions that operate on those types that appear in Chapter 2 and this chapter. Note that Java omits unsigned integers.", "start_char_idx": 0, "end_char_idx": 396, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8998c02f-c0fe-4672-b89c-2a577bcf0177": {"__data__": {"id_": "8998c02f-c0fe-4672-b89c-2a577bcf0177", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "daf8fb84-7c65-40df-a461-067dfe111d83", "node_type": "4", "metadata": {}, "hash": "e050397411d3a386c6a0aed8d552919979013b9b5c81b09b5876be89dac6986c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e97ebac9-2349-4e6b-ae38-50a97d516fe3", "node_type": "1", "metadata": {}, "hash": "e8df1a202d2d72589ffe86b33360458e1a1c6910286f42cb0efb0d49efed5c2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c33818e-932d-437e-a2ce-23c7c424a3ce", "node_type": "1", "metadata": {}, "hash": "a2314a4b24d884def4acec82ce92112f07333f3039a95c6b73abf43a3e360507", "class_name": "RelatedNodeInfo"}}, "text": "Check Yourself The revised IEEE 754-2008 standard added a 16-bit \ufb02oating-point format with \ufb01ve exponent bits. What do you think is the likely range of numbers it could represent?", "start_char_idx": 0, "end_char_idx": 178, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c33818e-932d-437e-a2ce-23c7c424a3ce": {"__data__": {"id_": "6c33818e-932d-437e-a2ce-23c7c424a3ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "06898521-40cf-4185-bdfa-72eda63ea660", "node_type": "4", "metadata": {}, "hash": "a2314a4b24d884def4acec82ce92112f07333f3039a95c6b73abf43a3e360507", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8998c02f-c0fe-4672-b89c-2a577bcf0177", "node_type": "1", "metadata": {}, "hash": "e050397411d3a386c6a0aed8d552919979013b9b5c81b09b5876be89dac6986c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63a107d2-8ab0-47a9-a199-139b66242e02", "node_type": "1", "metadata": {}, "hash": "579b3dc68ca7961a1c654caa020aed14dac50600b93f0965882002a39382b755", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration To accommodate comparisons that may include NaNs, the standard includes ordered and unordered as options for compares. Hence, the", "start_char_idx": 0, "end_char_idx": 141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63a107d2-8ab0-47a9-a199-139b66242e02": {"__data__": {"id_": "63a107d2-8ab0-47a9-a199-139b66242e02", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f06e7d4-ea72-4823-baf0-bda81672210e", "node_type": "4", "metadata": {}, "hash": "579b3dc68ca7961a1c654caa020aed14dac50600b93f0965882002a39382b755", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c33818e-932d-437e-a2ce-23c7c424a3ce", "node_type": "1", "metadata": {}, "hash": "a2314a4b24d884def4acec82ce92112f07333f3039a95c6b73abf43a3e360507", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1a6f5fdd-b26f-49c0-b027-5f57e7a57719", "node_type": "1", "metadata": {}, "hash": "35534ec1b746adaf4fff2b68b9e66d713b6bbefba9ab3eca98d3fb2a1f643288", "class_name": "RelatedNodeInfo"}}, "text": "full MIPS instruction set has many \ufb02avors of compares to support NaNs. (Java does not support unordered compares.)", "start_char_idx": 0, "end_char_idx": 114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a6f5fdd-b26f-49c0-b027-5f57e7a57719": {"__data__": {"id_": "1a6f5fdd-b26f-49c0-b027-5f57e7a57719", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb5c3faf-ee86-469e-93c9-82115f2f8ddb", "node_type": "4", "metadata": {}, "hash": "35534ec1b746adaf4fff2b68b9e66d713b6bbefba9ab3eca98d3fb2a1f643288", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63a107d2-8ab0-47a9-a199-139b66242e02", "node_type": "1", "metadata": {}, "hash": "579b3dc68ca7961a1c654caa020aed14dac50600b93f0965882002a39382b755", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "daa0aea6-07ae-4411-9c87-d72a7e498b14", "node_type": "1", "metadata": {}, "hash": "e5cfbc218265587ebb3429319a9a486784513ab1ed00b966a93d4939b38f068f", "class_name": "RelatedNodeInfo"}}, "text": "In an a\u0000empt to squeeze every last bit of precision from a", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "daa0aea6-07ae-4411-9c87-d72a7e498b14": {"__data__": {"id_": "daa0aea6-07ae-4411-9c87-d72a7e498b14", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22c94260-7335-4bdb-8032-f52e7a9a978b", "node_type": "4", "metadata": {}, "hash": "e5cfbc218265587ebb3429319a9a486784513ab1ed00b966a93d4939b38f068f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1a6f5fdd-b26f-49c0-b027-5f57e7a57719", "node_type": "1", "metadata": {}, "hash": "35534ec1b746adaf4fff2b68b9e66d713b6bbefba9ab3eca98d3fb2a1f643288", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "126d6f58-a038-4a78-84fe-dad10f8b5bc4", "node_type": "1", "metadata": {}, "hash": "1a265dafc04f4780112657a77a0ca066e8aac8d68fa648a9835b78c46773f389", "class_name": "RelatedNodeInfo"}}, "text": "\ufb02oating-point operation, the standard allows some numbers to be represented in unnormalized form. Rather than having a gap between 0 and the smallest normalized number, IEEE allows denormalized numbers (also known as denorms or subnormals). They have the same exponent as zero but a nonzero fraction. They allow a number to degrade in signi\ufb01cance until it becomes 0, called gradual under\ufb02ow. For example, the smallest positive single precision normalized number is", "start_char_idx": 0, "end_char_idx": 464, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "126d6f58-a038-4a78-84fe-dad10f8b5bc4": {"__data__": {"id_": "126d6f58-a038-4a78-84fe-dad10f8b5bc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5332eb84-808b-4939-8a66-3b4b9db92f52", "node_type": "4", "metadata": {}, "hash": "1a265dafc04f4780112657a77a0ca066e8aac8d68fa648a9835b78c46773f389", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "daa0aea6-07ae-4411-9c87-d72a7e498b14", "node_type": "1", "metadata": {}, "hash": "e5cfbc218265587ebb3429319a9a486784513ab1ed00b966a93d4939b38f068f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27e6d2b4-113f-42d3-a892-5861e4d0cb26", "node_type": "1", "metadata": {}, "hash": "b799ce1cf28a1eb248d59d107cdaeb67284395704e328651c8e94eb03928e08a", "class_name": "RelatedNodeInfo"}}, "text": "but the smallest single precision denormalized number is", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27e6d2b4-113f-42d3-a892-5861e4d0cb26": {"__data__": {"id_": "27e6d2b4-113f-42d3-a892-5861e4d0cb26", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "055ce19d-e7d9-4e86-b9c4-a835acdfcd7a", "node_type": "4", "metadata": {}, "hash": "b799ce1cf28a1eb248d59d107cdaeb67284395704e328651c8e94eb03928e08a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "126d6f58-a038-4a78-84fe-dad10f8b5bc4", "node_type": "1", "metadata": {}, "hash": "1a265dafc04f4780112657a77a0ca066e8aac8d68fa648a9835b78c46773f389", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "30cc33fb-07f4-4864-8bba-d1dff72db97a", "node_type": "1", "metadata": {}, "hash": "36ef76ae98f013beb40de1a4662bb0a1e4b8792cfbadce082ac0372d7fb484b8", "class_name": "RelatedNodeInfo"}}, "text": "For double precision, the denorm gap goes from 1.0 \u00d7 2\u22121022 to 1.0", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "30cc33fb-07f4-4864-8bba-d1dff72db97a": {"__data__": {"id_": "30cc33fb-07f4-4864-8bba-d1dff72db97a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a139dfb8-5929-4fb8-8124-1759291c8a02", "node_type": "4", "metadata": {}, "hash": "36ef76ae98f013beb40de1a4662bb0a1e4b8792cfbadce082ac0372d7fb484b8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27e6d2b4-113f-42d3-a892-5861e4d0cb26", "node_type": "1", "metadata": {}, "hash": "b799ce1cf28a1eb248d59d107cdaeb67284395704e328651c8e94eb03928e08a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "55d23a93-e4ec-4b39-9d9b-82ebdf2a570d", "node_type": "1", "metadata": {}, "hash": "4b72a4e8855dd067a6991cb22525725c29a301298d96fff9c639f91b85d55610", "class_name": "RelatedNodeInfo"}}, "text": "The possibility of an occasional unnormalized operand has given", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "55d23a93-e4ec-4b39-9d9b-82ebdf2a570d": {"__data__": {"id_": "55d23a93-e4ec-4b39-9d9b-82ebdf2a570d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "475ee4d7-8532-49aa-bae9-48db9fa7101a", "node_type": "4", "metadata": {}, "hash": "4b72a4e8855dd067a6991cb22525725c29a301298d96fff9c639f91b85d55610", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "30cc33fb-07f4-4864-8bba-d1dff72db97a", "node_type": "1", "metadata": {}, "hash": "36ef76ae98f013beb40de1a4662bb0a1e4b8792cfbadce082ac0372d7fb484b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15f318d5-9569-413c-a383-b6fd91d12add", "node_type": "1", "metadata": {}, "hash": "9c368556534d0ad539fdd1d61b678590cfbc68f92e8143573056e25bf1129534", "class_name": "RelatedNodeInfo"}}, "text": "headaches to \ufb02oating-point designers who are trying to build fast \ufb02oating-point units. Hence, many computers cause an exception if an operand is denormalized, le\u0000ing software complete the operation. Although software implementations are perfectly valid, their lower performance has lessened the popularity of denorms in portable \ufb02oating-point software. Moreover, if programmers do not expect denorms, their programs may surprise them.", "start_char_idx": 0, "end_char_idx": 434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15f318d5-9569-413c-a383-b6fd91d12add": {"__data__": {"id_": "15f318d5-9569-413c-a383-b6fd91d12add", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "27fb7768-3ba8-4a0c-bc48-3ec402028e07", "node_type": "4", "metadata": {}, "hash": "9c368556534d0ad539fdd1d61b678590cfbc68f92e8143573056e25bf1129534", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "55d23a93-e4ec-4b39-9d9b-82ebdf2a570d", "node_type": "1", "metadata": {}, "hash": "4b72a4e8855dd067a6991cb22525725c29a301298d96fff9c639f91b85d55610", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ffed8c44-e20c-4358-8dd6-a274822e6cf5", "node_type": "1", "metadata": {}, "hash": "04fe1e140af2066f1cdc91f8ae5594caff678525b959c083eab5e72d68278354", "class_name": "RelatedNodeInfo"}}, "text": "3.6 Parallelism and Computer Arithmetic: Subword Parallelism Since every desktop microprocessor and smart phone by de\ufb01nition has its own graphical display, as transistor budgets increased it was inevitable that support would be added for graphics operations.", "start_char_idx": 0, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffed8c44-e20c-4358-8dd6-a274822e6cf5": {"__data__": {"id_": "ffed8c44-e20c-4358-8dd6-a274822e6cf5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bb684eb2-caca-4833-8fa3-47181296a47e", "node_type": "4", "metadata": {}, "hash": "04fe1e140af2066f1cdc91f8ae5594caff678525b959c083eab5e72d68278354", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15f318d5-9569-413c-a383-b6fd91d12add", "node_type": "1", "metadata": {}, "hash": "9c368556534d0ad539fdd1d61b678590cfbc68f92e8143573056e25bf1129534", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "355f9dc1-75de-4ad2-bc5f-ad0a466db1a5", "node_type": "1", "metadata": {}, "hash": "1cb9f152b3d609541ec67a0d4940a9473b9de32de8b9aacd8e2b01909a23dc24", "class_name": "RelatedNodeInfo"}}, "text": "Many graphics systems originally used 8 bits to represent each of", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "355f9dc1-75de-4ad2-bc5f-ad0a466db1a5": {"__data__": {"id_": "355f9dc1-75de-4ad2-bc5f-ad0a466db1a5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15401c01-81e6-4d27-b668-550c6d704c9d", "node_type": "4", "metadata": {}, "hash": "1cb9f152b3d609541ec67a0d4940a9473b9de32de8b9aacd8e2b01909a23dc24", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ffed8c44-e20c-4358-8dd6-a274822e6cf5", "node_type": "1", "metadata": {}, "hash": "04fe1e140af2066f1cdc91f8ae5594caff678525b959c083eab5e72d68278354", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09495c7d-0f0d-4106-8cdf-348b97ce42ed", "node_type": "1", "metadata": {}, "hash": "122f61e748ef33a9fa0648dc5ec3388c869dfb9ed84f89f17b01bb583e199e48", "class_name": "RelatedNodeInfo"}}, "text": "the three primary colors plus 8 bits for a location of a pixel. The addition of speakers and microphones for teleconferencing and video games suggested support of sound as well. Audio samples need more than 8 bits of precision, but 16 bits are su\ufb03cient.", "start_char_idx": 0, "end_char_idx": 253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09495c7d-0f0d-4106-8cdf-348b97ce42ed": {"__data__": {"id_": "09495c7d-0f0d-4106-8cdf-348b97ce42ed", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14acf40b-e252-4475-98f1-e4a70fecd8c2", "node_type": "4", "metadata": {}, "hash": "122f61e748ef33a9fa0648dc5ec3388c869dfb9ed84f89f17b01bb583e199e48", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "355f9dc1-75de-4ad2-bc5f-ad0a466db1a5", "node_type": "1", "metadata": {}, "hash": "1cb9f152b3d609541ec67a0d4940a9473b9de32de8b9aacd8e2b01909a23dc24", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69902734-dc85-4206-9bde-984202bf81a2", "node_type": "1", "metadata": {}, "hash": "1d7d16aa7871fdb8274a4034eda3ba222d8e3784049d4f0fd07afbd48878d3dc", "class_name": "RelatedNodeInfo"}}, "text": "Every microprocessor has special support so that bytes and halfwords take up less space when stored in memory (see Section 2.9), but due to the infrequency of arithmetic operations on these data sizes in typical integer programs, there was li\u0000le support beyond data transfers. Architects recognized that many graphics and audio applications would perform the same operation on vectors of this data. By partitioning the carry chains within a 128-bit adder, a processor could use parallelism to perform simultaneous operations on short vectors of sixteen 8-bit operands, eight 16-bit operands, four 32-bit operands, or two 64-bit operands. The cost of such partitioned adders was small.", "start_char_idx": 0, "end_char_idx": 684, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69902734-dc85-4206-9bde-984202bf81a2": {"__data__": {"id_": "69902734-dc85-4206-9bde-984202bf81a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb496f4a-d45f-4b02-bb24-cd8775c890a6", "node_type": "4", "metadata": {}, "hash": "1d7d16aa7871fdb8274a4034eda3ba222d8e3784049d4f0fd07afbd48878d3dc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09495c7d-0f0d-4106-8cdf-348b97ce42ed", "node_type": "1", "metadata": {}, "hash": "122f61e748ef33a9fa0648dc5ec3388c869dfb9ed84f89f17b01bb583e199e48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16367c02-e4dd-4717-8bf3-a7e9ffc5ae81", "node_type": "1", "metadata": {}, "hash": "def45507f5f05b81c98d7f9b6a02c27ce0ac093020d71d87d6dc1dfba113897a", "class_name": "RelatedNodeInfo"}}, "text": "Given that the parallelism occurs within a wide word, the", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16367c02-e4dd-4717-8bf3-a7e9ffc5ae81": {"__data__": {"id_": "16367c02-e4dd-4717-8bf3-a7e9ffc5ae81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52baed8f-5d85-440c-810b-7dfd5d67be85", "node_type": "4", "metadata": {}, "hash": "def45507f5f05b81c98d7f9b6a02c27ce0ac093020d71d87d6dc1dfba113897a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69902734-dc85-4206-9bde-984202bf81a2", "node_type": "1", "metadata": {}, "hash": "1d7d16aa7871fdb8274a4034eda3ba222d8e3784049d4f0fd07afbd48878d3dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51177885-c387-4263-afdf-84b4514ecb05", "node_type": "1", "metadata": {}, "hash": "247bfda158f8834f70f11a4245e3c92eb386daf635fc4c6fd62f7fd7324c5a7d", "class_name": "RelatedNodeInfo"}}, "text": "extensions are classi\ufb01ed as subword parallelism. It is also classi\ufb01ed under the more general name of data level parallelism. They have been also called vector or SIMD, for single instruction, multiple data (see Section 6.6). The rising popularity of multimedia applications led to arithmetic instructions that support narrower operations that can easily operate in parallel.", "start_char_idx": 0, "end_char_idx": 374, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51177885-c387-4263-afdf-84b4514ecb05": {"__data__": {"id_": "51177885-c387-4263-afdf-84b4514ecb05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f172849f-6221-42ba-b9e8-b476f208ca68", "node_type": "4", "metadata": {}, "hash": "247bfda158f8834f70f11a4245e3c92eb386daf635fc4c6fd62f7fd7324c5a7d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16367c02-e4dd-4717-8bf3-a7e9ffc5ae81", "node_type": "1", "metadata": {}, "hash": "def45507f5f05b81c98d7f9b6a02c27ce0ac093020d71d87d6dc1dfba113897a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60766178-7d53-43f7-91ce-b680500f8616", "node_type": "1", "metadata": {}, "hash": "9c73aec4d82265b9ef21bf1c72212a4c5d39c60d74e49001296aca08446e24e3", "class_name": "RelatedNodeInfo"}}, "text": "For example, ARM added more than 100 instructions in the NEON", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60766178-7d53-43f7-91ce-b680500f8616": {"__data__": {"id_": "60766178-7d53-43f7-91ce-b680500f8616", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dcff81b9-7c81-4279-bc79-cb156b778cad", "node_type": "4", "metadata": {}, "hash": "9c73aec4d82265b9ef21bf1c72212a4c5d39c60d74e49001296aca08446e24e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51177885-c387-4263-afdf-84b4514ecb05", "node_type": "1", "metadata": {}, "hash": "247bfda158f8834f70f11a4245e3c92eb386daf635fc4c6fd62f7fd7324c5a7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b2b71ca7-d150-43ba-a07e-167e4805193d", "node_type": "1", "metadata": {}, "hash": "37dd874dca978b72a6b2f061061f65be6eb390e64f91a68873528d122a9341c6", "class_name": "RelatedNodeInfo"}}, "text": "multimedia instruction extension to support subword parallelism, which can be used either with ARMv7 or ARMv8. It added 256 bytes of new registers for NEON that can be viewed as 32 registers 8 bytes wide or 16 registers 16 bytes wide. NEON supports all the subword data types you can imagine except 64-bit \ufb02oating point numbers:", "start_char_idx": 0, "end_char_idx": 328, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b2b71ca7-d150-43ba-a07e-167e4805193d": {"__data__": {"id_": "b2b71ca7-d150-43ba-a07e-167e4805193d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "adf839f2-a66a-48ad-94fd-560e0c5eb6e5", "node_type": "4", "metadata": {}, "hash": "37dd874dca978b72a6b2f061061f65be6eb390e64f91a68873528d122a9341c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60766178-7d53-43f7-91ce-b680500f8616", "node_type": "1", "metadata": {}, "hash": "9c73aec4d82265b9ef21bf1c72212a4c5d39c60d74e49001296aca08446e24e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b44b80a-5db6-44f8-b412-88b08f9cc8fb", "node_type": "1", "metadata": {}, "hash": "7ae6100bb9316d0cc93488f2fb4f939a52c1b34e381ed6d9d457335e3490ef54", "class_name": "RelatedNodeInfo"}}, "text": "\u25a0 8-bit, 16-bit, 32-bit, and 64-bit signed and unsigned integers \u25a0 32-bit \ufb02oating point numbers", "start_char_idx": 0, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b44b80a-5db6-44f8-b412-88b08f9cc8fb": {"__data__": {"id_": "5b44b80a-5db6-44f8-b412-88b08f9cc8fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed85af63-b367-4ea8-a606-a1a7c0ee2246", "node_type": "4", "metadata": {}, "hash": "7ae6100bb9316d0cc93488f2fb4f939a52c1b34e381ed6d9d457335e3490ef54", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b2b71ca7-d150-43ba-a07e-167e4805193d", "node_type": "1", "metadata": {}, "hash": "37dd874dca978b72a6b2f061061f65be6eb390e64f91a68873528d122a9341c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb7caf46-f5bd-4302-801d-0593837bb9a9", "node_type": "1", "metadata": {}, "hash": "787533bb1346d219ab6456e55885d5afe2e4f26a3fec7843809239aedcecaf4a", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.19 gives a summary of the basic NEON instructions.", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb7caf46-f5bd-4302-801d-0593837bb9a9": {"__data__": {"id_": "bb7caf46-f5bd-4302-801d-0593837bb9a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c12a641-1f35-4b76-be11-5f94ab80201c", "node_type": "4", "metadata": {}, "hash": "787533bb1346d219ab6456e55885d5afe2e4f26a3fec7843809239aedcecaf4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b44b80a-5db6-44f8-b412-88b08f9cc8fb", "node_type": "1", "metadata": {}, "hash": "7ae6100bb9316d0cc93488f2fb4f939a52c1b34e381ed6d9d457335e3490ef54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a849414b-4296-46d5-b0a3-f12b2d437ac1", "node_type": "1", "metadata": {}, "hash": "76ad8db59cccf6a963ff8ee655d9d7dcc597c05f5bdef1e712ec152d8e9c9f22", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration: In addition to signed and unsigned integers, ARM includes \u201c\ufb01xed- point\u201d format of four sizes called I8, I16, I32, and I64, of which 16, 8, 4, and 2 \ufb01t in a 128-bit register, respectively. A portion of the \ufb01xed point is for the fraction (to the right of the binary point) and the rest of the data is the integer portion (to the left of the binary point). The location of the binary point is up to the software. Many ARM processors do not have \ufb02oating point hardware and thus \ufb02oating point operations must be performed by library routines. Fixed point arithmetic can be signi\ufb01cantly faster than software \ufb02oating point routines, but more work for the programmer.", "start_char_idx": 0, "end_char_idx": 672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a849414b-4296-46d5-b0a3-f12b2d437ac1": {"__data__": {"id_": "a849414b-4296-46d5-b0a3-f12b2d437ac1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9c8640de-daa6-4664-a8b2-eb3f8356b2e3", "node_type": "4", "metadata": {}, "hash": "76ad8db59cccf6a963ff8ee655d9d7dcc597c05f5bdef1e712ec152d8e9c9f22", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bb7caf46-f5bd-4302-801d-0593837bb9a9", "node_type": "1", "metadata": {}, "hash": "787533bb1346d219ab6456e55885d5afe2e4f26a3fec7843809239aedcecaf4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11adecf3-d8a0-4a87-b447-bfa8d711ac7f", "node_type": "1", "metadata": {}, "hash": "9a20f9e625954d4d5b886829d52d84a55f026ea0a10c1a16b2ce1cf437da18b6", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.19 Summary of ARM NEON instructions for subword parallelism. We use the curly brackets {} to show optional variations of the basic operations: {S8,U8,8} stand for signed and unsigned 8-bit integers or 8-bit data where type doesn\u2019t matter, of which 16 fit in a 128-bit register; {S16,U16,16} stand for signed and unsigned 16-bit integers or 16-bit type- less data, of which 8 fit in a 128-bit register; {S32,U32,32} stand for signed and unsigned 32-bit integers or 32-bit type- less data, of which 4 fit in a 128-bit register; {S64,U64,64} stand for signed and unsigned 64-bit integers or type-less 64- bit data, of which 2 fit in a 128-bit register; {F32} stand for signed and unsigned 32-bit floating point numbers, of which 4 fit in a 128-bit register. Vector Load reads one n-element structure from memory into 1, 2, 3, or 4 NEON registers. It loads a single n-element structure to one lane (See Section 6.6), and elements of the register that are not loaded are unchanged. Vector Store writes one n-element structure into memory from 1, 2, 3, or 4 NEON registers.", "start_char_idx": 0, "end_char_idx": 1076, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11adecf3-d8a0-4a87-b447-bfa8d711ac7f": {"__data__": {"id_": "11adecf3-d8a0-4a87-b447-bfa8d711ac7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9162d2b1-2bf9-4e7f-a193-912911038565", "node_type": "4", "metadata": {}, "hash": "9a20f9e625954d4d5b886829d52d84a55f026ea0a10c1a16b2ce1cf437da18b6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a849414b-4296-46d5-b0a3-f12b2d437ac1", "node_type": "1", "metadata": {}, "hash": "76ad8db59cccf6a963ff8ee655d9d7dcc597c05f5bdef1e712ec152d8e9c9f22", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67b5705f-36c2-45e9-b021-50f9e087ac43", "node_type": "1", "metadata": {}, "hash": "a761b78e4528fae0dec5ff78edd4c1cfa20575a70d0889670b2b46ba4a758a18", "class_name": "RelatedNodeInfo"}}, "text": "3.7 Real Stuff: Streaming SIMD Extensions and Advanced Vector Extensions in x86 The original MMX (MultiMedia eXtension) and SSE (Streaming SIMD Extension) instructions for the x86 included similar operations to those found in ARM NEON. Chapter 2 notes that in 2001 Intel added 144 instructions to its architecture as part of SSE2, including double precision \ufb02oating-point registers and operations. It includes eight 64- bit registers that can be used for \ufb02oating-point operands. AMD expanded the number to 16 registers, called XMM, as part of AMD64, which Intel relabeled EM64T for its use. Figure 3.20 summarizes the SSE and SSE2 instructions.", "start_char_idx": 0, "end_char_idx": 644, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67b5705f-36c2-45e9-b021-50f9e087ac43": {"__data__": {"id_": "67b5705f-36c2-45e9-b021-50f9e087ac43", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dd0f2e6c-6efc-4f34-bc2e-6c7e1129ed69", "node_type": "4", "metadata": {}, "hash": "a761b78e4528fae0dec5ff78edd4c1cfa20575a70d0889670b2b46ba4a758a18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11adecf3-d8a0-4a87-b447-bfa8d711ac7f", "node_type": "1", "metadata": {}, "hash": "9a20f9e625954d4d5b886829d52d84a55f026ea0a10c1a16b2ce1cf437da18b6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a7dc112-baab-49e2-8e20-c5b241883e8e", "node_type": "1", "metadata": {}, "hash": "60beeeea93c0b988c4112eb4e495c57cc1d1a49d5c8637c4c8054cfe16447f77", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.20 The SSE/SSE2 floating-point instructions of the x86. xmm means one operand is a 128-bit SSE2 register, and mem/xmm means the other operand is either in memory or it is an SSE2 register. We use the curly brackets {} to show optional variations of the basic operations: {SS} stands for Scalar Single precision floating point, or one 32-bit operand in a 128-bit register; {PS} stands for Packed Single precision floating point, or four 32-bit operands in a 128-bit register; {SD} stands for Scalar Double precision floating point, or one 64-bit operand in a 128-bit register; {PD} stands for Packed Double precision floating point, or two 64-bit operands in a 128-bit register; {A} means the 128-bit operand is aligned in memory; {U} means the 128-bit operand is unaligned in memory; {H} means move the high half of the 128-bit operand; and {L} means move the low half of the 128-bit operand.", "start_char_idx": 0, "end_char_idx": 901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9a7dc112-baab-49e2-8e20-c5b241883e8e": {"__data__": {"id_": "9a7dc112-baab-49e2-8e20-c5b241883e8e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b1a39222-1c97-4942-91e8-d4eb9af405dd", "node_type": "4", "metadata": {}, "hash": "60beeeea93c0b988c4112eb4e495c57cc1d1a49d5c8637c4c8054cfe16447f77", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67b5705f-36c2-45e9-b021-50f9e087ac43", "node_type": "1", "metadata": {}, "hash": "a761b78e4528fae0dec5ff78edd4c1cfa20575a70d0889670b2b46ba4a758a18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "492ded27-dcfe-441b-b5c9-8872ae226418", "node_type": "1", "metadata": {}, "hash": "55acfcec7e23f1fc395768772c9b514f8ef97ea8e5f0ef92d57d11e01a6ce9aa", "class_name": "RelatedNodeInfo"}}, "text": "In addition to holding a single precision or double precision", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "492ded27-dcfe-441b-b5c9-8872ae226418": {"__data__": {"id_": "492ded27-dcfe-441b-b5c9-8872ae226418", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "99562c16-88ae-487d-a665-edee7d56b1a0", "node_type": "4", "metadata": {}, "hash": "55acfcec7e23f1fc395768772c9b514f8ef97ea8e5f0ef92d57d11e01a6ce9aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a7dc112-baab-49e2-8e20-c5b241883e8e", "node_type": "1", "metadata": {}, "hash": "60beeeea93c0b988c4112eb4e495c57cc1d1a49d5c8637c4c8054cfe16447f77", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e480fc7-d6e7-412f-be42-1290a42bdd9e", "node_type": "1", "metadata": {}, "hash": "623f70ae85841c522e0a0e76b278778428f109acbd38f90295be2385cf0d4677", "class_name": "RelatedNodeInfo"}}, "text": "number in a register, Intel allows multiple \ufb02oating-point operands to be packed into a single 128-bit SSE2 register: four single precision or two double precision. Thus, the 16 \ufb02oating-point registers for SSE2 are actually 128 bits wide. If the operands can be arranged in memory as 128-bit aligned data, then 128-bit data transfers can load and store multiple operands per instruction. This packed \ufb02oating- point format is supported by arithmetic operations that can operate simultaneously on four singles (PS) or two doubles (PD).", "start_char_idx": 0, "end_char_idx": 532, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e480fc7-d6e7-412f-be42-1290a42bdd9e": {"__data__": {"id_": "9e480fc7-d6e7-412f-be42-1290a42bdd9e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "91df2fac-537f-4c95-a1fb-aebf75441c5e", "node_type": "4", "metadata": {}, "hash": "623f70ae85841c522e0a0e76b278778428f109acbd38f90295be2385cf0d4677", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "492ded27-dcfe-441b-b5c9-8872ae226418", "node_type": "1", "metadata": {}, "hash": "55acfcec7e23f1fc395768772c9b514f8ef97ea8e5f0ef92d57d11e01a6ce9aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "003cab41-2f43-45e1-97d4-7d395e7956a2", "node_type": "1", "metadata": {}, "hash": "6c7d315c74dbb519f9d072d0a5c9515150700d422469975a761f54a2d019fdd3", "class_name": "RelatedNodeInfo"}}, "text": "In 2011 Intel doubled the width of the registers again, now called", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "003cab41-2f43-45e1-97d4-7d395e7956a2": {"__data__": {"id_": "003cab41-2f43-45e1-97d4-7d395e7956a2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e307dffd-052c-4a2e-8afe-91ef431b044b", "node_type": "4", "metadata": {}, "hash": "6c7d315c74dbb519f9d072d0a5c9515150700d422469975a761f54a2d019fdd3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e480fc7-d6e7-412f-be42-1290a42bdd9e", "node_type": "1", "metadata": {}, "hash": "623f70ae85841c522e0a0e76b278778428f109acbd38f90295be2385cf0d4677", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "63eece61-848a-472e-afc6-d6f2bd730ff4", "node_type": "1", "metadata": {}, "hash": "1683a167891c29bb1265a4841d8974144cfdce52088855432e88a3f4f6bb2e97", "class_name": "RelatedNodeInfo"}}, "text": "YMM, with Advanced Vector Extensions (AVX). Thus, a single operation can now specify eight 32-bit \ufb02oating-point operations or four 64-bit \ufb02oating-point operations. The legacy SSE and SSE2 instructions now operate on the lower 128 bits of the YMM registers. Thus, to go from 128-bit and 256-bit operations, you prepend the", "start_char_idx": 0, "end_char_idx": 321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63eece61-848a-472e-afc6-d6f2bd730ff4": {"__data__": {"id_": "63eece61-848a-472e-afc6-d6f2bd730ff4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b3f7b9f8-7528-4cf0-bf3c-a1d85a74ca5d", "node_type": "4", "metadata": {}, "hash": "1683a167891c29bb1265a4841d8974144cfdce52088855432e88a3f4f6bb2e97", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "003cab41-2f43-45e1-97d4-7d395e7956a2", "node_type": "1", "metadata": {}, "hash": "6c7d315c74dbb519f9d072d0a5c9515150700d422469975a761f54a2d019fdd3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dfa6f80-3505-444e-89ec-e36710270e0e", "node_type": "1", "metadata": {}, "hash": "d7911fa3c09957fe1c200a9c7c789fd5c5acf60bbd9d1676062127146d631e73", "class_name": "RelatedNodeInfo"}}, "text": "le\u0000er \u201cv\u201d (for vector) in front of the SSE2 assembly language operations and then use the YMM register names instead of the XMM register name. For example, the SSE2 instruction to perform two 64-bit \ufb02oating-point additions addpd %xmm0, %xmm4", "start_char_idx": 0, "end_char_idx": 241, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dfa6f80-3505-444e-89ec-e36710270e0e": {"__data__": {"id_": "5dfa6f80-3505-444e-89ec-e36710270e0e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fefa5c2d-bbb1-426c-8b77-075fdf0c564f", "node_type": "4", "metadata": {}, "hash": "d7911fa3c09957fe1c200a9c7c789fd5c5acf60bbd9d1676062127146d631e73", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "63eece61-848a-472e-afc6-d6f2bd730ff4", "node_type": "1", "metadata": {}, "hash": "1683a167891c29bb1265a4841d8974144cfdce52088855432e88a3f4f6bb2e97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b", "node_type": "1", "metadata": {}, "hash": "d321a100f10b92325718098d4e09b96e9161f42068197137a5a520101b8d2a16", "class_name": "RelatedNodeInfo"}}, "text": "It becomes", "start_char_idx": 0, "end_char_idx": 10, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b": {"__data__": {"id_": "8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4d13a23c-0e2e-4381-9aca-a31931129ca0", "node_type": "4", "metadata": {}, "hash": "d321a100f10b92325718098d4e09b96e9161f42068197137a5a520101b8d2a16", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dfa6f80-3505-444e-89ec-e36710270e0e", "node_type": "1", "metadata": {}, "hash": "d7911fa3c09957fe1c200a9c7c789fd5c5acf60bbd9d1676062127146d631e73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad44bece-21ba-4cef-b588-bd70b3259bcd", "node_type": "1", "metadata": {}, "hash": "7e393b9aa7aab46f3dda62b784133f2d7485f222c35a89421d59004cf373ecd7", "class_name": "RelatedNodeInfo"}}, "text": "which now produces four 64-bit \ufb02oating-point multiplies.In 2015, Intel doubled the registers again to 512 bits, now called ZMM, with AVX512 in some of its microprocessors.", "start_char_idx": 0, "end_char_idx": 171, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad44bece-21ba-4cef-b588-bd70b3259bcd": {"__data__": {"id_": "ad44bece-21ba-4cef-b588-bd70b3259bcd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f6d9a0e-2a1b-4ea9-9800-189e385cbc2d", "node_type": "4", "metadata": {}, "hash": "7e393b9aa7aab46f3dda62b784133f2d7485f222c35a89421d59004cf373ecd7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b", "node_type": "1", "metadata": {}, "hash": "d321a100f10b92325718098d4e09b96e9161f42068197137a5a520101b8d2a16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5ff816b-f2c3-49ef-a933-f99acb8b9cc4", "node_type": "1", "metadata": {}, "hash": "47230ceea05bdecf9d2fae1b17d3c0c72273b319e48b591ef23dee10ee4a06cb", "class_name": "RelatedNodeInfo"}}, "text": "Elaboration AVX also added three address instructions to x86. For example, vaddpd can now specify vaddpd %ymm0, %ymm1, %ymm4 # %ymm4 = %ymm0 + %ymm1", "start_char_idx": 0, "end_char_idx": 148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5ff816b-f2c3-49ef-a933-f99acb8b9cc4": {"__data__": {"id_": "d5ff816b-f2c3-49ef-a933-f99acb8b9cc4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a11eee9d-33cf-4d8e-98a4-b17759657dad", "node_type": "4", "metadata": {}, "hash": "47230ceea05bdecf9d2fae1b17d3c0c72273b319e48b591ef23dee10ee4a06cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad44bece-21ba-4cef-b588-bd70b3259bcd", "node_type": "1", "metadata": {}, "hash": "7e393b9aa7aab46f3dda62b784133f2d7485f222c35a89421d59004cf373ecd7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bae30238-6707-46bc-b7a3-980299b7f85f", "node_type": "1", "metadata": {}, "hash": "b374db73e62048be2861235aad36159730c81daea68895bb726fbb21a3a24377", "class_name": "RelatedNodeInfo"}}, "text": "(Unlike MIPS, the destination is on the right in x86.) Three addresses can reduce the number of registers and instructions needed for a computation.", "start_char_idx": 0, "end_char_idx": 148, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bae30238-6707-46bc-b7a3-980299b7f85f": {"__data__": {"id_": "bae30238-6707-46bc-b7a3-980299b7f85f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf5026f9-8b02-42da-9bfe-15316f766b23", "node_type": "4", "metadata": {}, "hash": "b374db73e62048be2861235aad36159730c81daea68895bb726fbb21a3a24377", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5ff816b-f2c3-49ef-a933-f99acb8b9cc4", "node_type": "1", "metadata": {}, "hash": "47230ceea05bdecf9d2fae1b17d3c0c72273b319e48b591ef23dee10ee4a06cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d70c9dae-5589-4d8d-b3a7-46d631ba8ae4", "node_type": "1", "metadata": {}, "hash": "fd341806296872dd5deb59a8f88d89c5ecb4340b0afc4d55a074f288469ca761", "class_name": "RelatedNodeInfo"}}, "text": "3.8 Going Faster: Subword Parallelism and Matrix Multiply Recall that Figure 2.43 on page 166 shows an unoptimized version of DGEMM in C. To demonstrate the performance impact of subword parallelism, we rerun the code using AVX. While compiler writers may eventually be able to routinely produce high-quality code that uses the AVX instructions of the x86, for now we must \u201ccheat\u201d by using C intrinsics that more or less tell the compiler exactly how to produce good code. Figure 3.21 shows the enhanced version of Figure 2.43.The declaration on line 7 of Figure 3.21 uses the __m512d data type, which tells the compiler the variable will hold 8 double- precision \ufb02oating-point values (8 \u00d7 64 bits = 512 bits). The intrinsic _mm512_load_pd() also on line 7 uses AVX instructions to load 8 double-precision \ufb02oating-point numbers in parallel (_pd) from the matrix C into c0. The address calculation C+i+j*n represents element C[i+j*n]. Symmetrically, the \ufb01nal step on line 13 uses the intrinsic _mm256_store_pd() to store 8 double-precision \ufb02oating-point numbers from c0 into the matrix C. As we are going through 8 elements each iteration, the outer for loop on line 4 increments i by 8 instead of by 1 as on line 3 of Figure 2.43.", "start_char_idx": 0, "end_char_idx": 1230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d70c9dae-5589-4d8d-b3a7-46d631ba8ae4": {"__data__": {"id_": "d70c9dae-5589-4d8d-b3a7-46d631ba8ae4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "784dfde3-ad8f-4bfa-8418-4a3ec42c2873", "node_type": "4", "metadata": {}, "hash": "fd341806296872dd5deb59a8f88d89c5ecb4340b0afc4d55a074f288469ca761", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bae30238-6707-46bc-b7a3-980299b7f85f", "node_type": "1", "metadata": {}, "hash": "b374db73e62048be2861235aad36159730c81daea68895bb726fbb21a3a24377", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "106490af-8c4d-4eef-ad0b-7d51b14621e6", "node_type": "1", "metadata": {}, "hash": "e0c55cc7de63f8ce59bd3418ce7bd59e3a50ef5a547779817e5663b296bf9a56", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.21 Optimized version of DGEMM using C intrinsics to generate the AVX512 subword-parallel instructions for the x86. Figure 3.22 shows the assembly language produced by the compiler for the inner loop.", "start_char_idx": 0, "end_char_idx": 208, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "106490af-8c4d-4eef-ad0b-7d51b14621e6": {"__data__": {"id_": "106490af-8c4d-4eef-ad0b-7d51b14621e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "47931b18-9e06-433b-94e4-71387e8aa797", "node_type": "4", "metadata": {}, "hash": "e0c55cc7de63f8ce59bd3418ce7bd59e3a50ef5a547779817e5663b296bf9a56", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d70c9dae-5589-4d8d-b3a7-46d631ba8ae4", "node_type": "1", "metadata": {}, "hash": "fd341806296872dd5deb59a8f88d89c5ecb4340b0afc4d55a074f288469ca761", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "118fb3ba-2930-4cdd-9975-d0f8fe564fae", "node_type": "1", "metadata": {}, "hash": "3d44242ee70970343896993c7ef809947a0e6d3705e4ad63d79e3de59a0b0885", "class_name": "RelatedNodeInfo"}}, "text": "Inside the loops, on line 10 we \ufb01rst load 8 elements of A again", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "118fb3ba-2930-4cdd-9975-d0f8fe564fae": {"__data__": {"id_": "118fb3ba-2930-4cdd-9975-d0f8fe564fae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f0b5707f-ef3f-48a3-a527-7e46dfded75a", "node_type": "4", "metadata": {}, "hash": "3d44242ee70970343896993c7ef809947a0e6d3705e4ad63d79e3de59a0b0885", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "106490af-8c4d-4eef-ad0b-7d51b14621e6", "node_type": "1", "metadata": {}, "hash": "e0c55cc7de63f8ce59bd3418ce7bd59e3a50ef5a547779817e5663b296bf9a56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbaf7794-f160-4b5e-8fce-e363f2e3fd81", "node_type": "1", "metadata": {}, "hash": "60dc4e47ae629059c52a5c897573fedfd84e84ca5b28b545b5770de22dd01c9e", "class_name": "RelatedNodeInfo"}}, "text": "using _mm512_ load_pd(). To multiply these elements by one element of B, we \ufb01rst use the intrinsic _mm512_broadcast_sd(), which makes eight identical copies of the scalar double precision number\u2014in this case an element of B\u2014in one of the ZMM registers. We then use _mm512_fmadd_pd on line 11 to multiply the 8 double-precision results in parallel and then add the 8 products to the 8 sums in c0.", "start_char_idx": 0, "end_char_idx": 395, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbaf7794-f160-4b5e-8fce-e363f2e3fd81": {"__data__": {"id_": "dbaf7794-f160-4b5e-8fce-e363f2e3fd81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2e581b10-2058-4839-9a99-5d7cf14c61d5", "node_type": "4", "metadata": {}, "hash": "60dc4e47ae629059c52a5c897573fedfd84e84ca5b28b545b5770de22dd01c9e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "118fb3ba-2930-4cdd-9975-d0f8fe564fae", "node_type": "1", "metadata": {}, "hash": "3d44242ee70970343896993c7ef809947a0e6d3705e4ad63d79e3de59a0b0885", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82e7943a-f209-4e93-b4bb-f9a2e96a92b9", "node_type": "1", "metadata": {}, "hash": "1f9a9b58008d3b3fa07ead3fe74f873b214b787a1b246396b614ffac537118e3", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.22 shows resulting x86 code for the body of the inner", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82e7943a-f209-4e93-b4bb-f9a2e96a92b9": {"__data__": {"id_": "82e7943a-f209-4e93-b4bb-f9a2e96a92b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7089d71-1bd5-4788-adc9-2a84ba01108d", "node_type": "4", "metadata": {}, "hash": "1f9a9b58008d3b3fa07ead3fe74f873b214b787a1b246396b614ffac537118e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbaf7794-f160-4b5e-8fce-e363f2e3fd81", "node_type": "1", "metadata": {}, "hash": "60dc4e47ae629059c52a5c897573fedfd84e84ca5b28b545b5770de22dd01c9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d", "node_type": "1", "metadata": {}, "hash": "292173243afbca104009e83e658a82c9241967c4e47ad7643198b3e8c81f4515", "class_name": "RelatedNodeInfo"}}, "text": "loops produced by the compiler. You can see the four AVX512 instructions\u2014they all start with v and use pd for parallel double precision\u2014that correspond to the C intrinsics mentioned previously. The code is very similar to that in Figure 2.44 the integer instructions are nearly identical (but di\ufb00erent registers), and the \ufb02oating-point instruction di\ufb00erences are generally just going from scalar double (sd) using XMM registers to parallel double (pd) with ZMM registers. One exception is line 4 of Figure 3.22. Every element of A must be multiplied by one element of B. One solution is to place eight identical copies of the 64-bit B element side-by-side into the 512-bit", "start_char_idx": 0, "end_char_idx": 672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d": {"__data__": {"id_": "cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "563f1142-5799-4c6e-a485-1a33bd075726", "node_type": "4", "metadata": {}, "hash": "292173243afbca104009e83e658a82c9241967c4e47ad7643198b3e8c81f4515", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82e7943a-f209-4e93-b4bb-f9a2e96a92b9", "node_type": "1", "metadata": {}, "hash": "1f9a9b58008d3b3fa07ead3fe74f873b214b787a1b246396b614ffac537118e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac0ef22b-d0f2-4121-9da9-4dba9120bcc9", "node_type": "1", "metadata": {}, "hash": "e57692e3d7dc120db0836edb9a34882d2fd77aee7440b6f740f5fee4a8af4028", "class_name": "RelatedNodeInfo"}}, "text": "ZMM register, which is just what the instruction vbroadcastsd does. The other di\ufb00erence is that the original program has separate multiply and add \ufb02oating point operations, whereas the AVX512 version using a single \ufb02oating-point operation in line 6 that performs multiply and add.", "start_char_idx": 0, "end_char_idx": 280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac0ef22b-d0f2-4121-9da9-4dba9120bcc9": {"__data__": {"id_": "ac0ef22b-d0f2-4121-9da9-4dba9120bcc9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4f07f7c-7198-41d0-b634-16d0d535bdee", "node_type": "4", "metadata": {}, "hash": "e57692e3d7dc120db0836edb9a34882d2fd77aee7440b6f740f5fee4a8af4028", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d", "node_type": "1", "metadata": {}, "hash": "292173243afbca104009e83e658a82c9241967c4e47ad7643198b3e8c81f4515", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d08108d-aa33-43ae-a0dc-c716b8053784", "node_type": "1", "metadata": {}, "hash": "0dc8f31355dbb00cf7799492184f4013936a67bed5d19361ded5c8e889041f25", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.22 The x86 assembly language for the body of the nested loops generated by compiling the optimized C code in Figure 3.21. Note the similarities to Figure 2.44 on page 167, of Chapter 2, with the primary difference being that the original floating- point operations are now using ZMM registers and using the pd versions of the instructions for parallel double precision instead of the sd version for scalar double precision, and it is performing a single multiply\u2013add instruction instead of a separate multiply instruction and a separate add instruction.", "start_char_idx": 0, "end_char_idx": 562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d08108d-aa33-43ae-a0dc-c716b8053784": {"__data__": {"id_": "9d08108d-aa33-43ae-a0dc-c716b8053784", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83ce1b91-fc69-4e4d-ae5b-83f5bc0d3944", "node_type": "4", "metadata": {}, "hash": "0dc8f31355dbb00cf7799492184f4013936a67bed5d19361ded5c8e889041f25", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac0ef22b-d0f2-4121-9da9-4dba9120bcc9", "node_type": "1", "metadata": {}, "hash": "e57692e3d7dc120db0836edb9a34882d2fd77aee7440b6f740f5fee4a8af4028", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f67ee5ba-ddde-4f97-b526-3b15580d359c", "node_type": "1", "metadata": {}, "hash": "24f026d921949712493ea3e551ca4b0b71d42c65cce71aef841b86693df7953a", "class_name": "RelatedNodeInfo"}}, "text": "The AVX version is 7.5 times as fast, which is very close to the factor of 8.0 increase that you might hope for from performing 8 times as many operations at a time by using subword parallelism. Chapters 3, 4, 5, and 6 will further improve DGEMM performance using the ideas that each chapter introduces.", "start_char_idx": 0, "end_char_idx": 303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f67ee5ba-ddde-4f97-b526-3b15580d359c": {"__data__": {"id_": "f67ee5ba-ddde-4f97-b526-3b15580d359c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d5d9ed4a-6b08-4231-880a-bb9dab62cd4a", "node_type": "4", "metadata": {}, "hash": "24f026d921949712493ea3e551ca4b0b71d42c65cce71aef841b86693df7953a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d08108d-aa33-43ae-a0dc-c716b8053784", "node_type": "1", "metadata": {}, "hash": "0dc8f31355dbb00cf7799492184f4013936a67bed5d19361ded5c8e889041f25", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "06bf0028-7c1f-4dd2-b774-14648b2c69e4", "node_type": "1", "metadata": {}, "hash": "e7b4178ec6eb328535024c1df7767d653d5a2aeb7d74f2769e6cc6c75ab6bc9b", "class_name": "RelatedNodeInfo"}}, "text": "Thus mathematics may be de\ufb01ned as the subject in which we never know what we are talking about, nor whether what we are saying is true.", "start_char_idx": 0, "end_char_idx": 135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "06bf0028-7c1f-4dd2-b774-14648b2c69e4": {"__data__": {"id_": "06bf0028-7c1f-4dd2-b774-14648b2c69e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fda4c6cd-050f-49ac-ab20-bf2942e48585", "node_type": "4", "metadata": {}, "hash": "e7b4178ec6eb328535024c1df7767d653d5a2aeb7d74f2769e6cc6c75ab6bc9b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f67ee5ba-ddde-4f97-b526-3b15580d359c", "node_type": "1", "metadata": {}, "hash": "24f026d921949712493ea3e551ca4b0b71d42c65cce71aef841b86693df7953a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcd2ac72-3995-44b3-837c-fba2c28765eb", "node_type": "1", "metadata": {}, "hash": "882a0f2666ed9d7ed9d6d59f5db291da05bfd1f00d77ed7fbc40ba6bcc1bd34c", "class_name": "RelatedNodeInfo"}}, "text": "Arithmetic fallacies and pitfalls generally stem from the di\ufb00erence", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcd2ac72-3995-44b3-837c-fba2c28765eb": {"__data__": {"id_": "fcd2ac72-3995-44b3-837c-fba2c28765eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c9da83d8-11ac-4ab5-9c27-b7f1cafe8f67", "node_type": "4", "metadata": {}, "hash": "882a0f2666ed9d7ed9d6d59f5db291da05bfd1f00d77ed7fbc40ba6bcc1bd34c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "06bf0028-7c1f-4dd2-b774-14648b2c69e4", "node_type": "1", "metadata": {}, "hash": "e7b4178ec6eb328535024c1df7767d653d5a2aeb7d74f2769e6cc6c75ab6bc9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d6eacb1-463d-4eb2-9e30-b5a02996343d", "node_type": "1", "metadata": {}, "hash": "2673d2521a9725bdbdb5a498b7fddc886f2842f3fdfe2fa492f20f3faf216bce", "class_name": "RelatedNodeInfo"}}, "text": "Fallacy: Just as a left shift instruction can replace an integer multiply by a power of 2, a right shift is the same as an integer division by a power of 2.", "start_char_idx": 0, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d6eacb1-463d-4eb2-9e30-b5a02996343d": {"__data__": {"id_": "5d6eacb1-463d-4eb2-9e30-b5a02996343d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "847ce774-4f36-48c5-800c-4662fa32e0d5", "node_type": "4", "metadata": {}, "hash": "2673d2521a9725bdbdb5a498b7fddc886f2842f3fdfe2fa492f20f3faf216bce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcd2ac72-3995-44b3-837c-fba2c28765eb", "node_type": "1", "metadata": {}, "hash": "882a0f2666ed9d7ed9d6d59f5db291da05bfd1f00d77ed7fbc40ba6bcc1bd34c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff", "node_type": "1", "metadata": {}, "hash": "04634a5319f54976cda3f15c87bce8455fe5250d7c3ddc6cf8a4f44969ad04d2", "class_name": "RelatedNodeInfo"}}, "text": "Recall that a binary number x, where xi means the ith bit,", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff": {"__data__": {"id_": "a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "afbf1cac-523b-4d99-8a14-c8663e85f5d9", "node_type": "4", "metadata": {}, "hash": "04634a5319f54976cda3f15c87bce8455fe5250d7c3ddc6cf8a4f44969ad04d2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d6eacb1-463d-4eb2-9e30-b5a02996343d", "node_type": "1", "metadata": {}, "hash": "2673d2521a9725bdbdb5a498b7fddc886f2842f3fdfe2fa492f20f3faf216bce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0050f467-9ea5-436a-b426-b62e58874db4", "node_type": "1", "metadata": {}, "hash": "594550dcd31e29ba1792d009805f512084835e2ac285046acdca61041261ea4e", "class_name": "RelatedNodeInfo"}}, "text": "represents the number", "start_char_idx": 0, "end_char_idx": 21, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0050f467-9ea5-436a-b426-b62e58874db4": {"__data__": {"id_": "0050f467-9ea5-436a-b426-b62e58874db4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f4ca8d8-0e81-4072-a319-89c36be53181", "node_type": "4", "metadata": {}, "hash": "594550dcd31e29ba1792d009805f512084835e2ac285046acdca61041261ea4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff", "node_type": "1", "metadata": {}, "hash": "04634a5319f54976cda3f15c87bce8455fe5250d7c3ddc6cf8a4f44969ad04d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "67f1adea-5bee-4228-8517-5c74b3c10532", "node_type": "1", "metadata": {}, "hash": "631cf1279bfb826aa97444b36f1f1d32786fef719a3203d5fc3194f362a2f15e", "class_name": "RelatedNodeInfo"}}, "text": "Shifting the bits of c right by n bits would seem to be the same as dividing by 2n. And this is true for unsigned integers. The problem is with signed integers. For example, suppose we want to divide \u22125ten by 4ten; the quotient should be \u22121ten. The two\u2019s complement representation of \u22125ten is", "start_char_idx": 0, "end_char_idx": 292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "67f1adea-5bee-4228-8517-5c74b3c10532": {"__data__": {"id_": "67f1adea-5bee-4228-8517-5c74b3c10532", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8cbc9b7c-f928-4493-aabf-db4fe88c71d5", "node_type": "4", "metadata": {}, "hash": "631cf1279bfb826aa97444b36f1f1d32786fef719a3203d5fc3194f362a2f15e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0050f467-9ea5-436a-b426-b62e58874db4", "node_type": "1", "metadata": {}, "hash": "594550dcd31e29ba1792d009805f512084835e2ac285046acdca61041261ea4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "009046d7-7439-47b7-b250-aa33149367cc", "node_type": "1", "metadata": {}, "hash": "dd03e2ebae1ea2121680d15c544670828912efa7d3339c162d1e7233b56a4fbc", "class_name": "RelatedNodeInfo"}}, "text": "According to this fallacy, shifting right by two should divide by", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "009046d7-7439-47b7-b250-aa33149367cc": {"__data__": {"id_": "009046d7-7439-47b7-b250-aa33149367cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76532bfd-84ad-4482-bcf1-c1978211377a", "node_type": "4", "metadata": {}, "hash": "dd03e2ebae1ea2121680d15c544670828912efa7d3339c162d1e7233b56a4fbc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "67f1adea-5bee-4228-8517-5c74b3c10532", "node_type": "1", "metadata": {}, "hash": "631cf1279bfb826aa97444b36f1f1d32786fef719a3203d5fc3194f362a2f15e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b00a40ca-9301-4bcf-9893-3c4b169e2957", "node_type": "1", "metadata": {}, "hash": "3f9d08a25b7ae32b0932c000e2db2045aa01053968a18ac6e44d953c5c5731cf", "class_name": "RelatedNodeInfo"}}, "text": "With a 0 in the sign bit, this result is clearly wrong. The value created by the shift right is actually 1,073,741,822ten instead of \u22121ten. A solution would be to have an arithmetic right shift that extends the sign bit instead of shifting in 0s. A 2-bit arithmetic shift right of \u22125ten produces", "start_char_idx": 0, "end_char_idx": 295, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b00a40ca-9301-4bcf-9893-3c4b169e2957": {"__data__": {"id_": "b00a40ca-9301-4bcf-9893-3c4b169e2957", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "08a77f31-13e5-440a-91a1-32fcbf341c95", "node_type": "4", "metadata": {}, "hash": "3f9d08a25b7ae32b0932c000e2db2045aa01053968a18ac6e44d953c5c5731cf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "009046d7-7439-47b7-b250-aa33149367cc", "node_type": "1", "metadata": {}, "hash": "dd03e2ebae1ea2121680d15c544670828912efa7d3339c162d1e7233b56a4fbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a28ea497-e7fc-4188-9b82-631d7875b150", "node_type": "1", "metadata": {}, "hash": "39d7d563199a7b7775df144c855db61847fafc244a3e1faf79b08d4bb82b4be9", "class_name": "RelatedNodeInfo"}}, "text": "The result is \u22122ten instead of \u22121ten; close, but no cigar.", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a28ea497-e7fc-4188-9b82-631d7875b150": {"__data__": {"id_": "a28ea497-e7fc-4188-9b82-631d7875b150", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85602fa6-8722-4912-b3f2-424d51a37726", "node_type": "4", "metadata": {}, "hash": "39d7d563199a7b7775df144c855db61847fafc244a3e1faf79b08d4bb82b4be9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b00a40ca-9301-4bcf-9893-3c4b169e2957", "node_type": "1", "metadata": {}, "hash": "3f9d08a25b7ae32b0932c000e2db2045aa01053968a18ac6e44d953c5c5731cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48f49feb-614c-45b7-a8ec-4b43132c4eaa", "node_type": "1", "metadata": {}, "hash": "26683b2db0ccbeb7afb48ff74d2f512e04b57ec93788a3999a0c5b022e3a017f", "class_name": "RelatedNodeInfo"}}, "text": "Pitfall: Floating-point addition is not associative.", "start_char_idx": 0, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48f49feb-614c-45b7-a8ec-4b43132c4eaa": {"__data__": {"id_": "48f49feb-614c-45b7-a8ec-4b43132c4eaa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "117f2f2c-929b-4696-bdf8-9863a41e527c", "node_type": "4", "metadata": {}, "hash": "26683b2db0ccbeb7afb48ff74d2f512e04b57ec93788a3999a0c5b022e3a017f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a28ea497-e7fc-4188-9b82-631d7875b150", "node_type": "1", "metadata": {}, "hash": "39d7d563199a7b7775df144c855db61847fafc244a3e1faf79b08d4bb82b4be9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9ed37739-6cb1-42ab-a697-8e3c8c3e82a9", "node_type": "1", "metadata": {}, "hash": "4c53e43c00fba7c76bee750ae7ff868b6c9951eef7f926b3948ffe913197b0c8", "class_name": "RelatedNodeInfo"}}, "text": "Associativity holds for a sequence of two\u2019s complement integer additions, even if the computation over\ufb02ows. Alas, because \ufb02oating- point numbers are approximations of real numbers and because computer arithmetic has limited precision, it does not hold for \ufb02oating-point numbers. Given the great range of numbers that can be represented in \ufb02oating point, problems occur when adding two large numbers of opposite signs plus a small number. For example, let\u2019s see if c + (a + b) = (c + a) + b. Assume c = \u22121.5ten \u00d7 1038, a = 1.5ten \u00d7 1038, and b = 1.0, and that these are all single precision numbers.", "start_char_idx": 0, "end_char_idx": 598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ed37739-6cb1-42ab-a697-8e3c8c3e82a9": {"__data__": {"id_": "9ed37739-6cb1-42ab-a697-8e3c8c3e82a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "74d954e9-bc97-40a6-9fb0-a93ba2099ab5", "node_type": "4", "metadata": {}, "hash": "4c53e43c00fba7c76bee750ae7ff868b6c9951eef7f926b3948ffe913197b0c8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48f49feb-614c-45b7-a8ec-4b43132c4eaa", "node_type": "1", "metadata": {}, "hash": "26683b2db0ccbeb7afb48ff74d2f512e04b57ec93788a3999a0c5b022e3a017f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6483253-c531-4658-89a7-bb7212350776", "node_type": "1", "metadata": {}, "hash": "7af9adb9fdaa879c474c00c611e1437ae6d00d92b775fac22b9c8ac6b02ae350", "class_name": "RelatedNodeInfo"}}, "text": "Since \ufb02oating-point numbers have limited precision and result in", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6483253-c531-4658-89a7-bb7212350776": {"__data__": {"id_": "a6483253-c531-4658-89a7-bb7212350776", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f563cd0a-b726-4d20-9da2-f14e328966b9", "node_type": "4", "metadata": {}, "hash": "7af9adb9fdaa879c474c00c611e1437ae6d00d92b775fac22b9c8ac6b02ae350", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9ed37739-6cb1-42ab-a697-8e3c8c3e82a9", "node_type": "1", "metadata": {}, "hash": "4c53e43c00fba7c76bee750ae7ff868b6c9951eef7f926b3948ffe913197b0c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "491a62b2-c379-4689-8914-fc37bfc302bd", "node_type": "1", "metadata": {}, "hash": "829b08f74f0dce0ab0fa89084e1305134efb4b2971229a9e6b689a3e847411ce", "class_name": "RelatedNodeInfo"}}, "text": "approximations of real results, 1.5ten \u00d7 1038 is so much larger than 1.0ten that 1.5ten \u00d7 1038 + 1.0 is still 1.5ten \u00d7 1038. That is why the sum of c, a, and b is 0.0 or 1.0, depending on the order of the \ufb02oating- point additions, so c + (a + b) \u2260 (c + a) + b. Therefore, \ufb02oating-point addition is not associative.", "start_char_idx": 0, "end_char_idx": 314, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "491a62b2-c379-4689-8914-fc37bfc302bd": {"__data__": {"id_": "491a62b2-c379-4689-8914-fc37bfc302bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5ceaad40-dd11-46ee-9960-fe5d59556395", "node_type": "4", "metadata": {}, "hash": "829b08f74f0dce0ab0fa89084e1305134efb4b2971229a9e6b689a3e847411ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6483253-c531-4658-89a7-bb7212350776", "node_type": "1", "metadata": {}, "hash": "7af9adb9fdaa879c474c00c611e1437ae6d00d92b775fac22b9c8ac6b02ae350", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c784b97-dadf-4233-9e98-9cef5c4c4f7e", "node_type": "1", "metadata": {}, "hash": "bda1611adc5db54472eb854537454ac5cad0c98dcdb1825279b7413c570c7852", "class_name": "RelatedNodeInfo"}}, "text": "Fallacy: Parallel execution strategies that work for integer data types also work for \ufb02oating-point data types.", "start_char_idx": 0, "end_char_idx": 111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c784b97-dadf-4233-9e98-9cef5c4c4f7e": {"__data__": {"id_": "5c784b97-dadf-4233-9e98-9cef5c4c4f7e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0597fcd1-eeea-477a-9f9d-c9c335b6e890", "node_type": "4", "metadata": {}, "hash": "bda1611adc5db54472eb854537454ac5cad0c98dcdb1825279b7413c570c7852", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "491a62b2-c379-4689-8914-fc37bfc302bd", "node_type": "1", "metadata": {}, "hash": "829b08f74f0dce0ab0fa89084e1305134efb4b2971229a9e6b689a3e847411ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "85e068ab-dd23-4d3b-90f9-1544b61f48da", "node_type": "1", "metadata": {}, "hash": "3f316e90ddcbc55a8a51f22f91e48d46b0c746f74d756fb26a2b0098994b5179", "class_name": "RelatedNodeInfo"}}, "text": "Programs have typically been wri\u0000en \ufb01rst to run sequentially before being rewri\u0000en to run concurrently, so a natural question is, \u201cDo the two versions get the same answer?\u201d If the answer is no, you presume there is a bug in the parallel version that you need to track down.", "start_char_idx": 0, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85e068ab-dd23-4d3b-90f9-1544b61f48da": {"__data__": {"id_": "85e068ab-dd23-4d3b-90f9-1544b61f48da", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eaa061bc-9b71-4861-bd5d-2218b535541a", "node_type": "4", "metadata": {}, "hash": "3f316e90ddcbc55a8a51f22f91e48d46b0c746f74d756fb26a2b0098994b5179", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c784b97-dadf-4233-9e98-9cef5c4c4f7e", "node_type": "1", "metadata": {}, "hash": "bda1611adc5db54472eb854537454ac5cad0c98dcdb1825279b7413c570c7852", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d94c333c-c93a-4553-a0bf-ffc87dcac762", "node_type": "1", "metadata": {}, "hash": "fa9e8967de589ac8997171f3bda938dd1730048673c322ee340705ded366205d", "class_name": "RelatedNodeInfo"}}, "text": "This approach assumes that computer arithmetic does not a\ufb00ect", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d94c333c-c93a-4553-a0bf-ffc87dcac762": {"__data__": {"id_": "d94c333c-c93a-4553-a0bf-ffc87dcac762", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e8d64d7-11f9-4e20-b146-abaac9b4c43e", "node_type": "4", "metadata": {}, "hash": "fa9e8967de589ac8997171f3bda938dd1730048673c322ee340705ded366205d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "85e068ab-dd23-4d3b-90f9-1544b61f48da", "node_type": "1", "metadata": {}, "hash": "3f316e90ddcbc55a8a51f22f91e48d46b0c746f74d756fb26a2b0098994b5179", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3dc7101-341a-4b76-8f53-076445218d3a", "node_type": "1", "metadata": {}, "hash": "fc527d8d149572961b06a1f7f5f533f0b339119571df0ac38435eda3dbb4660a", "class_name": "RelatedNodeInfo"}}, "text": "the results when going from sequential to parallel. That is, if you were to add a million numbers together, you would get the same results whether you used 1 processor or 1000 processors. This assumption holds for two\u2019s complement integers, since integer addition is associative. Alas, since \ufb02oating-point addition is not associative, the assumption does not hold.", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e3dc7101-341a-4b76-8f53-076445218d3a": {"__data__": {"id_": "e3dc7101-341a-4b76-8f53-076445218d3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5e7aa96-ff22-40e9-8265-d8f446b8a76e", "node_type": "4", "metadata": {}, "hash": "fc527d8d149572961b06a1f7f5f533f0b339119571df0ac38435eda3dbb4660a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d94c333c-c93a-4553-a0bf-ffc87dcac762", "node_type": "1", "metadata": {}, "hash": "fa9e8967de589ac8997171f3bda938dd1730048673c322ee340705ded366205d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcc2c3ee-e57c-426e-a833-b74633120862", "node_type": "1", "metadata": {}, "hash": "c98c1854a873fee8837bfeacd4cdb4033ee367ecf06007f83864a8321f787145", "class_name": "RelatedNodeInfo"}}, "text": "A more vexing version of this fallacy occurs on a parallel", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcc2c3ee-e57c-426e-a833-b74633120862": {"__data__": {"id_": "fcc2c3ee-e57c-426e-a833-b74633120862", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "37485d19-2b81-4f26-8a2f-17bc00300cef", "node_type": "4", "metadata": {}, "hash": "c98c1854a873fee8837bfeacd4cdb4033ee367ecf06007f83864a8321f787145", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3dc7101-341a-4b76-8f53-076445218d3a", "node_type": "1", "metadata": {}, "hash": "fc527d8d149572961b06a1f7f5f533f0b339119571df0ac38435eda3dbb4660a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ae3aec3-c101-48a1-8083-707dea0dfae9", "node_type": "1", "metadata": {}, "hash": "43df431ca81c828e80ba82d67546eebae85a6d813d184b080333377eb5371cd6", "class_name": "RelatedNodeInfo"}}, "text": "computer where the operating system scheduler may use a di\ufb00erent number of processors depending on what other programs are running on a parallel computer. As the varying number of processors from each run would cause the \ufb02oating-point sums to be calculated in di\ufb00erent orders, ge\u0000ing slightly di\ufb00erent answers each time despite running identical code with identical input may \ufb02ummox unaware parallel programmers.", "start_char_idx": 0, "end_char_idx": 412, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ae3aec3-c101-48a1-8083-707dea0dfae9": {"__data__": {"id_": "8ae3aec3-c101-48a1-8083-707dea0dfae9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "28fc266f-e71b-4ec7-ba96-64c1ccfd2912", "node_type": "4", "metadata": {}, "hash": "43df431ca81c828e80ba82d67546eebae85a6d813d184b080333377eb5371cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcc2c3ee-e57c-426e-a833-b74633120862", "node_type": "1", "metadata": {}, "hash": "c98c1854a873fee8837bfeacd4cdb4033ee367ecf06007f83864a8321f787145", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5b45309-c770-4260-bbed-3f69ce977cd9", "node_type": "1", "metadata": {}, "hash": "8fc172367a2ceafe9391575ad8901e36b0bc731cc09e4b42014dc61a5d7e11ae", "class_name": "RelatedNodeInfo"}}, "text": "Given this quandary, programmers who write parallel code with", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5b45309-c770-4260-bbed-3f69ce977cd9": {"__data__": {"id_": "e5b45309-c770-4260-bbed-3f69ce977cd9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ae77585d-2f33-457a-96b7-0d8f32f5c40f", "node_type": "4", "metadata": {}, "hash": "8fc172367a2ceafe9391575ad8901e36b0bc731cc09e4b42014dc61a5d7e11ae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ae3aec3-c101-48a1-8083-707dea0dfae9", "node_type": "1", "metadata": {}, "hash": "43df431ca81c828e80ba82d67546eebae85a6d813d184b080333377eb5371cd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3572e71c-53f8-402b-9881-ce91abd9110e", "node_type": "1", "metadata": {}, "hash": "40978eb410972c56e6dae8c77836a00e0ba8e8eced36f4e8c51b57a693f3b62c", "class_name": "RelatedNodeInfo"}}, "text": "\ufb02oating-point numbers need to verify whether the results are credible even if they don\u2019t give the same exact answer as the sequential code. The \ufb01eld that deals with such issues is called numerical analysis, which is the subject of textbooks in its own right. Such concerns are one reason for the popularity of numerical libraries such as LAPACK and SCALAPAK, which have been validated in both their sequential and parallel forms.", "start_char_idx": 0, "end_char_idx": 429, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3572e71c-53f8-402b-9881-ce91abd9110e": {"__data__": {"id_": "3572e71c-53f8-402b-9881-ce91abd9110e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49f2014d-b8f5-41f3-b62e-0a004d3c6eb0", "node_type": "4", "metadata": {}, "hash": "40978eb410972c56e6dae8c77836a00e0ba8e8eced36f4e8c51b57a693f3b62c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5b45309-c770-4260-bbed-3f69ce977cd9", "node_type": "1", "metadata": {}, "hash": "8fc172367a2ceafe9391575ad8901e36b0bc731cc09e4b42014dc61a5d7e11ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "03e13a44-62bf-4082-8262-a09940be882e", "node_type": "1", "metadata": {}, "hash": "9cce62e2f606c260778f4ac79fc24ea15a052de1897ddb59b8f50e8da3656d35", "class_name": "RelatedNodeInfo"}}, "text": "Pitfall: The MIPS instruction add immediate unsigned (addiu) sign- extends its 16-bit immediate \ufb01eld.", "start_char_idx": 0, "end_char_idx": 101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03e13a44-62bf-4082-8262-a09940be882e": {"__data__": {"id_": "03e13a44-62bf-4082-8262-a09940be882e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "355a6a04-8cea-42b4-aa3c-384dba4bc16f", "node_type": "4", "metadata": {}, "hash": "9cce62e2f606c260778f4ac79fc24ea15a052de1897ddb59b8f50e8da3656d35", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3572e71c-53f8-402b-9881-ce91abd9110e", "node_type": "1", "metadata": {}, "hash": "40978eb410972c56e6dae8c77836a00e0ba8e8eced36f4e8c51b57a693f3b62c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af11b8b6-6fa0-4eee-a396-cdbf058e86ae", "node_type": "1", "metadata": {}, "hash": "039aac8b7411eec90974827c24303143873f9ee02b08c4acadea4974789d93cb", "class_name": "RelatedNodeInfo"}}, "text": "Despite its name, add immediate unsigned (addiu) is used to add", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af11b8b6-6fa0-4eee-a396-cdbf058e86ae": {"__data__": {"id_": "af11b8b6-6fa0-4eee-a396-cdbf058e86ae", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "73a636e6-532e-4cbf-8309-2c41197fa30f", "node_type": "4", "metadata": {}, "hash": "039aac8b7411eec90974827c24303143873f9ee02b08c4acadea4974789d93cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03e13a44-62bf-4082-8262-a09940be882e", "node_type": "1", "metadata": {}, "hash": "9cce62e2f606c260778f4ac79fc24ea15a052de1897ddb59b8f50e8da3656d35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f492f6f1-b1f8-468e-b1d0-32e5e8f36eac", "node_type": "1", "metadata": {}, "hash": "d19d145028e10cad735ec87ad72b191758a6b405cafcfdd7f53248db291f7a2f", "class_name": "RelatedNodeInfo"}}, "text": "constants to signed integers when we don\u2019t care about over\ufb02ow.", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f492f6f1-b1f8-468e-b1d0-32e5e8f36eac": {"__data__": {"id_": "f492f6f1-b1f8-468e-b1d0-32e5e8f36eac", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd2743f7-df86-4e04-83ad-d2e5b48fa842", "node_type": "4", "metadata": {}, "hash": "d19d145028e10cad735ec87ad72b191758a6b405cafcfdd7f53248db291f7a2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af11b8b6-6fa0-4eee-a396-cdbf058e86ae", "node_type": "1", "metadata": {}, "hash": "039aac8b7411eec90974827c24303143873f9ee02b08c4acadea4974789d93cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fac061f6-9133-4a22-8354-a1b72dd51420", "node_type": "1", "metadata": {}, "hash": "6b7df42101d61ce539d1c2eee055ea3b9e580db1a9c4fbb5cf9f9789474a2af3", "class_name": "RelatedNodeInfo"}}, "text": "MIPS has no subtract immediate instruction, and negative numbers need sign extension, so the MIPS architects decided to sign-extend the immediate \ufb01eld.", "start_char_idx": 0, "end_char_idx": 151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fac061f6-9133-4a22-8354-a1b72dd51420": {"__data__": {"id_": "fac061f6-9133-4a22-8354-a1b72dd51420", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5c548e5a-deea-478c-841f-d46bbea9850e", "node_type": "4", "metadata": {}, "hash": "6b7df42101d61ce539d1c2eee055ea3b9e580db1a9c4fbb5cf9f9789474a2af3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f492f6f1-b1f8-468e-b1d0-32e5e8f36eac", "node_type": "1", "metadata": {}, "hash": "d19d145028e10cad735ec87ad72b191758a6b405cafcfdd7f53248db291f7a2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a6ad5c4-196b-4e7c-99a7-47ba5f155f53", "node_type": "1", "metadata": {}, "hash": "0eae3966e0fbacd2479b69c3b29fdc7c5ca1169890c4e7ed5b480d8ab9150100", "class_name": "RelatedNodeInfo"}}, "text": "Fallacy: Only theoretical mathematicians care about \ufb02oating-point accuracy.", "start_char_idx": 0, "end_char_idx": 75, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a6ad5c4-196b-4e7c-99a7-47ba5f155f53": {"__data__": {"id_": "8a6ad5c4-196b-4e7c-99a7-47ba5f155f53", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6632b38c-b5e7-41ef-b1a2-709866649478", "node_type": "4", "metadata": {}, "hash": "0eae3966e0fbacd2479b69c3b29fdc7c5ca1169890c4e7ed5b480d8ab9150100", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fac061f6-9133-4a22-8354-a1b72dd51420", "node_type": "1", "metadata": {}, "hash": "6b7df42101d61ce539d1c2eee055ea3b9e580db1a9c4fbb5cf9f9789474a2af3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51231e88-fcaf-47af-917d-4d220ab688d4", "node_type": "1", "metadata": {}, "hash": "939be539154fe46cdeb61a405c96952fed7d2a121dc9ab4754ed9e31a57acd1e", "class_name": "RelatedNodeInfo"}}, "text": "Newspaper headlines of November 1994 prove this statement is a fallacy (see Figure 3.23). The following is the inside story behind the headlines.", "start_char_idx": 0, "end_char_idx": 145, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51231e88-fcaf-47af-917d-4d220ab688d4": {"__data__": {"id_": "51231e88-fcaf-47af-917d-4d220ab688d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13637419-1c1f-498e-aa22-b372c636a298", "node_type": "4", "metadata": {}, "hash": "939be539154fe46cdeb61a405c96952fed7d2a121dc9ab4754ed9e31a57acd1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8a6ad5c4-196b-4e7c-99a7-47ba5f155f53", "node_type": "1", "metadata": {}, "hash": "0eae3966e0fbacd2479b69c3b29fdc7c5ca1169890c4e7ed5b480d8ab9150100", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac23d806-843f-4168-b691-3c326f9440cc", "node_type": "1", "metadata": {}, "hash": "8adeecc8638c36cd12606c37d0cfb253f2b20a193dc2881d6dca9707969d20c1", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.23 A sampling of newspaper and magazine articles from November 1994, including the New York Times, San Jose Mercury News, San Francisco Chronicle, and Infoworld. The Pentium floating-point divide bug even made the \u201cTop 10 List\u201d of the David Letterman Late Show on television. Intel eventually took a $500 million write-off to replace the buggy chips.", "start_char_idx": 0, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac23d806-843f-4168-b691-3c326f9440cc": {"__data__": {"id_": "ac23d806-843f-4168-b691-3c326f9440cc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2009a771-7204-4051-980e-2fa8e6b95395", "node_type": "4", "metadata": {}, "hash": "8adeecc8638c36cd12606c37d0cfb253f2b20a193dc2881d6dca9707969d20c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51231e88-fcaf-47af-917d-4d220ab688d4", "node_type": "1", "metadata": {}, "hash": "939be539154fe46cdeb61a405c96952fed7d2a121dc9ab4754ed9e31a57acd1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b76a7556-aaef-4c34-a48c-ccfe54f108be", "node_type": "1", "metadata": {}, "hash": "eeb123ec6c4911b7748e913c4b961db5fab6698a1a5f945bcf566384be307422", "class_name": "RelatedNodeInfo"}}, "text": "The Pentium used a standard \ufb02oating-point divide algorithm that generates multiple quotient bits per step, using the most signi\ufb01cant", "start_char_idx": 0, "end_char_idx": 132, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b76a7556-aaef-4c34-a48c-ccfe54f108be": {"__data__": {"id_": "b76a7556-aaef-4c34-a48c-ccfe54f108be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9d23aeb1-14e3-45c7-a886-d8ed3d259cc9", "node_type": "4", "metadata": {}, "hash": "eeb123ec6c4911b7748e913c4b961db5fab6698a1a5f945bcf566384be307422", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ac23d806-843f-4168-b691-3c326f9440cc", "node_type": "1", "metadata": {}, "hash": "8adeecc8638c36cd12606c37d0cfb253f2b20a193dc2881d6dca9707969d20c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a5c141d-82cb-4cfd-a1c3-936371c97e05", "node_type": "1", "metadata": {}, "hash": "b5eddc30248295266517b9ab14183577e6034428b902910352c43134ed9d7dd6", "class_name": "RelatedNodeInfo"}}, "text": "bits of divisor and dividend to guess the next 2 bits of the quotient. The guess is taken from a lookup table containing \u22122, \u22121, 0, +1, or +2. The guess is multiplied by the divisor and subtracted from the remainder to generate a new remainder. Like nonrestoring division, if a previous guess gets too large a remainder, the partial remainder is adjusted in a subsequent pass.", "start_char_idx": 0, "end_char_idx": 376, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a5c141d-82cb-4cfd-a1c3-936371c97e05": {"__data__": {"id_": "4a5c141d-82cb-4cfd-a1c3-936371c97e05", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6e6b8811-c228-44e7-bf57-8617f1677894", "node_type": "4", "metadata": {}, "hash": "b5eddc30248295266517b9ab14183577e6034428b902910352c43134ed9d7dd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b76a7556-aaef-4c34-a48c-ccfe54f108be", "node_type": "1", "metadata": {}, "hash": "eeb123ec6c4911b7748e913c4b961db5fab6698a1a5f945bcf566384be307422", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3bf895c4-1cad-44a3-b2aa-70e93ef3a134", "node_type": "1", "metadata": {}, "hash": "e571fa2a1e1c9b98705d425f6adaece62253e582db0ecf53ca24fceb9ed63a4b", "class_name": "RelatedNodeInfo"}}, "text": "Evidently, there were \ufb01ve elements of the table from the 80486 that Intel engineers thought could never be accessed, and they optimized the logic to return 0 instead of 2 in these situations on the Pentium. Intel was wrong: while the \ufb01rst 11 bits were always correct, errors would show up occasionally in bits 12 to 52, or the 4th to 15th decimal digits.", "start_char_idx": 0, "end_char_idx": 354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bf895c4-1cad-44a3-b2aa-70e93ef3a134": {"__data__": {"id_": "3bf895c4-1cad-44a3-b2aa-70e93ef3a134", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9fd44d8b-deb2-4261-8f48-5a183d20978f", "node_type": "4", "metadata": {}, "hash": "e571fa2a1e1c9b98705d425f6adaece62253e582db0ecf53ca24fceb9ed63a4b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a5c141d-82cb-4cfd-a1c3-936371c97e05", "node_type": "1", "metadata": {}, "hash": "b5eddc30248295266517b9ab14183577e6034428b902910352c43134ed9d7dd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4425c708-3408-49ec-9708-eeb26478e941", "node_type": "1", "metadata": {}, "hash": "4a7fdcd75106bd9397254164a1df1e0cce263ac697d663f1955fa2d536b10ce7", "class_name": "RelatedNodeInfo"}}, "text": "A math professor at Lynchburg College in Virginia, Thomas Nicely, discovered the bug in September 1994. After calling Intel technical support and ge\u0000ing no o\ufb03cial reaction, he posted his discovery on the Internet. This post led to a story in a trade magazine, which in turn caused Intel to issue a press release. It called the bug a glitch that would a\ufb00ect only theoretical mathematicians, with the average spreadsheet user seeing an error every 27,000 years. IBM Research soon counterclaimed that the average spreadsheet user would see an error every 24 days. Intel soon threw in the towel by making the following announcement on December 21:", "start_char_idx": 0, "end_char_idx": 643, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4425c708-3408-49ec-9708-eeb26478e941": {"__data__": {"id_": "4425c708-3408-49ec-9708-eeb26478e941", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e3715d03-40f6-437e-8b9e-1efb07c51e96", "node_type": "4", "metadata": {}, "hash": "4a7fdcd75106bd9397254164a1df1e0cce263ac697d663f1955fa2d536b10ce7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3bf895c4-1cad-44a3-b2aa-70e93ef3a134", "node_type": "1", "metadata": {}, "hash": "e571fa2a1e1c9b98705d425f6adaece62253e582db0ecf53ca24fceb9ed63a4b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cb326db-3a11-4be9-9126-f872f4443882", "node_type": "1", "metadata": {}, "hash": "d047ff8a3a8a2a5fa4f2bd7acd283de1665fe984e04f21e0ed529fd672e6377b", "class_name": "RelatedNodeInfo"}}, "text": "\u201cWe at Intel wish to sincerely apologize for our handling of the recently publicized Pentium processor \ufb02aw. The Intel Inside symbol means that your computer has a microprocessor second to none in quality and performance. Thousands of Intel employees work very hard to ensure that this is true. But no microprocessor is ever perfect. What Intel continues to believe is technically an extremely minor problem has taken on a life of its own. Although Intel \ufb01rmly stands behind the quality of the current version of the Pentium processor, we recognize that many users have concerns. We want to resolve these concerns. Intel will exchange the current version of the Pentium processor for an updated version, in which this \ufb02oating-point divide \ufb02aw is corrected, for any owner who requests it, free of charge anytime during the life of their computer.\u201d", "start_char_idx": 0, "end_char_idx": 845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cb326db-3a11-4be9-9126-f872f4443882": {"__data__": {"id_": "3cb326db-3a11-4be9-9126-f872f4443882", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95616a60-1a9f-41b9-b5df-51326ea2616c", "node_type": "4", "metadata": {}, "hash": "d047ff8a3a8a2a5fa4f2bd7acd283de1665fe984e04f21e0ed529fd672e6377b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4425c708-3408-49ec-9708-eeb26478e941", "node_type": "1", "metadata": {}, "hash": "4a7fdcd75106bd9397254164a1df1e0cce263ac697d663f1955fa2d536b10ce7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "978f8971-84bd-479e-a5a7-2cea547d8274", "node_type": "1", "metadata": {}, "hash": "58ca3503262ed1d14158f2eef2b0a2792e42f348e2059b7c5e52a80d9ebff2d7", "class_name": "RelatedNodeInfo"}}, "text": "Analysts estimate that this recall cost Intel $500 million, and Intel", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "978f8971-84bd-479e-a5a7-2cea547d8274": {"__data__": {"id_": "978f8971-84bd-479e-a5a7-2cea547d8274", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "077628b5-d6db-4dfa-a649-d6feea457082", "node_type": "4", "metadata": {}, "hash": "58ca3503262ed1d14158f2eef2b0a2792e42f348e2059b7c5e52a80d9ebff2d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cb326db-3a11-4be9-9126-f872f4443882", "node_type": "1", "metadata": {}, "hash": "d047ff8a3a8a2a5fa4f2bd7acd283de1665fe984e04f21e0ed529fd672e6377b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ebea4e9-d50d-4c52-a3df-f439b80308f9", "node_type": "1", "metadata": {}, "hash": "f9a4685b860d2e5a6d1452fb3e6d4774bb038937c54d03a8ea4227839684d13b", "class_name": "RelatedNodeInfo"}}, "text": "engineers did not get a Christmas bonus that year.", "start_char_idx": 0, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ebea4e9-d50d-4c52-a3df-f439b80308f9": {"__data__": {"id_": "4ebea4e9-d50d-4c52-a3df-f439b80308f9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49f6fc3e-08b1-4327-a96b-29fce6aeca1d", "node_type": "4", "metadata": {}, "hash": "f9a4685b860d2e5a6d1452fb3e6d4774bb038937c54d03a8ea4227839684d13b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "978f8971-84bd-479e-a5a7-2cea547d8274", "node_type": "1", "metadata": {}, "hash": "58ca3503262ed1d14158f2eef2b0a2792e42f348e2059b7c5e52a80d9ebff2d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db980414-5f39-4739-8d8f-0ec306f03c7f", "node_type": "1", "metadata": {}, "hash": "2e1ab34692275ee6dc3ecaf0a751371510aa1272caf209cb3567aa7a60019576", "class_name": "RelatedNodeInfo"}}, "text": "This story brings up a few points for everyone to ponder. How much cheaper would it have been to \ufb01x the bug in July 1994? What was the cost to repair the damage to Intel\u2019s reputation? And what is the corporate responsibility in disclosing bugs in a product so widely used and relied upon as a microprocessor?", "start_char_idx": 0, "end_char_idx": 308, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db980414-5f39-4739-8d8f-0ec306f03c7f": {"__data__": {"id_": "db980414-5f39-4739-8d8f-0ec306f03c7f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2e2f663f-db12-4e49-b0ea-268b9c20e742", "node_type": "4", "metadata": {}, "hash": "2e1ab34692275ee6dc3ecaf0a751371510aa1272caf209cb3567aa7a60019576", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ebea4e9-d50d-4c52-a3df-f439b80308f9", "node_type": "1", "metadata": {}, "hash": "f9a4685b860d2e5a6d1452fb3e6d4774bb038937c54d03a8ea4227839684d13b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9d0b528-dfcf-46ba-9099-b94309a9a937", "node_type": "1", "metadata": {}, "hash": "b08fe86ed343d158556a119a18e2d0c8f3554b431bb8488886297bf2ecb2a83a", "class_name": "RelatedNodeInfo"}}, "text": "3.10 Concluding Remarks Over the decades, computer arithmetic has become largely standardized, greatly enhancing the portability of programs. Two\u2019s complement binary integer arithmetic is found in every computer sold today, and if it includes \ufb02oating point support, it o\ufb00ers the IEEE 754 binary \ufb02oating-point arithmetic.", "start_char_idx": 0, "end_char_idx": 320, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9d0b528-dfcf-46ba-9099-b94309a9a937": {"__data__": {"id_": "c9d0b528-dfcf-46ba-9099-b94309a9a937", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "162404a0-fa14-47ce-b252-eafec752947c", "node_type": "4", "metadata": {}, "hash": "b08fe86ed343d158556a119a18e2d0c8f3554b431bb8488886297bf2ecb2a83a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db980414-5f39-4739-8d8f-0ec306f03c7f", "node_type": "1", "metadata": {}, "hash": "2e1ab34692275ee6dc3ecaf0a751371510aa1272caf209cb3567aa7a60019576", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1ac45fe1-82a7-4cc1-8711-6e3165da165d", "node_type": "1", "metadata": {}, "hash": "f360a0c62a7d62da42c3c0cf3d132ea8953f5a529b02005e2936f0800dcd3b5e", "class_name": "RelatedNodeInfo"}}, "text": "Computer arithmetic is distinguished from paper-and-pencil arithmetic by the constraints of limited precision. This limit may result in invalid operations through calculating numbers larger or smaller than the prede\ufb01ned limits. Such anomalies, called \u201cover\ufb02ow\u201d or \u201cunder\ufb02ow,\u201d may result in exceptions or interrupts, emergency events similar to unplanned subroutine calls. Chapters 4 and 5 discuss exceptions in more detail.", "start_char_idx": 0, "end_char_idx": 423, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1ac45fe1-82a7-4cc1-8711-6e3165da165d": {"__data__": {"id_": "1ac45fe1-82a7-4cc1-8711-6e3165da165d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "37deed86-eacc-403d-adab-ab74b101514a", "node_type": "4", "metadata": {}, "hash": "f360a0c62a7d62da42c3c0cf3d132ea8953f5a529b02005e2936f0800dcd3b5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9d0b528-dfcf-46ba-9099-b94309a9a937", "node_type": "1", "metadata": {}, "hash": "b08fe86ed343d158556a119a18e2d0c8f3554b431bb8488886297bf2ecb2a83a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14a19484-08cb-43a5-8aed-452685da43ca", "node_type": "1", "metadata": {}, "hash": "af1f3bfdfb10ff4c91e1c760034657dec10048cc180f08e5344f26b7a732d7db", "class_name": "RelatedNodeInfo"}}, "text": "Floating-point arithmetic has the added challenge of being an", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14a19484-08cb-43a5-8aed-452685da43ca": {"__data__": {"id_": "14a19484-08cb-43a5-8aed-452685da43ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3a33498f-cea9-419d-9b26-e72dd46864dc", "node_type": "4", "metadata": {}, "hash": "af1f3bfdfb10ff4c91e1c760034657dec10048cc180f08e5344f26b7a732d7db", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1ac45fe1-82a7-4cc1-8711-6e3165da165d", "node_type": "1", "metadata": {}, "hash": "f360a0c62a7d62da42c3c0cf3d132ea8953f5a529b02005e2936f0800dcd3b5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8e6883b-e71e-4b80-a154-2c104338c25e", "node_type": "1", "metadata": {}, "hash": "91c782b061b6f8f5aafb16e5ca19a3f7434be116311b5fbe5157f1fa6529470c", "class_name": "RelatedNodeInfo"}}, "text": "approximation of real numbers, and care needs to be taken to ensure that the computer number selected is the representation closest to the actual number. The challenges of imprecision and limited representation of \ufb02oating point are part of the inspiration for the \ufb01eld of numerical analysis. The recent switch to parallelism shines the searchlight on numerical analysis again, as solutions that were long considered safe on sequential computers must be reconsidered when trying to \ufb01nd the fastest algorithm for parallel computers that still achieves a correct result.", "start_char_idx": 0, "end_char_idx": 567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8e6883b-e71e-4b80-a154-2c104338c25e": {"__data__": {"id_": "d8e6883b-e71e-4b80-a154-2c104338c25e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a3a4201a-dfce-4105-b7f7-47d63448e1f8", "node_type": "4", "metadata": {}, "hash": "91c782b061b6f8f5aafb16e5ca19a3f7434be116311b5fbe5157f1fa6529470c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14a19484-08cb-43a5-8aed-452685da43ca", "node_type": "1", "metadata": {}, "hash": "af1f3bfdfb10ff4c91e1c760034657dec10048cc180f08e5344f26b7a732d7db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "474fdb5f-921c-45c4-8728-e1367e8c67ab", "node_type": "1", "metadata": {}, "hash": "be55378fa3bc1be46c09400cea854359daf4ce02fd47e3615740c2a248ff71c6", "class_name": "RelatedNodeInfo"}}, "text": "Data-level parallelism, speci\ufb01cally subword parallelism, o\ufb00ers a simple path to higher performance for programs that are intensive in arithmetic operations for either integer or \ufb02oating-point data. We showed that we could speed up matrix multiply nearly eightfold by using instructions that could execute eight \ufb02oating-point operations at a time.", "start_char_idx": 0, "end_char_idx": 346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "474fdb5f-921c-45c4-8728-e1367e8c67ab": {"__data__": {"id_": "474fdb5f-921c-45c4-8728-e1367e8c67ab", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "471f4225-90b9-4878-8365-3bf982089078", "node_type": "4", "metadata": {}, "hash": "be55378fa3bc1be46c09400cea854359daf4ce02fd47e3615740c2a248ff71c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8e6883b-e71e-4b80-a154-2c104338c25e", "node_type": "1", "metadata": {}, "hash": "91c782b061b6f8f5aafb16e5ca19a3f7434be116311b5fbe5157f1fa6529470c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0aba9212-eeef-4f6c-a40a-0011d4286ebd", "node_type": "1", "metadata": {}, "hash": "7dda54ded4da19f9feaf8248d9606705190ce709383c4b5021b3a85c88958156", "class_name": "RelatedNodeInfo"}}, "text": "With the explanation of computer arithmetic in this chapter comes a description of much more of the MIPS instruction set. One point of confusion is the instructions covered in these chapters versus instructions executed by MIPS chips versus the instructions accepted by MIPS assemblers. Two \ufb01gures try to clarify.", "start_char_idx": 0, "end_char_idx": 313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0aba9212-eeef-4f6c-a40a-0011d4286ebd": {"__data__": {"id_": "0aba9212-eeef-4f6c-a40a-0011d4286ebd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "013baaef-80d9-4422-9acc-990b85c91030", "node_type": "4", "metadata": {}, "hash": "7dda54ded4da19f9feaf8248d9606705190ce709383c4b5021b3a85c88958156", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "474fdb5f-921c-45c4-8728-e1367e8c67ab", "node_type": "1", "metadata": {}, "hash": "be55378fa3bc1be46c09400cea854359daf4ce02fd47e3615740c2a248ff71c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c68300de-2fda-4dc8-adea-eb7a1a033831", "node_type": "1", "metadata": {}, "hash": "3d71e0767c52e9cfdf725a1a90f764011b42ba71f40740e370e271c15b90f707", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.24 lists the MIPS instructions covered in this chapter and Chapter 2. We call the set of instructions on the left-hand side of the", "start_char_idx": 0, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c68300de-2fda-4dc8-adea-eb7a1a033831": {"__data__": {"id_": "c68300de-2fda-4dc8-adea-eb7a1a033831", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0c4b9f19-2787-471d-8867-b48deb143cb4", "node_type": "4", "metadata": {}, "hash": "3d71e0767c52e9cfdf725a1a90f764011b42ba71f40740e370e271c15b90f707", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0aba9212-eeef-4f6c-a40a-0011d4286ebd", "node_type": "1", "metadata": {}, "hash": "7dda54ded4da19f9feaf8248d9606705190ce709383c4b5021b3a85c88958156", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "760cd42c-d546-4f3d-b6d4-7f7828bd338f", "node_type": "1", "metadata": {}, "hash": "176535788c15b3cfb508e2a0d7d94bec4c353475c073b932c051354d587aaed4", "class_name": "RelatedNodeInfo"}}, "text": "\ufb01gure the MIPS core. The instructions on the right we call the MIPS arithmetic core. On the left of Figure 3.25 are the instructions the MIPS processor executes that are not found in Figure 3.24. We call the full set of hardware instructions MIPS-32. On the right of Figure 3.25 are the instructions accepted by the assembler that are not part of MIPS- 32. We call this set of instructions Pseudo MIPS.", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "760cd42c-d546-4f3d-b6d4-7f7828bd338f": {"__data__": {"id_": "760cd42c-d546-4f3d-b6d4-7f7828bd338f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "79523b60-295d-4eb9-aba6-63299ca66d2a", "node_type": "4", "metadata": {}, "hash": "176535788c15b3cfb508e2a0d7d94bec4c353475c073b932c051354d587aaed4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c68300de-2fda-4dc8-adea-eb7a1a033831", "node_type": "1", "metadata": {}, "hash": "3d71e0767c52e9cfdf725a1a90f764011b42ba71f40740e370e271c15b90f707", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7e97849-f474-44b6-b9ca-657e1359745a", "node_type": "1", "metadata": {}, "hash": "ee6fe29cadbc3afd1053f8d181258dfb356e1c60f1a069a42545c8648df4a304", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.24 The MIPS instruction set. This book concentrates on the instructions in the left column. This information is also found in columns 1 and 2 of the MIPS Reference Data Card at the front of this book.", "start_char_idx": 0, "end_char_idx": 209, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7e97849-f474-44b6-b9ca-657e1359745a": {"__data__": {"id_": "b7e97849-f474-44b6-b9ca-657e1359745a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2a3d17ab-d57e-48a1-b8ae-936cc3d5c5a6", "node_type": "4", "metadata": {}, "hash": "ee6fe29cadbc3afd1053f8d181258dfb356e1c60f1a069a42545c8648df4a304", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "760cd42c-d546-4f3d-b6d4-7f7828bd338f", "node_type": "1", "metadata": {}, "hash": "176535788c15b3cfb508e2a0d7d94bec4c353475c073b932c051354d587aaed4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96f661e4-8286-44ba-80b2-f57280a4eb63", "node_type": "1", "metadata": {}, "hash": "88bfbc794729930ed2d9fd3c691fb161788799173ef5cb292c67324034c495e1", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.25 Remaining MIPS-32 and Pseudo MIPS instruction sets. f means single (s) or double (d) precision floating-point instructions, and s means signed and unsigned (u) versions. MIPS-32 also has FP instructions for multiply and add/sub (madd.f/ msub.f), ceiling (ceil.f), truncate (trunc.f), round (round.f), and reciprocal (recip.f). The underscore represents the letter to include to represent that datatype.", "start_char_idx": 0, "end_char_idx": 414, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96f661e4-8286-44ba-80b2-f57280a4eb63": {"__data__": {"id_": "96f661e4-8286-44ba-80b2-f57280a4eb63", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "14e4234a-78d5-4a82-984f-2f9759bea084", "node_type": "4", "metadata": {}, "hash": "88bfbc794729930ed2d9fd3c691fb161788799173ef5cb292c67324034c495e1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7e97849-f474-44b6-b9ca-657e1359745a", "node_type": "1", "metadata": {}, "hash": "ee6fe29cadbc3afd1053f8d181258dfb356e1c60f1a069a42545c8648df4a304", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0899ba1c-e0d4-480f-9467-b97bc01ef26b", "node_type": "1", "metadata": {}, "hash": "eebe2d81a277f560d9ad5f570c34e7f83d49a4f6c835eeb9b8446d4dc32a93af", "class_name": "RelatedNodeInfo"}}, "text": "Figure 3.26 gives the popularity of the MIPS instructions for SPEC CPU2006 integer and \ufb02oating-point benchmarks. All instructions are listed that were responsible for at least 0.2% of the instructions executed.", "start_char_idx": 0, "end_char_idx": 210, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0899ba1c-e0d4-480f-9467-b97bc01ef26b": {"__data__": {"id_": "0899ba1c-e0d4-480f-9467-b97bc01ef26b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87152af3-1041-4b27-8db4-282bcc5d2bc8", "node_type": "4", "metadata": {}, "hash": "eebe2d81a277f560d9ad5f570c34e7f83d49a4f6c835eeb9b8446d4dc32a93af", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96f661e4-8286-44ba-80b2-f57280a4eb63", "node_type": "1", "metadata": {}, "hash": "88bfbc794729930ed2d9fd3c691fb161788799173ef5cb292c67324034c495e1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70461268-b93a-4a45-9a04-9cf9d31a3478", "node_type": "1", "metadata": {}, "hash": "87c9bc5fa5b628bc18dedb86dc5bdfaec07a3951276acc16df8ffb998566e884", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.26 The frequency of the MIPS instructions for SPEC CPU2006 integer and floating point. All instructions that accounted for at least 0.2% of the instructions are included in the table. Pseudoinstructions are converted into MIPS-32 before execution, and hence do not appear here.", "start_char_idx": 0, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70461268-b93a-4a45-9a04-9cf9d31a3478": {"__data__": {"id_": "70461268-b93a-4a45-9a04-9cf9d31a3478", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc370c6d-a337-45ee-9f30-aa0e5f0e5a2c", "node_type": "4", "metadata": {}, "hash": "87c9bc5fa5b628bc18dedb86dc5bdfaec07a3951276acc16df8ffb998566e884", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0899ba1c-e0d4-480f-9467-b97bc01ef26b", "node_type": "1", "metadata": {}, "hash": "eebe2d81a277f560d9ad5f570c34e7f83d49a4f6c835eeb9b8446d4dc32a93af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8f2e1b2-020b-4935-8b78-2bc0d12c9637", "node_type": "1", "metadata": {}, "hash": "43f05bfb12ee528073814e3f6f54929af8fb88f40fb18c2e9eb2fe3f485d937d", "class_name": "RelatedNodeInfo"}}, "text": "Note that although programmers and compiler writers may use MIPS-32 to have a richer menu of options, MIPS core instructions dominate integer SPEC CPU2006 execution, and the integer core plus arithmetic core dominate SPEC CPU2006 \ufb02oating point, as the table below shows.", "start_char_idx": 0, "end_char_idx": 270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8f2e1b2-020b-4935-8b78-2bc0d12c9637": {"__data__": {"id_": "b8f2e1b2-020b-4935-8b78-2bc0d12c9637", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b3bdecc-c78f-4cd4-b21f-a6907f46af2a", "node_type": "4", "metadata": {}, "hash": "43f05bfb12ee528073814e3f6f54929af8fb88f40fb18c2e9eb2fe3f485d937d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70461268-b93a-4a45-9a04-9cf9d31a3478", "node_type": "1", "metadata": {}, "hash": "87c9bc5fa5b628bc18dedb86dc5bdfaec07a3951276acc16df8ffb998566e884", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3cd71a25-0c78-4b8e-b485-f710aeafc388", "node_type": "1", "metadata": {}, "hash": "8a028d6694a969b19ca25aeb9a04b04f60bffcb6d5a3fade92566a15a7b9439b", "class_name": "RelatedNodeInfo"}}, "text": "Instruction subset MIPS core MIPS arithmetic core Remaining MIPS-32", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cd71a25-0c78-4b8e-b485-f710aeafc388": {"__data__": {"id_": "3cd71a25-0c78-4b8e-b485-f710aeafc388", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5fdd0093-11bd-4d94-9d10-14ceac5efe1f", "node_type": "4", "metadata": {}, "hash": "8a028d6694a969b19ca25aeb9a04b04f60bffcb6d5a3fade92566a15a7b9439b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b8f2e1b2-020b-4935-8b78-2bc0d12c9637", "node_type": "1", "metadata": {}, "hash": "43f05bfb12ee528073814e3f6f54929af8fb88f40fb18c2e9eb2fe3f485d937d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b32bc358-c420-4581-a9f5-cb7cbfce1bf7", "node_type": "1", "metadata": {}, "hash": "958db34fecc90e88f84c789bf07d37ae3b1d1eac9e5c1da853c5ed91b586c657", "class_name": "RelatedNodeInfo"}}, "text": "For the rest of the book, we concentrate on the MIPS core", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b32bc358-c420-4581-a9f5-cb7cbfce1bf7": {"__data__": {"id_": "b32bc358-c420-4581-a9f5-cb7cbfce1bf7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c08955c-f7b7-4801-a5ac-9754c0274974", "node_type": "4", "metadata": {}, "hash": "958db34fecc90e88f84c789bf07d37ae3b1d1eac9e5c1da853c5ed91b586c657", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3cd71a25-0c78-4b8e-b485-f710aeafc388", "node_type": "1", "metadata": {}, "hash": "8a028d6694a969b19ca25aeb9a04b04f60bffcb6d5a3fade92566a15a7b9439b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f1b63af-d6ec-4000-b231-7d86c5a92af9", "node_type": "1", "metadata": {}, "hash": "8f233a1b6035980f29b964d99ec599cfb700c3d94297f03d6d6b8fce38657ef8", "class_name": "RelatedNodeInfo"}}, "text": "instructions\u2014the integer instruction set excluding multiply and divide\u2014to make the explanation of computer design easier. As you can see, the MIPS core includes the most popular MIPS instructions; be assured that understanding a computer that runs the MIPS core will give you su\ufb03cient background to understand even more ambitious computers. No ma\u0000er what the instruction set or its size\u2014 MIPS, RISC-V, ARM, x86\u2014never forget that bit pa\u0000erns have no", "start_char_idx": 0, "end_char_idx": 448, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f1b63af-d6ec-4000-b231-7d86c5a92af9": {"__data__": {"id_": "8f1b63af-d6ec-4000-b231-7d86c5a92af9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "efed5c48-aa4b-4fdf-9c41-abbb63b56d2c", "node_type": "4", "metadata": {}, "hash": "8f233a1b6035980f29b964d99ec599cfb700c3d94297f03d6d6b8fce38657ef8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b32bc358-c420-4581-a9f5-cb7cbfce1bf7", "node_type": "1", "metadata": {}, "hash": "958db34fecc90e88f84c789bf07d37ae3b1d1eac9e5c1da853c5ed91b586c657", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8ed3f84-72a8-4af1-b960-c54c5bb860d6", "node_type": "1", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}}, "text": "inherent meaning. The same bit pa\u0000ern may represent a signed integer, unsigned integer, \ufb02oating-point number, string, instruction, and so on. In stored program computers, it is the operation on the bit pa\u0000ern that determines its meaning.", "start_char_idx": 0, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c8ed3f84-72a8-4af1-b960-c54c5bb860d6": {"__data__": {"id_": "c8ed3f84-72a8-4af1-b960-c54c5bb860d6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9633b11c-bed9-4856-b69f-05d7fe17d2bb", "node_type": "4", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f1b63af-d6ec-4000-b231-7d86c5a92af9", "node_type": "1", "metadata": {}, "hash": "8f233a1b6035980f29b964d99ec599cfb700c3d94297f03d6d6b8fce38657ef8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6", "node_type": "1", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}}, "text": "Gresham\u2019s Law (\u201cBad money drives out Good\u201d) for computers would say, \u201cThe Fast drives out the Slow even if the Fast is wrong.\u201d", "start_char_idx": 0, "end_char_idx": 126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6": {"__data__": {"id_": "a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "51d90e54-fc9c-4ca1-9f85-8892b61cb4e4", "node_type": "4", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8ed3f84-72a8-4af1-b960-c54c5bb860d6", "node_type": "1", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76706fa0-08c7-4220-b00c-7619186ab0d5", "node_type": "1", "metadata": {}, "hash": "34a7d6a9fd2771a1e944af0fc3cfacfad71dedbf2b5552ee3f7ff5bee1927f5e", "class_name": "RelatedNodeInfo"}}, "text": "This section surveys the history of the \ufb02oating point going back to", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76706fa0-08c7-4220-b00c-7619186ab0d5": {"__data__": {"id_": "76706fa0-08c7-4220-b00c-7619186ab0d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8aa31f74-a576-4c71-939c-2477191db8f3", "node_type": "4", "metadata": {}, "hash": "34a7d6a9fd2771a1e944af0fc3cfacfad71dedbf2b5552ee3f7ff5bee1927f5e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6", "node_type": "1", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "931f9933-f43f-4320-9e3e-4173c42000dc", "node_type": "1", "metadata": {}, "hash": "1fba66ba2f3e5d1f045d7d79be35aa3cb57c44abb6460721bf44d90e73c72e52", "class_name": "RelatedNodeInfo"}}, "text": "von Neumann, including the surprisingly controversial IEEE standards e\ufb00ort, plus the rationale for the 80-bit stack architecture", "start_char_idx": 0, "end_char_idx": 128, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "931f9933-f43f-4320-9e3e-4173c42000dc": {"__data__": {"id_": "931f9933-f43f-4320-9e3e-4173c42000dc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "055c3e07-d67c-4b0f-9d6f-b0c04a3292a2", "node_type": "4", "metadata": {}, "hash": "1fba66ba2f3e5d1f045d7d79be35aa3cb57c44abb6460721bf44d90e73c72e52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76706fa0-08c7-4220-b00c-7619186ab0d5", "node_type": "1", "metadata": {}, "hash": "34a7d6a9fd2771a1e944af0fc3cfacfad71dedbf2b5552ee3f7ff5bee1927f5e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "663369ab-aa89-40c0-8c13-8d4b42ea0a46", "node_type": "1", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}}, "text": "for \ufb02oating point in the x86. See the rest of", "start_char_idx": 0, "end_char_idx": 45, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "663369ab-aa89-40c0-8c13-8d4b42ea0a46": {"__data__": {"id_": "663369ab-aa89-40c0-8c13-8d4b42ea0a46", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a6efe3d1-568e-4c8b-9899-362cde302292", "node_type": "4", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "931f9933-f43f-4320-9e3e-4173c42000dc", "node_type": "1", "metadata": {}, "hash": "1fba66ba2f3e5d1f045d7d79be35aa3cb57c44abb6460721bf44d90e73c72e52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdabf7d8-7edb-4848-b0f9-f5dda2ea4294", "node_type": "1", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}}, "text": "Gresham\u2019s Law (\u201cBad money drives out Good\u201d) for computers would say, \u201cThe Fast drives out the Slow even if the Fast is wrong.\u201d", "start_char_idx": 0, "end_char_idx": 126, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdabf7d8-7edb-4848-b0f9-f5dda2ea4294": {"__data__": {"id_": "cdabf7d8-7edb-4848-b0f9-f5dda2ea4294", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cfc51d70-ea96-4c1e-adaa-1619bd764c8c", "node_type": "4", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "663369ab-aa89-40c0-8c13-8d4b42ea0a46", "node_type": "1", "metadata": {}, "hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fb6b75da-774b-428e-8886-d5c4c94450bd", "node_type": "1", "metadata": {}, "hash": "d4311bc73a1218ec056d7ade22fa5ed4aba3fc5ec836f81060c7930621c496eb", "class_name": "RelatedNodeInfo"}}, "text": "This section surveys the history of the \ufb02oating point going back to", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fb6b75da-774b-428e-8886-d5c4c94450bd": {"__data__": {"id_": "fb6b75da-774b-428e-8886-d5c4c94450bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e91df77f-9e99-4e4a-8afd-bdcfa313bf3b", "node_type": "4", "metadata": {}, "hash": "d4311bc73a1218ec056d7ade22fa5ed4aba3fc5ec836f81060c7930621c496eb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cdabf7d8-7edb-4848-b0f9-f5dda2ea4294", "node_type": "1", "metadata": {}, "hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41ec9e62-6c19-4a53-8284-8e41173afe81", "node_type": "1", "metadata": {}, "hash": "491cff3e16373a97f524b6c11ac9282209ff0b0b8e74674487c230219559c3e5", "class_name": "RelatedNodeInfo"}}, "text": "von Neumann, including the surprisingly controversial IEEE standards e\ufb00ort, the rationale for the 80-bit stack architecture for \ufb02oating point in the IA-32, and an update on the next round of the standard.", "start_char_idx": 0, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41ec9e62-6c19-4a53-8284-8e41173afe81": {"__data__": {"id_": "41ec9e62-6c19-4a53-8284-8e41173afe81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4f1b3794-00ae-47d3-a5d9-2f9d78933060", "node_type": "4", "metadata": {}, "hash": "491cff3e16373a97f524b6c11ac9282209ff0b0b8e74674487c230219559c3e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fb6b75da-774b-428e-8886-d5c4c94450bd", "node_type": "1", "metadata": {}, "hash": "d4311bc73a1218ec056d7ade22fa5ed4aba3fc5ec836f81060c7930621c496eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "535f9539-dcd3-4a26-b53d-a25b4942dc59", "node_type": "1", "metadata": {}, "hash": "a15a4ca7b439baa6629c9ab8e7fca44379fc07a5492db687e642a5665fedde55", "class_name": "RelatedNodeInfo"}}, "text": "At \ufb01rst it may be hard to imagine a subject of less excitement than", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "535f9539-dcd3-4a26-b53d-a25b4942dc59": {"__data__": {"id_": "535f9539-dcd3-4a26-b53d-a25b4942dc59", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "914f47a9-3e48-40e6-8014-e250004b0b59", "node_type": "4", "metadata": {}, "hash": "a15a4ca7b439baa6629c9ab8e7fca44379fc07a5492db687e642a5665fedde55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41ec9e62-6c19-4a53-8284-8e41173afe81", "node_type": "1", "metadata": {}, "hash": "491cff3e16373a97f524b6c11ac9282209ff0b0b8e74674487c230219559c3e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9ff101e-95c5-4d71-9bef-e4f02280916c", "node_type": "1", "metadata": {}, "hash": "ee25a85fa6e36cf8da97d17700c39399944aa0c07a3a29119319fa7462c01d21", "class_name": "RelatedNodeInfo"}}, "text": "the correctness of computer arithmetic or its accuracy, and harder still to understand why a subject so old and mathematical should be so controversial. Computer arithmetic is as old as computing itself, and some of the subject\u2019s earliest notions, like the economical reuse of registers during serial multiplication and division, still command respect today. Maurice Wilkes [1985] recalled a conversation about that notion during his visit to the United States in 1946, before the earliest stored-program computer had been built:", "start_char_idx": 0, "end_char_idx": 529, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9ff101e-95c5-4d71-9bef-e4f02280916c": {"__data__": {"id_": "d9ff101e-95c5-4d71-9bef-e4f02280916c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e00fc259-3b84-4823-92af-13cee59a06c4", "node_type": "4", "metadata": {}, "hash": "ee25a85fa6e36cf8da97d17700c39399944aa0c07a3a29119319fa7462c01d21", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "535f9539-dcd3-4a26-b53d-a25b4942dc59", "node_type": "1", "metadata": {}, "hash": "a15a4ca7b439baa6629c9ab8e7fca44379fc07a5492db687e642a5665fedde55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "042ddd3d-4100-4aea-8caf-2bc4da9627b7", "node_type": "1", "metadata": {}, "hash": "c0ff6a86cdfb51d9d48fe31e9fa143c7a216316e32f519854d7cd694d3358335", "class_name": "RelatedNodeInfo"}}, "text": "\u2026 a project under von Neumann was to be set up at the Institute of Advanced Studies in Princeton\u2026. Goldstine explained to me the principal features of the design, including the device whereby the digits of the multiplier were put into the tail of the accumulator and shifted out as the least signi\ufb01cant part of the product was shifted in. I expressed some admiration at the way registers and shifting circuits were arranged \u2026 and Goldstine remarked that things of that nature came very easily to von Neumann.", "start_char_idx": 0, "end_char_idx": 508, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "042ddd3d-4100-4aea-8caf-2bc4da9627b7": {"__data__": {"id_": "042ddd3d-4100-4aea-8caf-2bc4da9627b7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "69da750a-dec4-4133-a2c5-55673606ecc7", "node_type": "4", "metadata": {}, "hash": "c0ff6a86cdfb51d9d48fe31e9fa143c7a216316e32f519854d7cd694d3358335", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9ff101e-95c5-4d71-9bef-e4f02280916c", "node_type": "1", "metadata": {}, "hash": "ee25a85fa6e36cf8da97d17700c39399944aa0c07a3a29119319fa7462c01d21", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "670cb058-34d1-4617-8e69-2c5f11b9a16b", "node_type": "1", "metadata": {}, "hash": "0897d9b99e3070f4a255c6397a95f94ae1f8c3e238b8fe74623255ea0de084ab", "class_name": "RelatedNodeInfo"}}, "text": "There is no controversy here; it can hardly arise in the context of", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "670cb058-34d1-4617-8e69-2c5f11b9a16b": {"__data__": {"id_": "670cb058-34d1-4617-8e69-2c5f11b9a16b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d21f4840-c466-4003-9c16-c97a648089a9", "node_type": "4", "metadata": {}, "hash": "0897d9b99e3070f4a255c6397a95f94ae1f8c3e238b8fe74623255ea0de084ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "042ddd3d-4100-4aea-8caf-2bc4da9627b7", "node_type": "1", "metadata": {}, "hash": "c0ff6a86cdfb51d9d48fe31e9fa143c7a216316e32f519854d7cd694d3358335", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6efebdf2-398b-4bf0-ac31-71b67806590b", "node_type": "1", "metadata": {}, "hash": "9a72bbc7a33ca535e16cda23eb0e7e6a77dad8c797586ee38c465e6ca1f61251", "class_name": "RelatedNodeInfo"}}, "text": "exact integer arithmetic, so long as there is general agreement on what integer the correct result should be. However, as soon as", "start_char_idx": 0, "end_char_idx": 129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6efebdf2-398b-4bf0-ac31-71b67806590b": {"__data__": {"id_": "6efebdf2-398b-4bf0-ac31-71b67806590b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "62854b93-5007-46ec-a88c-e7cdaa7198fc", "node_type": "4", "metadata": {}, "hash": "9a72bbc7a33ca535e16cda23eb0e7e6a77dad8c797586ee38c465e6ca1f61251", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "670cb058-34d1-4617-8e69-2c5f11b9a16b", "node_type": "1", "metadata": {}, "hash": "0897d9b99e3070f4a255c6397a95f94ae1f8c3e238b8fe74623255ea0de084ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8ecfb7a4-1d53-4418-8911-772ef47feab4", "node_type": "1", "metadata": {}, "hash": "488a33cfe401cb64687edf57ac2c0a7c1e2e51f44ab9f607b74372790c1ce3f6", "class_name": "RelatedNodeInfo"}}, "text": "approximate arithmetic enters the picture, so does controversy, as if one person\u2019s \u201cnegligible\u201d must be another\u2019s \u201ceverything.\u201d", "start_char_idx": 0, "end_char_idx": 127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ecfb7a4-1d53-4418-8911-772ef47feab4": {"__data__": {"id_": "8ecfb7a4-1d53-4418-8911-772ef47feab4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41b947dd-8695-49e8-bc86-f8141dae7dbc", "node_type": "4", "metadata": {}, "hash": "488a33cfe401cb64687edf57ac2c0a7c1e2e51f44ab9f607b74372790c1ce3f6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6efebdf2-398b-4bf0-ac31-71b67806590b", "node_type": "1", "metadata": {}, "hash": "9a72bbc7a33ca535e16cda23eb0e7e6a77dad8c797586ee38c465e6ca1f61251", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b89b768-0ac6-4ead-87b0-6c05576b6a64", "node_type": "1", "metadata": {}, "hash": "f74ee39e408e129ef13ff900dbf709da561687f2f3ee7ac12e377697f8e77484", "class_name": "RelatedNodeInfo"}}, "text": "The First Dispute Floating-point arithmetic kindled disagreement before it was ever built. John von Neumann was aware of Konrad Zuse\u2019s proposal for a computer in Germany in 1939 that was never built, probably because the \ufb02oating point made it appear too complicated to \ufb01nish before the Germans expected World War II to end. Hence, von Neumann refused to include it in the computer he built at Princeton. In an in\ufb02uential report coauthored in 1946 with H. H. Goldstine and A. W. Burks, he gave the arguments for and against \ufb02oating point. In favor:", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b89b768-0ac6-4ead-87b0-6c05576b6a64": {"__data__": {"id_": "5b89b768-0ac6-4ead-87b0-6c05576b6a64", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6527d36d-870c-4af9-a589-736cfc1dd15c", "node_type": "4", "metadata": {}, "hash": "f74ee39e408e129ef13ff900dbf709da561687f2f3ee7ac12e377697f8e77484", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8ecfb7a4-1d53-4418-8911-772ef47feab4", "node_type": "1", "metadata": {}, "hash": "488a33cfe401cb64687edf57ac2c0a7c1e2e51f44ab9f607b74372790c1ce3f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b1012eb-7d30-4db5-8147-5c832852be5e", "node_type": "1", "metadata": {}, "hash": "fd182d4ebb45bbdfe287aad5d8b68cc11a188566de78a30c61f37ab51d9ef3e9", "class_name": "RelatedNodeInfo"}}, "text": "\u2026 to retain in a sum or product as many signi\ufb01cant digits as possible and \u2026 to free the human operator from the burden of estimating and inserting into a problem \u201cscale factors\u201d\u2014multiplication constants which serve to keep numbers within the limits of the machine.", "start_char_idx": 0, "end_char_idx": 264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b1012eb-7d30-4db5-8147-5c832852be5e": {"__data__": {"id_": "2b1012eb-7d30-4db5-8147-5c832852be5e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b61660b0-c417-409d-8368-9763e8761cdf", "node_type": "4", "metadata": {}, "hash": "fd182d4ebb45bbdfe287aad5d8b68cc11a188566de78a30c61f37ab51d9ef3e9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b89b768-0ac6-4ead-87b0-6c05576b6a64", "node_type": "1", "metadata": {}, "hash": "f74ee39e408e129ef13ff900dbf709da561687f2f3ee7ac12e377697f8e77484", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c96d7fed-0eca-402e-a5fc-a807226d1ee1", "node_type": "1", "metadata": {}, "hash": "5109d5276d2b577e8986063262a8ac2b24f50f6f5b6a7ebb93283b8508d3e1d1", "class_name": "RelatedNodeInfo"}}, "text": "Floating point was excluded for several reasons:", "start_char_idx": 0, "end_char_idx": 48, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c96d7fed-0eca-402e-a5fc-a807226d1ee1": {"__data__": {"id_": "c96d7fed-0eca-402e-a5fc-a807226d1ee1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76636a41-96f7-477e-99f8-7f106b00386f", "node_type": "4", "metadata": {}, "hash": "5109d5276d2b577e8986063262a8ac2b24f50f6f5b6a7ebb93283b8508d3e1d1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b1012eb-7d30-4db5-8147-5c832852be5e", "node_type": "1", "metadata": {}, "hash": "fd182d4ebb45bbdfe287aad5d8b68cc11a188566de78a30c61f37ab51d9ef3e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e", "node_type": "1", "metadata": {}, "hash": "61926c9932dfb2b7c9749ada31ab0b355e5fef3cffcfc15811b19d8667a071ed", "class_name": "RelatedNodeInfo"}}, "text": "There is, of course, no denying the fact that human time is consumed in arranging for the introduction of suitable scale factors. We only argue that the time consumed is a very small percentage of the total time we will spend in preparing an interesting problem for our machine. The \ufb01rst advantage of the \ufb02oating point is, we feel, somewhat illusory. In order to have such a \ufb02oating point, one must waste memory capacity which could otherwise be used for carrying more digits per word. It would therefore seem to us not at all clear whether the modest advantages of a \ufb02oating binary point o\ufb00set the loss of memory capacity and the increased complexity of the arithmetic and control circuits.", "start_char_idx": 0, "end_char_idx": 691, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e": {"__data__": {"id_": "0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9062b593-4fb9-4a8d-a46f-489136e2757e", "node_type": "4", "metadata": {}, "hash": "61926c9932dfb2b7c9749ada31ab0b355e5fef3cffcfc15811b19d8667a071ed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c96d7fed-0eca-402e-a5fc-a807226d1ee1", "node_type": "1", "metadata": {}, "hash": "5109d5276d2b577e8986063262a8ac2b24f50f6f5b6a7ebb93283b8508d3e1d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2352f851-ae29-4e2d-9c5b-8230c246bb7d", "node_type": "1", "metadata": {}, "hash": "49e60fe36371647a1df57bc032a746cb5a77a34930538899b676e7ee88937167", "class_name": "RelatedNodeInfo"}}, "text": "The argument seems to be that most bits devoted to exponent", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2352f851-ae29-4e2d-9c5b-8230c246bb7d": {"__data__": {"id_": "2352f851-ae29-4e2d-9c5b-8230c246bb7d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8af74841-8852-4a98-92c9-3893518a07cd", "node_type": "4", "metadata": {}, "hash": "49e60fe36371647a1df57bc032a746cb5a77a34930538899b676e7ee88937167", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e", "node_type": "1", "metadata": {}, "hash": "61926c9932dfb2b7c9749ada31ab0b355e5fef3cffcfc15811b19d8667a071ed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4e990513-f077-443d-8eb0-239b6b884b74", "node_type": "1", "metadata": {}, "hash": "a48081bd677949d5bf59cb61a17147c2f24341f0a6c27a4658c53dd8100d91c1", "class_name": "RelatedNodeInfo"}}, "text": "\ufb01elds would be bits wasted. Experience has proved otherwise.", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e990513-f077-443d-8eb0-239b6b884b74": {"__data__": {"id_": "4e990513-f077-443d-8eb0-239b6b884b74", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "248523cc-c6fd-4638-9b7d-a7e15f35ee09", "node_type": "4", "metadata": {}, "hash": "a48081bd677949d5bf59cb61a17147c2f24341f0a6c27a4658c53dd8100d91c1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2352f851-ae29-4e2d-9c5b-8230c246bb7d", "node_type": "1", "metadata": {}, "hash": "49e60fe36371647a1df57bc032a746cb5a77a34930538899b676e7ee88937167", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "092ac622-b659-404d-9bed-32e908023740", "node_type": "1", "metadata": {}, "hash": "58f1d4be9d83784a9bee458315fad0a98732e4f6add70c5020fda5072735a17f", "class_name": "RelatedNodeInfo"}}, "text": "One software approach to accommodate reals without \ufb02oating- point hardware was called \ufb02oating vectors; the idea was to compute at runtime one scale factor for a whole array of numbers, choosing the", "start_char_idx": 0, "end_char_idx": 197, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "092ac622-b659-404d-9bed-32e908023740": {"__data__": {"id_": "092ac622-b659-404d-9bed-32e908023740", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0643e76a-b5e8-48e5-abf8-7fac93eb7426", "node_type": "4", "metadata": {}, "hash": "58f1d4be9d83784a9bee458315fad0a98732e4f6add70c5020fda5072735a17f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e990513-f077-443d-8eb0-239b6b884b74", "node_type": "1", "metadata": {}, "hash": "a48081bd677949d5bf59cb61a17147c2f24341f0a6c27a4658c53dd8100d91c1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0b1c548d-640b-4730-a4da-6c447278207e", "node_type": "1", "metadata": {}, "hash": "e0d46f8e822b95dbbe21094b6105996b429507299c7225b13767be85efbca449", "class_name": "RelatedNodeInfo"}}, "text": "scale factor so that the array\u2019s biggest number would barely \ufb01ll its \ufb01eld. By 1951, James H. Wilkinson had used this scheme extensively for matrix computations. The problem proved to be that a program might encounter a very large value, and hence the scale factor must accommodate these rare large numbers. The common numbers would thus have many leading 0s, since all numbers had to use a single scale factor. Accuracy was sacri\ufb01ced, because the least signi\ufb01cant bits had to be lost on the right to accommodate leading 0s. This wastage became obvious to practitioners on early computers that displayed all their memory bits as dots on cathode ray tubes (like TV screens) because the loss of precision was visible. Where \ufb02oating point deserved to be used, no practical alternative existed.", "start_char_idx": 0, "end_char_idx": 789, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b1c548d-640b-4730-a4da-6c447278207e": {"__data__": {"id_": "0b1c548d-640b-4730-a4da-6c447278207e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "568812a2-43d2-409c-9890-c37360e4e771", "node_type": "4", "metadata": {}, "hash": "e0d46f8e822b95dbbe21094b6105996b429507299c7225b13767be85efbca449", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "092ac622-b659-404d-9bed-32e908023740", "node_type": "1", "metadata": {}, "hash": "58f1d4be9d83784a9bee458315fad0a98732e4f6add70c5020fda5072735a17f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e164c41a-fd19-460a-853b-153899165a12", "node_type": "1", "metadata": {}, "hash": "4379987b9cf34fd0faab3a4d9c20c125b4ad4113fa994724c845a4ac699f5359", "class_name": "RelatedNodeInfo"}}, "text": "Thus, true \ufb02oating-point hardware became popular because it was", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e164c41a-fd19-460a-853b-153899165a12": {"__data__": {"id_": "e164c41a-fd19-460a-853b-153899165a12", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7913d9f-292f-4803-a3ed-fa90bafb7501", "node_type": "4", "metadata": {}, "hash": "4379987b9cf34fd0faab3a4d9c20c125b4ad4113fa994724c845a4ac699f5359", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b1c548d-640b-4730-a4da-6c447278207e", "node_type": "1", "metadata": {}, "hash": "e0d46f8e822b95dbbe21094b6105996b429507299c7225b13767be85efbca449", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d77e9ad0-c53d-4320-9871-5b9e62ffed96", "node_type": "1", "metadata": {}, "hash": "e237873fe6bb094c7f3b2c19d6fda909506680de33967bdbf34b355e7bccdb7f", "class_name": "RelatedNodeInfo"}}, "text": "useful. By 1957, \ufb02oating-point hardware was almost ubiquitous. A decimal \ufb02oating-point unit was available for the IBM 650, and soon the IBM 704, 709, 7090, 7094 \u2026 series would o\ufb00er binary \ufb02oating- point hardware for double as well as single precision. As a result, everybody had \ufb02oating point, but every", "start_char_idx": 0, "end_char_idx": 303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d77e9ad0-c53d-4320-9871-5b9e62ffed96": {"__data__": {"id_": "d77e9ad0-c53d-4320-9871-5b9e62ffed96", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5f99104e-3f73-4419-a73f-54c261cf12cb", "node_type": "4", "metadata": {}, "hash": "e237873fe6bb094c7f3b2c19d6fda909506680de33967bdbf34b355e7bccdb7f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e164c41a-fd19-460a-853b-153899165a12", "node_type": "1", "metadata": {}, "hash": "4379987b9cf34fd0faab3a4d9c20c125b4ad4113fa994724c845a4ac699f5359", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "abe2e757-e7c9-464f-867e-dfc5541302aa", "node_type": "1", "metadata": {}, "hash": "44f18235e1e177a6e75a79f61afb0e1a2e0b232a4f93cedff2827ab480b6e650", "class_name": "RelatedNodeInfo"}}, "text": "implementation was di\ufb00erent.", "start_char_idx": 0, "end_char_idx": 28, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abe2e757-e7c9-464f-867e-dfc5541302aa": {"__data__": {"id_": "abe2e757-e7c9-464f-867e-dfc5541302aa", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "04661e22-68f1-4001-a5eb-c29e995fc2cd", "node_type": "4", "metadata": {}, "hash": "44f18235e1e177a6e75a79f61afb0e1a2e0b232a4f93cedff2827ab480b6e650", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d77e9ad0-c53d-4320-9871-5b9e62ffed96", "node_type": "1", "metadata": {}, "hash": "e237873fe6bb094c7f3b2c19d6fda909506680de33967bdbf34b355e7bccdb7f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e9a6751e-15ac-4a49-a4f2-173d9178be88", "node_type": "1", "metadata": {}, "hash": "be40eabcdf6d174ddcf14d6dd85431471cf5a35dd388a99d96f0ae8c4f9fd1d7", "class_name": "RelatedNodeInfo"}}, "text": "Diversity versus Portability Since roundo\ufb00 introduces some error into almost all \ufb02oating-point operations, to complain about another bit of error seems picayune. So for 20 years, nobody complained much that those operations behaved a li\u0000le di\ufb00erently on di\ufb00erent computers. If software required clever tricks to circumvent those idiosyncrasies and \ufb01nally deliver results correct in all but the last several bits, such tricks were deemed part of the programmer\u2019s art. For a long time, matrix computations mysti\ufb01ed most people who had no notion of error analysis; perhaps this continues to be true. That may be why people are still surprised that numerically stable matrix computations depend upon the quality of arithmetic in so few places, far fewer than are generally supposed. Books by Wilkinson and widely used software packages like Linpack and Eispack sustained a false impression, widespread in the early 1970s, that a modicum of skill su\ufb03ced to produce portable numerical software.", "start_char_idx": 0, "end_char_idx": 988, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9a6751e-15ac-4a49-a4f2-173d9178be88": {"__data__": {"id_": "e9a6751e-15ac-4a49-a4f2-173d9178be88", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "08d2b010-9e38-471c-8ea9-85666514e546", "node_type": "4", "metadata": {}, "hash": "be40eabcdf6d174ddcf14d6dd85431471cf5a35dd388a99d96f0ae8c4f9fd1d7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "abe2e757-e7c9-464f-867e-dfc5541302aa", "node_type": "1", "metadata": {}, "hash": "44f18235e1e177a6e75a79f61afb0e1a2e0b232a4f93cedff2827ab480b6e650", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "595933c6-fec2-4dcb-8de9-3e13ed3cb068", "node_type": "1", "metadata": {}, "hash": "db8ea13e1c90b2f33148fa289161f8010d857bf3d244dbde2cb7b5c051fc2159", "class_name": "RelatedNodeInfo"}}, "text": "\u201cPortable\u201d here means that the software is distributed as source", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "595933c6-fec2-4dcb-8de9-3e13ed3cb068": {"__data__": {"id_": "595933c6-fec2-4dcb-8de9-3e13ed3cb068", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cf8445eb-44ff-4ba9-83ff-2ad3c5b87193", "node_type": "4", "metadata": {}, "hash": "db8ea13e1c90b2f33148fa289161f8010d857bf3d244dbde2cb7b5c051fc2159", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e9a6751e-15ac-4a49-a4f2-173d9178be88", "node_type": "1", "metadata": {}, "hash": "be40eabcdf6d174ddcf14d6dd85431471cf5a35dd388a99d96f0ae8c4f9fd1d7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c40821c-9737-48d6-9d1f-23da629623d5", "node_type": "1", "metadata": {}, "hash": "05e675334be0c98d7891cd77fb4961e35972c5ad44510f31d29fe556391b6116", "class_name": "RelatedNodeInfo"}}, "text": "code in some standard language to be compiled and executed on practically any commercially signi\ufb01cant computer, and that it will then perform its task as well as any other program performs that task on that computer. Insofar as numerical software has often been thought to consist entirely of computer-independent mathematical formulas, its portability has often been taken for granted; the mistake in that presumption will become clear shortly.", "start_char_idx": 0, "end_char_idx": 445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c40821c-9737-48d6-9d1f-23da629623d5": {"__data__": {"id_": "4c40821c-9737-48d6-9d1f-23da629623d5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca1281a1-d707-4bad-84c2-c9c8142369ac", "node_type": "4", "metadata": {}, "hash": "05e675334be0c98d7891cd77fb4961e35972c5ad44510f31d29fe556391b6116", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "595933c6-fec2-4dcb-8de9-3e13ed3cb068", "node_type": "1", "metadata": {}, "hash": "db8ea13e1c90b2f33148fa289161f8010d857bf3d244dbde2cb7b5c051fc2159", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01b541de-7360-4be8-ad50-754487cddbd2", "node_type": "1", "metadata": {}, "hash": "e9bdf727109317d463a6d1be2a813aaf86bb98e92d9c5efc0367133c3c086042", "class_name": "RelatedNodeInfo"}}, "text": "Packages like Linpack and Eispack cost so much to develop\u2014over a hundred dollars per line of Fortran delivered\u2014that they could not have been developed without U.S. government subsidy; their portability was a precondition for that subsidy. But nobody thought to distinguish how various components contributed to their cost. One component was algorithmic\u2014devise an algorithm that deserves to work on at least one computer despite its round o\ufb00 and over-/under\ufb02ow limitations. Another component was the software engineering e\ufb00ort required to achieve and con\ufb01rm portability to the diverse computers commercially signi\ufb01cant at the time; this component grew more onerous as ever more diverse \ufb02oating-point arithmetics blossomed in the 1970s. And yet scarcely anybody realized how much that diversity in\ufb02ated the cost of such software packages.", "start_char_idx": 0, "end_char_idx": 836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01b541de-7360-4be8-ad50-754487cddbd2": {"__data__": {"id_": "01b541de-7360-4be8-ad50-754487cddbd2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c0950888-ffa5-47c3-ad4d-4b819c290954", "node_type": "4", "metadata": {}, "hash": "e9bdf727109317d463a6d1be2a813aaf86bb98e92d9c5efc0367133c3c086042", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c40821c-9737-48d6-9d1f-23da629623d5", "node_type": "1", "metadata": {}, "hash": "05e675334be0c98d7891cd77fb4961e35972c5ad44510f31d29fe556391b6116", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f", "node_type": "1", "metadata": {}, "hash": "34b5c9ab24d0209ceed947cba111e0c04f1d326ae6366e9fd9b3eb9f9bb4a0ad", "class_name": "RelatedNodeInfo"}}, "text": "A Backward Step Early evidence that somewhat di\ufb00erent arithmetics could engender grossly di\ufb00erent software development costs was presented in 1964. It happened at a meeting of SHARE, the IBM mainframe users\u2019 group, at which IBM announced System/360, the successor to the 7094 series. One of the speakers described the tricks he had been forced to devise to achieve a level of quality for the S/360 library that was not quite so high as he had previously achieved for the 7094.", "start_char_idx": 0, "end_char_idx": 476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f": {"__data__": {"id_": "3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "370a9987-e7cc-402a-8d1b-952b1c5c1d72", "node_type": "4", "metadata": {}, "hash": "34b5c9ab24d0209ceed947cba111e0c04f1d326ae6366e9fd9b3eb9f9bb4a0ad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01b541de-7360-4be8-ad50-754487cddbd2", "node_type": "1", "metadata": {}, "hash": "e9bdf727109317d463a6d1be2a813aaf86bb98e92d9c5efc0367133c3c086042", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "058f5415-5e54-4ef8-9980-33268e0ae3eb", "node_type": "1", "metadata": {}, "hash": "2b378e008dfdf9a6710580152a560f6e8fa425dd2e064e2b005143086d10e440", "class_name": "RelatedNodeInfo"}}, "text": "Part of the trouble could have been foretold by von Neumann, had he still been alive. In 1948, he and Goldstine had published a lengthy error analysis so di\ufb03cult and so pessimistic that hardly anybody paid a\u0000ention to it. It did predict correctly, however, that computations with larger arrays of data would probably fall prey to", "start_char_idx": 0, "end_char_idx": 329, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "058f5415-5e54-4ef8-9980-33268e0ae3eb": {"__data__": {"id_": "058f5415-5e54-4ef8-9980-33268e0ae3eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cee194fd-e375-44c6-966d-cdcc58b200c1", "node_type": "4", "metadata": {}, "hash": "2b378e008dfdf9a6710580152a560f6e8fa425dd2e064e2b005143086d10e440", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f", "node_type": "1", "metadata": {}, "hash": "34b5c9ab24d0209ceed947cba111e0c04f1d326ae6366e9fd9b3eb9f9bb4a0ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efbca599-8644-4f7f-8418-862e2710bbd6", "node_type": "1", "metadata": {}, "hash": "d37f14fb1cbff446d9d2144d29f1d465ec4e7c67520e56d0fab5076137756fe2", "class_name": "RelatedNodeInfo"}}, "text": "roundo\ufb00 more often. IBM S/360s had bigger memories than 7094s, so data arrays could grow bigger, and they did. To make ma\u0000ers worse, the S/360s had narrower single precision words (32 bits versus 36) and used a cruder arithmetic (hexa decimal or base 16 versus binary or base 2) with consequently poorer worst-case precision (21 signi\ufb01cant bits versus 27) than the old 7094s. Consequently, software that had almost always provided (barely) satisfactory accuracy on 7094s too often produced inaccurate results when run on S/360s. The quickest way to recover adequate accuracy was to replace old codes\u2019 single precision declarations with double precision before recompilation for the S/360. This practice exercised S/360 double precision far more than had been expected.", "start_char_idx": 0, "end_char_idx": 768, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efbca599-8644-4f7f-8418-862e2710bbd6": {"__data__": {"id_": "efbca599-8644-4f7f-8418-862e2710bbd6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45cec028-9698-4726-9636-a0bfa0292f6f", "node_type": "4", "metadata": {}, "hash": "d37f14fb1cbff446d9d2144d29f1d465ec4e7c67520e56d0fab5076137756fe2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "058f5415-5e54-4ef8-9980-33268e0ae3eb", "node_type": "1", "metadata": {}, "hash": "2b378e008dfdf9a6710580152a560f6e8fa425dd2e064e2b005143086d10e440", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84d69004-a647-4918-ad5c-e46f9152ae07", "node_type": "1", "metadata": {}, "hash": "0177f4f0eef5b0228c4bc66d49abd88379fbc290ba4fe298f3c22f9815bede57", "class_name": "RelatedNodeInfo"}}, "text": "The early S/360\u2019s worst troubles were caused by lack of a guard digit in double precision. This lack showed up in multiplication as a failure of identities like 1.0 * x = x because multiplying x by 1.0 dropped x\u2019s last hexadecimal digit (4 bits). Similarly, if x and y were very close but had di\ufb00erent exponents, subtraction dropped o\ufb00 the last digit of the smaller operand before computing x \u2212 y. This last aberration in double precision undermined a precious theorem that single precision then (and now) honored: If 1/2 \u2264x/y \u22642, then no rounding error can occur when x \u2212 y is computed; it must be computed exactly.", "start_char_idx": 0, "end_char_idx": 616, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84d69004-a647-4918-ad5c-e46f9152ae07": {"__data__": {"id_": "84d69004-a647-4918-ad5c-e46f9152ae07", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "19df1d07-2c4a-48f7-b7ca-27776cbc667c", "node_type": "4", "metadata": {}, "hash": "0177f4f0eef5b0228c4bc66d49abd88379fbc290ba4fe298f3c22f9815bede57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efbca599-8644-4f7f-8418-862e2710bbd6", "node_type": "1", "metadata": {}, "hash": "d37f14fb1cbff446d9d2144d29f1d465ec4e7c67520e56d0fab5076137756fe2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca977d8a-b6d0-4b5f-89e7-496a6e04a401", "node_type": "1", "metadata": {}, "hash": "708aee1751846f1f38841421bfb8e2e348904cfc4de1a8714209f22d88dca78d", "class_name": "RelatedNodeInfo"}}, "text": "Innumerable computations had bene\ufb01ted from this minor", "start_char_idx": 0, "end_char_idx": 53, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca977d8a-b6d0-4b5f-89e7-496a6e04a401": {"__data__": {"id_": "ca977d8a-b6d0-4b5f-89e7-496a6e04a401", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e00153b4-b39b-4015-b017-b480f6077d69", "node_type": "4", "metadata": {}, "hash": "708aee1751846f1f38841421bfb8e2e348904cfc4de1a8714209f22d88dca78d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84d69004-a647-4918-ad5c-e46f9152ae07", "node_type": "1", "metadata": {}, "hash": "0177f4f0eef5b0228c4bc66d49abd88379fbc290ba4fe298f3c22f9815bede57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b3b2010-e86a-4225-bdb5-f1c55c2db98a", "node_type": "1", "metadata": {}, "hash": "5baa867a83396d3dcf80183cb8b250d2af8e65e26f4891667e636603f8096545", "class_name": "RelatedNodeInfo"}}, "text": "theorem, most often unwi\u0000ingly, for several decades before its \ufb01rst formal announcement and proof. We had been taking all this stu\ufb00 for granted.", "start_char_idx": 0, "end_char_idx": 144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b3b2010-e86a-4225-bdb5-f1c55c2db98a": {"__data__": {"id_": "6b3b2010-e86a-4225-bdb5-f1c55c2db98a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e7329ac0-e054-4cd7-97ef-484f7478c1a9", "node_type": "4", "metadata": {}, "hash": "5baa867a83396d3dcf80183cb8b250d2af8e65e26f4891667e636603f8096545", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca977d8a-b6d0-4b5f-89e7-496a6e04a401", "node_type": "1", "metadata": {}, "hash": "708aee1751846f1f38841421bfb8e2e348904cfc4de1a8714209f22d88dca78d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "508fa520-6792-49fd-b23b-4a3f1554bba5", "node_type": "1", "metadata": {}, "hash": "0f00c639153ee2f4e0ca823d504e3c0dba96a72d54b6e01ee389100ac46351ff", "class_name": "RelatedNodeInfo"}}, "text": "The identities and theorems about exact relationships that persisted, despite roundo\ufb00, with reasonable implementations of approximate arithmetic were not appreciated until they were lost. Previously, it had been thought that the things to ma\u0000er were precision (how many signi\ufb01cant digits were carried) and range (the spread between over-/under\ufb02ow thresholds). Since the S/360\u2019s double precision had more precision and wider range than the 7094\u2019s, software was expected to continue to work at least as well as before. But it didn\u2019t.", "start_char_idx": 0, "end_char_idx": 531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "508fa520-6792-49fd-b23b-4a3f1554bba5": {"__data__": {"id_": "508fa520-6792-49fd-b23b-4a3f1554bba5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "269faf99-dc1a-4e84-a50a-2023885e047f", "node_type": "4", "metadata": {}, "hash": "0f00c639153ee2f4e0ca823d504e3c0dba96a72d54b6e01ee389100ac46351ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b3b2010-e86a-4225-bdb5-f1c55c2db98a", "node_type": "1", "metadata": {}, "hash": "5baa867a83396d3dcf80183cb8b250d2af8e65e26f4891667e636603f8096545", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a91b86ff-4ada-4353-9f75-b291579efc5a", "node_type": "1", "metadata": {}, "hash": "59553cee3bba6908b3385cbc0b86697e561ed97f3a1cbd58a429e8c47c5c883d", "class_name": "RelatedNodeInfo"}}, "text": "Programmers who had matured into program managers were appalled at the cost of converting 7094 software to run on S/360s. A", "start_char_idx": 0, "end_char_idx": 123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a91b86ff-4ada-4353-9f75-b291579efc5a": {"__data__": {"id_": "a91b86ff-4ada-4353-9f75-b291579efc5a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fa1902a6-4d6e-421b-ad04-1af6a426f984", "node_type": "4", "metadata": {}, "hash": "59553cee3bba6908b3385cbc0b86697e561ed97f3a1cbd58a429e8c47c5c883d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "508fa520-6792-49fd-b23b-4a3f1554bba5", "node_type": "1", "metadata": {}, "hash": "0f00c639153ee2f4e0ca823d504e3c0dba96a72d54b6e01ee389100ac46351ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1921b234-148f-4eee-9a5a-2b15d9634a7b", "node_type": "1", "metadata": {}, "hash": "e5b76aa2d78d7e2a55996668a401648ebb812c7daa2f6bcda65656aedbcb9767", "class_name": "RelatedNodeInfo"}}, "text": "small subcommi\u0000ee of SHARE proposed improvements to the S/360 \ufb02oating point. This commi\u0000ee was surprised and grateful to get a fair part of what they asked for from IBM, including all-important guard digits. By 1968, these had been retro\ufb01\u0000ed to S/360s in the \ufb01eld at considerable expense; worse than that was customers\u2019 loss of faith in IBM\u2019s infallibility (a lesson learned by Intel 30 years later; see Figure 3.23). IBM employees who can remember the incident still shudder.", "start_char_idx": 0, "end_char_idx": 476, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1921b234-148f-4eee-9a5a-2b15d9634a7b": {"__data__": {"id_": "1921b234-148f-4eee-9a5a-2b15d9634a7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8871c11b-ff7e-4863-b735-e1c83b3278bd", "node_type": "4", "metadata": {}, "hash": "e5b76aa2d78d7e2a55996668a401648ebb812c7daa2f6bcda65656aedbcb9767", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a91b86ff-4ada-4353-9f75-b291579efc5a", "node_type": "1", "metadata": {}, "hash": "59553cee3bba6908b3385cbc0b86697e561ed97f3a1cbd58a429e8c47c5c883d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "80b0c84e-4dec-4b7f-a5ae-a62553893e94", "node_type": "1", "metadata": {}, "hash": "f6d05194d2ae522ae5e36d6ecaf6608a6142e389f95bfeac44be292c2b151d17", "class_name": "RelatedNodeInfo"}}, "text": "The People Who Built the Bombs Seymour Cray was associated for decades with the CDC and Cray computers that were, when he built them, the world\u2019s biggest and fastest. He always understood what his customers wanted most: speed. And he gave it to them even if, in so doing, he also gave them arithmetics more \u201cinteresting\u201d than anyone else\u2019s. Among his customers have been the great government laboratories like those at Livermore and Los Alamos, where nuclear weapons were designed. The challenges of \u201cinteresting\u201d arithmetics were pre\u0000y tame to people who had to overcome Mother Nature\u2019s challenges.", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80b0c84e-4dec-4b7f-a5ae-a62553893e94": {"__data__": {"id_": "80b0c84e-4dec-4b7f-a5ae-a62553893e94", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e0e27e4d-d232-436d-8fd9-42a89d274148", "node_type": "4", "metadata": {}, "hash": "f6d05194d2ae522ae5e36d6ecaf6608a6142e389f95bfeac44be292c2b151d17", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1921b234-148f-4eee-9a5a-2b15d9634a7b", "node_type": "1", "metadata": {}, "hash": "e5b76aa2d78d7e2a55996668a401648ebb812c7daa2f6bcda65656aedbcb9767", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66fe5fe5-e7d6-4613-b85a-c219aedbb7eb", "node_type": "1", "metadata": {}, "hash": "2bd86802ad2f5a0140e109fb52432fd4f47e6de778dc1778c327a3ecd3571280", "class_name": "RelatedNodeInfo"}}, "text": "Perhaps all of us could learn to live with arithmetic idiosyncrasy if", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66fe5fe5-e7d6-4613-b85a-c219aedbb7eb": {"__data__": {"id_": "66fe5fe5-e7d6-4613-b85a-c219aedbb7eb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "000f5bbc-57b8-4519-a208-6f8128453a78", "node_type": "4", "metadata": {}, "hash": "2bd86802ad2f5a0140e109fb52432fd4f47e6de778dc1778c327a3ecd3571280", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "80b0c84e-4dec-4b7f-a5ae-a62553893e94", "node_type": "1", "metadata": {}, "hash": "f6d05194d2ae522ae5e36d6ecaf6608a6142e389f95bfeac44be292c2b151d17", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6e682eac-01e4-4bf1-9486-66118c1a0e98", "node_type": "1", "metadata": {}, "hash": "1cf2a98e4bc2e20d51b47971dc9179a89133e6d209932fb790bd221ad0d47ace", "class_name": "RelatedNodeInfo"}}, "text": "only one computer\u2019s idiosyncrasies had to be endured. Instead, when accumulating di\ufb00erent computers\u2019 di\ufb00erent anomalies, software dies the Death of a Thousand Cuts. Here is an example from Cray\u2019s computers:", "start_char_idx": 0, "end_char_idx": 206, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6e682eac-01e4-4bf1-9486-66118c1a0e98": {"__data__": {"id_": "6e682eac-01e4-4bf1-9486-66118c1a0e98", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "66d2339d-0d4c-46af-877d-1dde8b9f25cd", "node_type": "4", "metadata": {}, "hash": "1cf2a98e4bc2e20d51b47971dc9179a89133e6d209932fb790bd221ad0d47ace", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66fe5fe5-e7d6-4613-b85a-c219aedbb7eb", "node_type": "1", "metadata": {}, "hash": "2bd86802ad2f5a0140e109fb52432fd4f47e6de778dc1778c327a3ecd3571280", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bfa9b9f3-fd33-4272-83fc-6f7a72f4785c", "node_type": "1", "metadata": {}, "hash": "6a61fc13ba63a6718eff6bb9f4078560d72238027fc8ce8a225cc21ca02f6f00", "class_name": "RelatedNodeInfo"}}, "text": "Could this statement be stopped by a divide-by-zero error? On a", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bfa9b9f3-fd33-4272-83fc-6f7a72f4785c": {"__data__": {"id_": "bfa9b9f3-fd33-4272-83fc-6f7a72f4785c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cc436d77-a06d-492a-b0e6-33dedfbdf85a", "node_type": "4", "metadata": {}, "hash": "6a61fc13ba63a6718eff6bb9f4078560d72238027fc8ce8a225cc21ca02f6f00", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6e682eac-01e4-4bf1-9486-66118c1a0e98", "node_type": "1", "metadata": {}, "hash": "1cf2a98e4bc2e20d51b47971dc9179a89133e6d209932fb790bd221ad0d47ace", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d87a9d3-d343-4017-b886-a1546abc8c0c", "node_type": "1", "metadata": {}, "hash": "9648ccdead76a666a699695c432d68b029f265614049a8f30d2e99b63f265786", "class_name": "RelatedNodeInfo"}}, "text": "CDC 6600 it could. The reason was a con\ufb02ict between the 6600\u2019s adder, where x was compared with 0.0, and the multiplier and divider. The adder\u2019s comparison examined x\u2019s leading 13 bits, which su\ufb03ced to distinguish zero from normal nonzero \ufb02oating-point numbers x. The multiplier and divider examined only 12 leading bits. Consequently, tiny numbers existed that were nonzero to the adder but zero to the multiplier and divider! To avoid disasters with", "start_char_idx": 0, "end_char_idx": 451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d87a9d3-d343-4017-b886-a1546abc8c0c": {"__data__": {"id_": "5d87a9d3-d343-4017-b886-a1546abc8c0c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "896af9e7-d90f-431f-9a8a-4676c7585c2c", "node_type": "4", "metadata": {}, "hash": "9648ccdead76a666a699695c432d68b029f265614049a8f30d2e99b63f265786", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bfa9b9f3-fd33-4272-83fc-6f7a72f4785c", "node_type": "1", "metadata": {}, "hash": "6a61fc13ba63a6718eff6bb9f4078560d72238027fc8ce8a225cc21ca02f6f00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "61a21044-ca07-4e0c-bf72-22e5e49f4f54", "node_type": "1", "metadata": {}, "hash": "2be3231f45bdbe2320d5f8f9384caf310cf3751c66ac18c5a51678f01a7db265", "class_name": "RelatedNodeInfo"}}, "text": "these tiny numbers, programmers learned to replace statements like the one above with", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61a21044-ca07-4e0c-bf72-22e5e49f4f54": {"__data__": {"id_": "61a21044-ca07-4e0c-bf72-22e5e49f4f54", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "29f23a4b-b5e1-4b19-b884-8a005d165c30", "node_type": "4", "metadata": {}, "hash": "2be3231f45bdbe2320d5f8f9384caf310cf3751c66ac18c5a51678f01a7db265", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d87a9d3-d343-4017-b886-a1546abc8c0c", "node_type": "1", "metadata": {}, "hash": "9648ccdead76a666a699695c432d68b029f265614049a8f30d2e99b63f265786", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453", "node_type": "1", "metadata": {}, "hash": "e5bd1edf2824a412ffa2883fafa03cce7e3a8eb797d4dc2312d6b0fe27bb4929", "class_name": "RelatedNodeInfo"}}, "text": "But this statement is unsafe to use in would-be portable software because it malfunctions obscurely on other computers designed by Cray, the ones marketed by Cray Research, Inc. If x was so huge that 2.0 * x would over\ufb02ow, then 1.0 * x might over\ufb02ow too! Over\ufb02ow happens because Cray computers check the product\u2019s exponent before the product\u2019s exponent has been normalized, just to save the delay of a single AND gate.", "start_char_idx": 0, "end_char_idx": 418, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453": {"__data__": {"id_": "48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a6fce9e6-cbb0-4076-8208-41920ddd6553", "node_type": "4", "metadata": {}, "hash": "e5bd1edf2824a412ffa2883fafa03cce7e3a8eb797d4dc2312d6b0fe27bb4929", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "61a21044-ca07-4e0c-bf72-22e5e49f4f54", "node_type": "1", "metadata": {}, "hash": "2be3231f45bdbe2320d5f8f9384caf310cf3751c66ac18c5a51678f01a7db265", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86d90762-be88-4eca-bff0-ae18c0e8a7a3", "node_type": "1", "metadata": {}, "hash": "fdb5ac8788536e4edc303f8b7967e21b6dcf9b339c076bfefcb062f813088ca9", "class_name": "RelatedNodeInfo"}}, "text": "Rounding error anomalies that are far worse than the", "start_char_idx": 0, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86d90762-be88-4eca-bff0-ae18c0e8a7a3": {"__data__": {"id_": "86d90762-be88-4eca-bff0-ae18c0e8a7a3", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e174cc30-367a-4b0e-8fd8-409c52886455", "node_type": "4", "metadata": {}, "hash": "fdb5ac8788536e4edc303f8b7967e21b6dcf9b339c076bfefcb062f813088ca9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453", "node_type": "1", "metadata": {}, "hash": "e5bd1edf2824a412ffa2883fafa03cce7e3a8eb797d4dc2312d6b0fe27bb4929", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dc207ab3-c199-4e76-9a61-c2ae67769732", "node_type": "1", "metadata": {}, "hash": "9430cd1467219a2b0406baa02149837699a5fc3678088dde80089999bedb21b5", "class_name": "RelatedNodeInfo"}}, "text": "over-/under\ufb02ow anomaly just discussed also a\ufb00ect Cray computers. The worst error came from the lack of a guard digit in add/sub tract, an a\ufb04iction of IBM S/360s. Further bad luck for software is occasioned by the way Cray economized his multiplier; about one- third of the bits that normal multiplier arrays generate have been left out of his multipliers, because they would contribute less than a unit to the last place of the \ufb01nal Cray-rounded product. Consequently, a Cray\u2019s multiplier errs by almost a bit more than might have been expected. This error is compounded when division takes three multiplications to improve an approximate reciprocal of the divisor and then multiply the numerator by it. Square root compounds a few more multiplication errors.", "start_char_idx": 0, "end_char_idx": 759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc207ab3-c199-4e76-9a61-c2ae67769732": {"__data__": {"id_": "dc207ab3-c199-4e76-9a61-c2ae67769732", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8847d668-a2c5-49ba-8c21-b3b205615a17", "node_type": "4", "metadata": {}, "hash": "9430cd1467219a2b0406baa02149837699a5fc3678088dde80089999bedb21b5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86d90762-be88-4eca-bff0-ae18c0e8a7a3", "node_type": "1", "metadata": {}, "hash": "fdb5ac8788536e4edc303f8b7967e21b6dcf9b339c076bfefcb062f813088ca9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df75f556-3680-4058-bb9b-1a19f2fdd609", "node_type": "1", "metadata": {}, "hash": "d2d89317c1c391380ee0cfa731f8ef92e3f42c733ee2f3b5a6125372f348001f", "class_name": "RelatedNodeInfo"}}, "text": "The fast way drove out the slow, even though the fast was", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df75f556-3680-4058-bb9b-1a19f2fdd609": {"__data__": {"id_": "df75f556-3680-4058-bb9b-1a19f2fdd609", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1d632f2a-aaa0-4da9-b277-19791ad56d2b", "node_type": "4", "metadata": {}, "hash": "d2d89317c1c391380ee0cfa731f8ef92e3f42c733ee2f3b5a6125372f348001f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc207ab3-c199-4e76-9a61-c2ae67769732", "node_type": "1", "metadata": {}, "hash": "9430cd1467219a2b0406baa02149837699a5fc3678088dde80089999bedb21b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf6a095b-22f7-4989-bf08-a3ecb392e7cf", "node_type": "1", "metadata": {}, "hash": "eb4ed581a091c9cd206fd3924c7a893418358140791ad038b3914d845a171d27", "class_name": "RelatedNodeInfo"}}, "text": "Making the World Safe for Floating Point, or Vice Versa William Kahan was an undergraduate at the University of Toronto in 1953 when he learned to program its Ferranti-Manchester Mark-I computer. Because he entered the \ufb01eld early, Kahan became acquainted with a wide range of devices and a large pro portion of the personalities active in computing; the numbers of both were small at that time. He has performed computations on slide rules,", "start_char_idx": 0, "end_char_idx": 440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf6a095b-22f7-4989-bf08-a3ecb392e7cf": {"__data__": {"id_": "cf6a095b-22f7-4989-bf08-a3ecb392e7cf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a490a75-da0a-46f5-80e8-30a6293ab5fd", "node_type": "4", "metadata": {}, "hash": "eb4ed581a091c9cd206fd3924c7a893418358140791ad038b3914d845a171d27", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df75f556-3680-4058-bb9b-1a19f2fdd609", "node_type": "1", "metadata": {}, "hash": "d2d89317c1c391380ee0cfa731f8ef92e3f42c733ee2f3b5a6125372f348001f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0f867de-6009-4a2c-8f79-0683cd976752", "node_type": "1", "metadata": {}, "hash": "52314d79957df584bc533854b07049cb02b7b94b7886899e773873761bfe2379", "class_name": "RelatedNodeInfo"}}, "text": "desktop mechanical calculators, tabletop analog di\ufb00erential analyzers, and so on; he has used all but the earliest electronic computers and calculators mentioned in this book.", "start_char_idx": 0, "end_char_idx": 175, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c0f867de-6009-4a2c-8f79-0683cd976752": {"__data__": {"id_": "c0f867de-6009-4a2c-8f79-0683cd976752", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "deaf3f52-74ed-49c0-a5b9-9537f9a56b6d", "node_type": "4", "metadata": {}, "hash": "52314d79957df584bc533854b07049cb02b7b94b7886899e773873761bfe2379", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf6a095b-22f7-4989-bf08-a3ecb392e7cf", "node_type": "1", "metadata": {}, "hash": "eb4ed581a091c9cd206fd3924c7a893418358140791ad038b3914d845a171d27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbe33271-7256-4105-88c8-719ec10e468f", "node_type": "1", "metadata": {}, "hash": "8c6438bb891a77b7d7525cd3adcb86220205db8fef7da08af1f7860afd3ba63a", "class_name": "RelatedNodeInfo"}}, "text": "Kahan\u2019s desire to deliver reliable software led to an interest in", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbe33271-7256-4105-88c8-719ec10e468f": {"__data__": {"id_": "dbe33271-7256-4105-88c8-719ec10e468f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "94b78f06-e65f-4217-ab20-7c109bc56d54", "node_type": "4", "metadata": {}, "hash": "8c6438bb891a77b7d7525cd3adcb86220205db8fef7da08af1f7860afd3ba63a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0f867de-6009-4a2c-8f79-0683cd976752", "node_type": "1", "metadata": {}, "hash": "52314d79957df584bc533854b07049cb02b7b94b7886899e773873761bfe2379", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9119d09-0155-4be9-afdd-d693108b4736", "node_type": "1", "metadata": {}, "hash": "819b00c0473a6c64e94de0e57d4bdec5b8f742cd16355edccb0c8925758dc172", "class_name": "RelatedNodeInfo"}}, "text": "error analysis that intensi\ufb01ed during two years of postdoctoral study in England, where he became acquainted with Wilkinson. In 1960, he resumed teaching at Toronto, where an IBM 7090 had been acquired, and was granted free rein to tinker with its operating system, Fortran compiler, and runtime library. (He denies that he ever came near the 7090 hardware with a soldering iron but admits asking to do so.) One story from that time illuminates how misconceptions and numerical anomalies in computer systems can incur awesome hidden costs.", "start_char_idx": 0, "end_char_idx": 539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9119d09-0155-4be9-afdd-d693108b4736": {"__data__": {"id_": "c9119d09-0155-4be9-afdd-d693108b4736", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f0c1dc09-0d54-48be-9271-73ae8e6703b6", "node_type": "4", "metadata": {}, "hash": "819b00c0473a6c64e94de0e57d4bdec5b8f742cd16355edccb0c8925758dc172", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbe33271-7256-4105-88c8-719ec10e468f", "node_type": "1", "metadata": {}, "hash": "8c6438bb891a77b7d7525cd3adcb86220205db8fef7da08af1f7860afd3ba63a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1aa815f2-6af4-420e-8ca5-7e28749b0457", "node_type": "1", "metadata": {}, "hash": "c1be1de44c3adffbc8fe09345ee053eae47dd45242e28b4b968d05e3235613e8", "class_name": "RelatedNodeInfo"}}, "text": "A graduate student in aeronautical engineering used the 7090 to simulate the wings he was designing for short takeo\ufb00s and landings. He knew such a wing would be di\ufb03cult to control if its characteristics included an abrupt onset of stall, but he thought he could avoid that. His simulations were telling him otherwise. Just to be sure that roundo\ufb00 was not interfering, he had repeated many of his calculations in double precision and go\u0000en results much like those in single; his wings had stalled abruptly in both precisions. Disheartened, the student gave up.", "start_char_idx": 0, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aa815f2-6af4-420e-8ca5-7e28749b0457": {"__data__": {"id_": "1aa815f2-6af4-420e-8ca5-7e28749b0457", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f8e68132-90f1-4bdb-ac07-5e7db46a916f", "node_type": "4", "metadata": {}, "hash": "c1be1de44c3adffbc8fe09345ee053eae47dd45242e28b4b968d05e3235613e8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9119d09-0155-4be9-afdd-d693108b4736", "node_type": "1", "metadata": {}, "hash": "819b00c0473a6c64e94de0e57d4bdec5b8f742cd16355edccb0c8925758dc172", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ee50dc4-784e-4af8-8500-d726bef7c953", "node_type": "1", "metadata": {}, "hash": "e93821356e299ce48fa248013001d608f1fedf62400278e900870deade717d0e", "class_name": "RelatedNodeInfo"}}, "text": "Meanwhile Kahan replaced IBM\u2019s logarithm program (ALOG) with one of his own, which he hoped would provide be\u0000er accuracy. While testing it, Kahan reran programs using the new version of ALOG. The student\u2019s results changed signi\ufb01cantly; Kahan approached him to \ufb01nd out what had happened.", "start_char_idx": 0, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ee50dc4-784e-4af8-8500-d726bef7c953": {"__data__": {"id_": "4ee50dc4-784e-4af8-8500-d726bef7c953", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "34a7ee27-edf3-4810-ba0c-66a4d0fba38e", "node_type": "4", "metadata": {}, "hash": "e93821356e299ce48fa248013001d608f1fedf62400278e900870deade717d0e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1aa815f2-6af4-420e-8ca5-7e28749b0457", "node_type": "1", "metadata": {}, "hash": "c1be1de44c3adffbc8fe09345ee053eae47dd45242e28b4b968d05e3235613e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e411c663-92e3-493a-b0a6-018bca8b62d0", "node_type": "1", "metadata": {}, "hash": "a25697471c15bcc2afe7c0c2d5ba2bbadf94f143dffe5ce85bd2d914fde77cbc", "class_name": "RelatedNodeInfo"}}, "text": "The student was puzzled. Much as the student preferred the results produced with the new ALOG\u2014they predicted a gradual stall\u2014he knew they must be wrong because they disagreed with his double precision results. The discrepancy between single and double precision results disappeared a few days later when a new release of IBM\u2019s double precision arithmetic software for the 7090 arrived. (The 7090 had no double precision hardware.) He went on to write a thesis about it and to build the wings; they performed as predicted. But that is not the end of the story.", "start_char_idx": 0, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e411c663-92e3-493a-b0a6-018bca8b62d0": {"__data__": {"id_": "e411c663-92e3-493a-b0a6-018bca8b62d0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0aeabf97-9c0f-4ddf-9856-ea318d8e06a6", "node_type": "4", "metadata": {}, "hash": "a25697471c15bcc2afe7c0c2d5ba2bbadf94f143dffe5ce85bd2d914fde77cbc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ee50dc4-784e-4af8-8500-d726bef7c953", "node_type": "1", "metadata": {}, "hash": "e93821356e299ce48fa248013001d608f1fedf62400278e900870deade717d0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbd66eae-de50-4cbf-8ba3-6d8bf961791b", "node_type": "1", "metadata": {}, "hash": "50955d0a7d0c0b4245976557cc306fdccc360005b449f6cb4c1a258eefe568f5", "class_name": "RelatedNodeInfo"}}, "text": "In 1963, the 7090 was replaced by a faster 7094 with double", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbd66eae-de50-4cbf-8ba3-6d8bf961791b": {"__data__": {"id_": "cbd66eae-de50-4cbf-8ba3-6d8bf961791b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7abfb03c-4220-4086-9b88-2c713ee197a6", "node_type": "4", "metadata": {}, "hash": "50955d0a7d0c0b4245976557cc306fdccc360005b449f6cb4c1a258eefe568f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e411c663-92e3-493a-b0a6-018bca8b62d0", "node_type": "1", "metadata": {}, "hash": "a25697471c15bcc2afe7c0c2d5ba2bbadf94f143dffe5ce85bd2d914fde77cbc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6c6496e-c3d6-42e9-a615-595b359c427c", "node_type": "1", "metadata": {}, "hash": "2ca33eb929465c248b70ad1b6d816235d1d0b75dcb60d7e38a2bf3dff248413c", "class_name": "RelatedNodeInfo"}}, "text": "precision \ufb02oating-point hardware but with otherwise practically the same instruction set as the 7090. Only in double precision and only when using the new hardware did the wing stall abruptly again. A lot of time was spent to \ufb01nd out why. The 7094 hard ware turned out, like the superseded 7090 software and the sub sequent early S/360s, to lack a guard bit in double precision. Like so many programmers on those computers and on Cray\u2019s, the student discovered a trick to compensate for the lack of a guard digit; he wrote the expression (0.5 \u2212 x) + 0.5 in place of 1.0 \u2212 x. Nowadays we would blush if we had to explain why such a trick might be necessary, but it solved the student\u2019s problem.", "start_char_idx": 0, "end_char_idx": 693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6c6496e-c3d6-42e9-a615-595b359c427c": {"__data__": {"id_": "e6c6496e-c3d6-42e9-a615-595b359c427c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c2f945b2-fa3b-4eb7-a7c3-007ff9716b17", "node_type": "4", "metadata": {}, "hash": "2ca33eb929465c248b70ad1b6d816235d1d0b75dcb60d7e38a2bf3dff248413c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbd66eae-de50-4cbf-8ba3-6d8bf961791b", "node_type": "1", "metadata": {}, "hash": "50955d0a7d0c0b4245976557cc306fdccc360005b449f6cb4c1a258eefe568f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4", "node_type": "1", "metadata": {}, "hash": "4cb4208609f63682a17b0a216cece2a9bf1627e50084f51b6238c67774fa74b2", "class_name": "RelatedNodeInfo"}}, "text": "Meanwhile the lure of California was working on Kahan and his family; they came to Berkeley and he to the University of California. An opportunity presented itself in 1974 when accuracy questions induced Hewle\u0000-Packard\u2019s calculator designers to call in a consultant. The consultant was Kahan, and his work dramatically improved the accuracy of HP calculators, but that is another story. Fruitful collaboration with congenial coworkers, however, forti\ufb01ed him for the next and crucial opportunity.", "start_char_idx": 0, "end_char_idx": 495, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4": {"__data__": {"id_": "4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "897fd483-8598-4efc-b964-e5a00500c198", "node_type": "4", "metadata": {}, "hash": "4cb4208609f63682a17b0a216cece2a9bf1627e50084f51b6238c67774fa74b2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e6c6496e-c3d6-42e9-a615-595b359c427c", "node_type": "1", "metadata": {}, "hash": "2ca33eb929465c248b70ad1b6d816235d1d0b75dcb60d7e38a2bf3dff248413c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae9279e3-45d6-4f71-9ec0-65d6409f9099", "node_type": "1", "metadata": {}, "hash": "c9a549a923e3b907e5309108236a733e0c6b6319c411e45959878c4984e9912f", "class_name": "RelatedNodeInfo"}}, "text": "It came in 1976, when John F. Palmer at Intel was empowered to specify the \u201cbest possible\u201d \ufb02oating-point arithmetic for all of Intel\u2019s product line, as Moore\u2019s Law made it now possible to create a whole \ufb02oating point unit on a single chip. The \ufb02oating-point standard was originally started for the iAPX-432, but when it was late, Intel started the 8086 as a short term emergency stand-in until the iAPX-432 was ready. The iAPX-432 never became popular, so the emergency stand- in became the standard-bearer for Intel. The 8087 \ufb02oating-point coprocessor for the 8086 was contemplated. (A coprocessor is simply an additional chip that accelerates a portion of the work of a processor; in this case, it accelerated \ufb02oating-point computation.)", "start_char_idx": 0, "end_char_idx": 739, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae9279e3-45d6-4f71-9ec0-65d6409f9099": {"__data__": {"id_": "ae9279e3-45d6-4f71-9ec0-65d6409f9099", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8e995631-2cf5-45ae-8f6e-8fa7c0369615", "node_type": "4", "metadata": {}, "hash": "c9a549a923e3b907e5309108236a733e0c6b6319c411e45959878c4984e9912f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4", "node_type": "1", "metadata": {}, "hash": "4cb4208609f63682a17b0a216cece2a9bf1627e50084f51b6238c67774fa74b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79bb9b74-923c-4317-bd20-7498955fbc66", "node_type": "1", "metadata": {}, "hash": "c9aa74fe9cfdebcebc727b3f9ab7551e9aedc80ff7ffb997f28eedc52011ee31", "class_name": "RelatedNodeInfo"}}, "text": "Palmer had obtained his Ph.D. at Stanford a few years before and", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79bb9b74-923c-4317-bd20-7498955fbc66": {"__data__": {"id_": "79bb9b74-923c-4317-bd20-7498955fbc66", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "92cd55b6-cca1-4dd5-ad29-46e8affee86b", "node_type": "4", "metadata": {}, "hash": "c9aa74fe9cfdebcebc727b3f9ab7551e9aedc80ff7ffb997f28eedc52011ee31", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae9279e3-45d6-4f71-9ec0-65d6409f9099", "node_type": "1", "metadata": {}, "hash": "c9a549a923e3b907e5309108236a733e0c6b6319c411e45959878c4984e9912f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "783bc869-7267-47e1-9b6d-da5703edc7f6", "node_type": "1", "metadata": {}, "hash": "ad76cfb3a4ebb7ac3d67e06fd34fbec7ea7aff5d37a13b3b425f2b2ffaa32210", "class_name": "RelatedNodeInfo"}}, "text": "knew whom to call for counsel of perfection\u2014Kahan. They put together a design that obviously would have been impossible only a few years earlier and looked not quite possible at the time. But a new Israeli team of Intel employees led by Ra\ufb01Nav\u00e9 felt challenged to", "start_char_idx": 0, "end_char_idx": 263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "783bc869-7267-47e1-9b6d-da5703edc7f6": {"__data__": {"id_": "783bc869-7267-47e1-9b6d-da5703edc7f6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b147821d-06b8-4a01-8057-250e8a09416f", "node_type": "4", "metadata": {}, "hash": "ad76cfb3a4ebb7ac3d67e06fd34fbec7ea7aff5d37a13b3b425f2b2ffaa32210", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79bb9b74-923c-4317-bd20-7498955fbc66", "node_type": "1", "metadata": {}, "hash": "c9aa74fe9cfdebcebc727b3f9ab7551e9aedc80ff7ffb997f28eedc52011ee31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2a6bb98f-8510-4379-b457-38d4e3567551", "node_type": "1", "metadata": {}, "hash": "af183b1a7ff2e605f4bca553adf731b005d4cee0467380fc6fe6157275eef727", "class_name": "RelatedNodeInfo"}}, "text": "prove their prowess to Americans and leaped at an opportunity to put something impossible on a chip\u2014the 8087.", "start_char_idx": 0, "end_char_idx": 109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a6bb98f-8510-4379-b457-38d4e3567551": {"__data__": {"id_": "2a6bb98f-8510-4379-b457-38d4e3567551", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "de3c9e3e-0c1a-49f8-b09a-0005363a5839", "node_type": "4", "metadata": {}, "hash": "af183b1a7ff2e605f4bca553adf731b005d4cee0467380fc6fe6157275eef727", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "783bc869-7267-47e1-9b6d-da5703edc7f6", "node_type": "1", "metadata": {}, "hash": "ad76cfb3a4ebb7ac3d67e06fd34fbec7ea7aff5d37a13b3b425f2b2ffaa32210", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca", "node_type": "1", "metadata": {}, "hash": "7efc1d55d921d9800435dadf8fb4ba288a65afdf7424e5a14493a1515c1467fa", "class_name": "RelatedNodeInfo"}}, "text": "By now, \ufb02oating-point arithmetics that had been merely diverse among mainframes had become chaotic among microprocessors, one of which might be host to a dozen varieties of arithmetic in ROM \ufb01rmware or software. Robert G. Stewart, an engineer prominent in IEEE activities, got fed up with this anarchy and proposed that the IEEE draft a decent \ufb02oating-point standard. Simultaneously, word leaked out in Silicon Valley that Intel was going to put on one chip some awesome \ufb02oating point well beyond anything its competitors had in mind. The competition had to \ufb01nd a way to slow Intel down, so they formed a commi\u0000ee to do what Stewart requested.", "start_char_idx": 0, "end_char_idx": 643, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca": {"__data__": {"id_": "ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49354419-975e-4050-a05b-0225e349fc42", "node_type": "4", "metadata": {}, "hash": "7efc1d55d921d9800435dadf8fb4ba288a65afdf7424e5a14493a1515c1467fa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2a6bb98f-8510-4379-b457-38d4e3567551", "node_type": "1", "metadata": {}, "hash": "af183b1a7ff2e605f4bca553adf731b005d4cee0467380fc6fe6157275eef727", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "72526fc7-70e8-41f2-b8ad-ee02d981d100", "node_type": "1", "metadata": {}, "hash": "969994e7a36fa0781da9d95c31917080284fe06dc252d4fd3d17e4aef3ce677b", "class_name": "RelatedNodeInfo"}}, "text": "Meetings of this commi\u0000ee began in late 1977 with a plethora of", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72526fc7-70e8-41f2-b8ad-ee02d981d100": {"__data__": {"id_": "72526fc7-70e8-41f2-b8ad-ee02d981d100", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21d2a48f-b67d-4f11-b599-c48a0a999b9e", "node_type": "4", "metadata": {}, "hash": "969994e7a36fa0781da9d95c31917080284fe06dc252d4fd3d17e4aef3ce677b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca", "node_type": "1", "metadata": {}, "hash": "7efc1d55d921d9800435dadf8fb4ba288a65afdf7424e5a14493a1515c1467fa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd47be96-e44b-467e-811a-1c07b0404da0", "node_type": "1", "metadata": {}, "hash": "28209024e6b69f1bbef8097cb13c388dc0f9b934ecb9c516ba16341a5660049f", "class_name": "RelatedNodeInfo"}}, "text": "competing drafts from innumerable sources and dragged on into 1985, when IEEE Standard 754 for Binary Floating Point was made o\ufb03cial. The winning draft was very close to one submi\u0000ed by Kahan, his student Jerome T. Coonen, and Harold S. Stone, a professor visiting Berkeley at the time. Their draft was based on the Intel design, with Intel\u2019s permission, of course, as simpli\ufb01ed by Coonen. Their harmonious combination of features, almost none of them new, had at the outset a\u0000racted more support within the commi\u0000ee and from outside experts like Wilkinson than any other draft, but they had to win nearly unanimous support within the commi\u0000ee to win o\ufb03cial IEEE endorsement, and that took time.", "start_char_idx": 0, "end_char_idx": 695, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd47be96-e44b-467e-811a-1c07b0404da0": {"__data__": {"id_": "fd47be96-e44b-467e-811a-1c07b0404da0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc352957-696e-4cdf-a321-f7e2c422a7ec", "node_type": "4", "metadata": {}, "hash": "28209024e6b69f1bbef8097cb13c388dc0f9b934ecb9c516ba16341a5660049f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "72526fc7-70e8-41f2-b8ad-ee02d981d100", "node_type": "1", "metadata": {}, "hash": "969994e7a36fa0781da9d95c31917080284fe06dc252d4fd3d17e4aef3ce677b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edf772f9-203c-479a-8b13-d8f9f7a9c1fd", "node_type": "1", "metadata": {}, "hash": "4d2ae8d57b12e5798f39fc60e91b34e1f9a2e201c29fba5b9f43223e979a7e60", "class_name": "RelatedNodeInfo"}}, "text": "The First IEEE 754 Chips In 1980, Intel became tired of waiting and released the 8087 for use in the IBM PC. The \ufb02oating-point architecture of the companion 8087 had to be retro\ufb01\u0000ed into the 8086 opcode space, making it inconvenient to o\ufb00er two operands per instruction as found in the rest of the 8086. Hence, the decision for one operand per instruction using a stack: \u201cThe designer\u2019s task was to make a Virtue of this Necessity.\u201d (Kahan\u2019s [1990] history of the stack architecture selection for the 8087 is entertaining reading.)", "start_char_idx": 0, "end_char_idx": 531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "edf772f9-203c-479a-8b13-d8f9f7a9c1fd": {"__data__": {"id_": "edf772f9-203c-479a-8b13-d8f9f7a9c1fd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3e32c598-0067-4e26-bd13-a9db0e76a166", "node_type": "4", "metadata": {}, "hash": "4d2ae8d57b12e5798f39fc60e91b34e1f9a2e201c29fba5b9f43223e979a7e60", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd47be96-e44b-467e-811a-1c07b0404da0", "node_type": "1", "metadata": {}, "hash": "28209024e6b69f1bbef8097cb13c388dc0f9b934ecb9c516ba16341a5660049f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "137c01da-6089-4f55-ba65-eaf74ebd0102", "node_type": "1", "metadata": {}, "hash": "595087e3b41f9872fb5f858d1bd9dfc8ff2e13ed2f46fedd48e46e7ae2095bfc", "class_name": "RelatedNodeInfo"}}, "text": "Rather than the classical stack architecture, which has no pro", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "137c01da-6089-4f55-ba65-eaf74ebd0102": {"__data__": {"id_": "137c01da-6089-4f55-ba65-eaf74ebd0102", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "220b9e0c-a000-40b3-a30e-2662ab88e1bc", "node_type": "4", "metadata": {}, "hash": "595087e3b41f9872fb5f858d1bd9dfc8ff2e13ed2f46fedd48e46e7ae2095bfc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edf772f9-203c-479a-8b13-d8f9f7a9c1fd", "node_type": "1", "metadata": {}, "hash": "4d2ae8d57b12e5798f39fc60e91b34e1f9a2e201c29fba5b9f43223e979a7e60", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4bd8e6a-37fb-4e54-9487-7e997c07624b", "node_type": "1", "metadata": {}, "hash": "08c9a377f9319ae88d2375a06a23a29a5eb115d6e676bd5afd16dcb4dabcf300", "class_name": "RelatedNodeInfo"}}, "text": "vision for avoiding common subexpressions from being pushed and", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b4bd8e6a-37fb-4e54-9487-7e997c07624b": {"__data__": {"id_": "b4bd8e6a-37fb-4e54-9487-7e997c07624b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "708a947d-b6da-46a7-91e8-ca9c7f544374", "node_type": "4", "metadata": {}, "hash": "08c9a377f9319ae88d2375a06a23a29a5eb115d6e676bd5afd16dcb4dabcf300", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "137c01da-6089-4f55-ba65-eaf74ebd0102", "node_type": "1", "metadata": {}, "hash": "595087e3b41f9872fb5f858d1bd9dfc8ff2e13ed2f46fedd48e46e7ae2095bfc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7ba47264-9404-4b28-9c86-4a28dd42c733", "node_type": "1", "metadata": {}, "hash": "f62a50b560b44712bce4ae077660f49491b7e2e886f5484d6ee574bbf38c71d6", "class_name": "RelatedNodeInfo"}}, "text": "popped from memory into the top of the stack found in registers, Intel tried to combine a \ufb02at register \ufb01le with a stack. The reasoning was that the restriction of the top of stack as one operand was not so bad since it only required the execution of an FXCH instruction (which swapped registers) to get the same result as a two-operand instruction, and FXCH was much faster than the \ufb02oating-point operations of the 8087.", "start_char_idx": 0, "end_char_idx": 420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ba47264-9404-4b28-9c86-4a28dd42c733": {"__data__": {"id_": "7ba47264-9404-4b28-9c86-4a28dd42c733", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fa1b8fb4-4402-4a75-8957-ff1f93276fad", "node_type": "4", "metadata": {}, "hash": "f62a50b560b44712bce4ae077660f49491b7e2e886f5484d6ee574bbf38c71d6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4bd8e6a-37fb-4e54-9487-7e997c07624b", "node_type": "1", "metadata": {}, "hash": "08c9a377f9319ae88d2375a06a23a29a5eb115d6e676bd5afd16dcb4dabcf300", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d188a70d-b6db-4470-8551-8cd66297280b", "node_type": "1", "metadata": {}, "hash": "862587ae9e74cc254f4a9675a281d2d1cf6bb4fef2f468c6486ca3404ec65f7e", "class_name": "RelatedNodeInfo"}}, "text": "Since \ufb02oating-point expressions are not that complex, Kahan reasoned that eight registers meant that the stack would rarely over\ufb02ow. Hence, he urged that the 8087 use this hybrid scheme with the provision that stack over\ufb02ow or stack under\ufb02ow would interrupt the 8086 so that interrupt software could give the illusion to the compiler writer of an unlimited stack for \ufb02oating-point data.", "start_char_idx": 0, "end_char_idx": 386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d188a70d-b6db-4470-8551-8cd66297280b": {"__data__": {"id_": "d188a70d-b6db-4470-8551-8cd66297280b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5aa6bf6a-30ec-4ac9-bfde-974db42834d2", "node_type": "4", "metadata": {}, "hash": "862587ae9e74cc254f4a9675a281d2d1cf6bb4fef2f468c6486ca3404ec65f7e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7ba47264-9404-4b28-9c86-4a28dd42c733", "node_type": "1", "metadata": {}, "hash": "f62a50b560b44712bce4ae077660f49491b7e2e886f5484d6ee574bbf38c71d6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ef29259-6420-4127-a329-dc2c80883b9d", "node_type": "1", "metadata": {}, "hash": "d80ed8e92e335de408eb7cabe9c7f17597c39b22394cfdf82dd3200ab2c1c767", "class_name": "RelatedNodeInfo"}}, "text": "The Intel 8087 was implemented in Israel, and 7500 miles and 10", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ef29259-6420-4127-a329-dc2c80883b9d": {"__data__": {"id_": "4ef29259-6420-4127-a329-dc2c80883b9d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "65d29bde-c4bb-467f-81a1-d58a94968d56", "node_type": "4", "metadata": {}, "hash": "d80ed8e92e335de408eb7cabe9c7f17597c39b22394cfdf82dd3200ab2c1c767", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d188a70d-b6db-4470-8551-8cd66297280b", "node_type": "1", "metadata": {}, "hash": "862587ae9e74cc254f4a9675a281d2d1cf6bb4fef2f468c6486ca3404ec65f7e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb037b91-d295-49c2-a6a2-fad5d0789a11", "node_type": "1", "metadata": {}, "hash": "420e778138be0a280edeccee07d5e854c9bf2b6c6c9f658a48f0e52c8aa5a9d4", "class_name": "RelatedNodeInfo"}}, "text": "time zones made communication from California di\ufb03cult. According to Palmer and Morse (The 8087 Primer, J. Wiley, New York, 1984, p. 93):", "start_char_idx": 0, "end_char_idx": 136, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb037b91-d295-49c2-a6a2-fad5d0789a11": {"__data__": {"id_": "cb037b91-d295-49c2-a6a2-fad5d0789a11", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "75463e64-d34c-480a-85d9-b7640d97bdca", "node_type": "4", "metadata": {}, "hash": "420e778138be0a280edeccee07d5e854c9bf2b6c6c9f658a48f0e52c8aa5a9d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ef29259-6420-4127-a329-dc2c80883b9d", "node_type": "1", "metadata": {}, "hash": "d80ed8e92e335de408eb7cabe9c7f17597c39b22394cfdf82dd3200ab2c1c767", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f39dd46-6c96-49c0-b044-e458b151c651", "node_type": "1", "metadata": {}, "hash": "428f91536a6025333828bbfb1e82647bd289013d98f554812ffa08d9feed80f3", "class_name": "RelatedNodeInfo"}}, "text": "Unfortunately, nobody tried to write a software stack manager until after the 8087 was built, and by then it was too late; what was too complicated to perform in hardware turned out to be even worse in software. One thing found lacking is the ability to conveniently determine if an invalid operation is indeed due to a stack over\ufb02ow\u2026. Also lacking is the ability to restart the instruction that caused the stack over\ufb02ow \u2026", "start_char_idx": 0, "end_char_idx": 422, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6f39dd46-6c96-49c0-b044-e458b151c651": {"__data__": {"id_": "6f39dd46-6c96-49c0-b044-e458b151c651", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ab389e6a-c4fc-42f4-8e08-43f8e2519483", "node_type": "4", "metadata": {}, "hash": "428f91536a6025333828bbfb1e82647bd289013d98f554812ffa08d9feed80f3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb037b91-d295-49c2-a6a2-fad5d0789a11", "node_type": "1", "metadata": {}, "hash": "420e778138be0a280edeccee07d5e854c9bf2b6c6c9f658a48f0e52c8aa5a9d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d9cc489-97ef-48d6-acb1-00ec02992c0d", "node_type": "1", "metadata": {}, "hash": "8392d1e90aed0c24385b34b7b6cd976b8aa8829ce54ce4e6d40bcede99c6c281", "class_name": "RelatedNodeInfo"}}, "text": "The result is that the stack exceptions are too slow to handle in", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d9cc489-97ef-48d6-acb1-00ec02992c0d": {"__data__": {"id_": "2d9cc489-97ef-48d6-acb1-00ec02992c0d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2af1e837-2d98-4aba-b003-17c93f934212", "node_type": "4", "metadata": {}, "hash": "8392d1e90aed0c24385b34b7b6cd976b8aa8829ce54ce4e6d40bcede99c6c281", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f39dd46-6c96-49c0-b044-e458b151c651", "node_type": "1", "metadata": {}, "hash": "428f91536a6025333828bbfb1e82647bd289013d98f554812ffa08d9feed80f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aac18dd6-a020-4b24-b546-a4f358e6d0c7", "node_type": "1", "metadata": {}, "hash": "1ee2a94647148a304b5f48e242fa740c7a39833159c827bb7bbe5675312396ab", "class_name": "RelatedNodeInfo"}}, "text": "software. As Kahan [1990] says:", "start_char_idx": 0, "end_char_idx": 31, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aac18dd6-a020-4b24-b546-a4f358e6d0c7": {"__data__": {"id_": "aac18dd6-a020-4b24-b546-a4f358e6d0c7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5973191b-99dc-4c57-8c93-1c4aa3ea3283", "node_type": "4", "metadata": {}, "hash": "1ee2a94647148a304b5f48e242fa740c7a39833159c827bb7bbe5675312396ab", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d9cc489-97ef-48d6-acb1-00ec02992c0d", "node_type": "1", "metadata": {}, "hash": "8392d1e90aed0c24385b34b7b6cd976b8aa8829ce54ce4e6d40bcede99c6c281", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e83bb429-3f14-4182-8248-a4825251fe87", "node_type": "1", "metadata": {}, "hash": "a29e7d012b9bea6e717e8aadee16871bb1caf089bdf1fb6f6f0f99df5a4f80c0", "class_name": "RelatedNodeInfo"}}, "text": "Consequently, almost all higher-level languages\u2019 compilers emit ine\ufb03cient code for the 80x87 family, degrading the chip\u2019s performance by typically 50% with spurious stores and loads necessary simply to preclude stack over/under-\ufb02ow\u2026.", "start_char_idx": 0, "end_char_idx": 233, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e83bb429-3f14-4182-8248-a4825251fe87": {"__data__": {"id_": "e83bb429-3f14-4182-8248-a4825251fe87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f09b47c8-334b-43c7-9e4e-1c77417cabfb", "node_type": "4", "metadata": {}, "hash": "a29e7d012b9bea6e717e8aadee16871bb1caf089bdf1fb6f6f0f99df5a4f80c0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aac18dd6-a020-4b24-b546-a4f358e6d0c7", "node_type": "1", "metadata": {}, "hash": "1ee2a94647148a304b5f48e242fa740c7a39833159c827bb7bbe5675312396ab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27e88717-15b2-4c93-8254-a615d12435fb", "node_type": "1", "metadata": {}, "hash": "316589be78743458b9536a1139b3c3b43d567e7491011009917e58cb80cef262", "class_name": "RelatedNodeInfo"}}, "text": "I still regret that the 8087\u2019s stack implementation was not quite so neat as my original intention\u2026. If the original de sign had been realized, compilers today would use the 80x87 and its descendents", "start_char_idx": 0, "end_char_idx": 199, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27e88717-15b2-4c93-8254-a615d12435fb": {"__data__": {"id_": "27e88717-15b2-4c93-8254-a615d12435fb", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7267ca9f-c980-48cc-bb21-56cf7ab5b57e", "node_type": "4", "metadata": {}, "hash": "316589be78743458b9536a1139b3c3b43d567e7491011009917e58cb80cef262", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e83bb429-3f14-4182-8248-a4825251fe87", "node_type": "1", "metadata": {}, "hash": "a29e7d012b9bea6e717e8aadee16871bb1caf089bdf1fb6f6f0f99df5a4f80c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "963e4f62-c4c9-4246-8feb-81c7d41ce86a", "node_type": "1", "metadata": {}, "hash": "b4d7952536327dee6719317a3a688fc2c155577e2d5bed13f4f13ac91c7d72ac", "class_name": "RelatedNodeInfo"}}, "text": "more e\ufb03ciently, and Intel\u2019s competitors could more easily market faster but compatible 80x87 imitations.", "start_char_idx": 0, "end_char_idx": 104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "963e4f62-c4c9-4246-8feb-81c7d41ce86a": {"__data__": {"id_": "963e4f62-c4c9-4246-8feb-81c7d41ce86a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c492116-eab1-43da-be43-787e79b48b02", "node_type": "4", "metadata": {}, "hash": "b4d7952536327dee6719317a3a688fc2c155577e2d5bed13f4f13ac91c7d72ac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27e88717-15b2-4c93-8254-a615d12435fb", "node_type": "1", "metadata": {}, "hash": "316589be78743458b9536a1139b3c3b43d567e7491011009917e58cb80cef262", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4ec42b13-53f4-417e-bf58-024f9ccfd0a9", "node_type": "1", "metadata": {}, "hash": "577b30e74fbfa011679829c0b61b7e54339d0bf64ae9c982b6d401b83d5cf736", "class_name": "RelatedNodeInfo"}}, "text": "In 1982, Motorola announced its 68881, which found a place in Sun", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ec42b13-53f4-417e-bf58-024f9ccfd0a9": {"__data__": {"id_": "4ec42b13-53f4-417e-bf58-024f9ccfd0a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "06d5d8ea-2671-47a2-ae4c-8a48a8ee34fa", "node_type": "4", "metadata": {}, "hash": "577b30e74fbfa011679829c0b61b7e54339d0bf64ae9c982b6d401b83d5cf736", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963e4f62-c4c9-4246-8feb-81c7d41ce86a", "node_type": "1", "metadata": {}, "hash": "b4d7952536327dee6719317a3a688fc2c155577e2d5bed13f4f13ac91c7d72ac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9458096-edf0-4a24-98f1-9eb8da45a759", "node_type": "1", "metadata": {}, "hash": "d1b050ed9a68707e6aa2508a3db0ecc5a5bcd39643cbf873bb637dfdc3e329cc", "class_name": "RelatedNodeInfo"}}, "text": "3s and Macintosh IIs; Apple had been a supporter of the proposal from the beginning. Another Berkeley graduate student, George S. Taylor, had soon designed a highspeed implementation of the proposed standard for an early superminicomputer (ELXSI 6400). The standard was becoming de facto before its \ufb01nal draft\u2019s ink was dry.", "start_char_idx": 0, "end_char_idx": 324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9458096-edf0-4a24-98f1-9eb8da45a759": {"__data__": {"id_": "c9458096-edf0-4a24-98f1-9eb8da45a759", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2406f232-7dd7-4620-bd20-8f07d272d089", "node_type": "4", "metadata": {}, "hash": "d1b050ed9a68707e6aa2508a3db0ecc5a5bcd39643cbf873bb637dfdc3e329cc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4ec42b13-53f4-417e-bf58-024f9ccfd0a9", "node_type": "1", "metadata": {}, "hash": "577b30e74fbfa011679829c0b61b7e54339d0bf64ae9c982b6d401b83d5cf736", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "894f8786-5da9-422e-aa55-442761786a2a", "node_type": "1", "metadata": {}, "hash": "4daf7f0b494fde1e7316495c8afbba69afa36c319f2998b173912dc3e9929e41", "class_name": "RelatedNodeInfo"}}, "text": "An early rush of adoptions gave the computing industry the false", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "894f8786-5da9-422e-aa55-442761786a2a": {"__data__": {"id_": "894f8786-5da9-422e-aa55-442761786a2a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "85dd6a6e-5464-4002-bca2-dfd1e4360ce1", "node_type": "4", "metadata": {}, "hash": "4daf7f0b494fde1e7316495c8afbba69afa36c319f2998b173912dc3e9929e41", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9458096-edf0-4a24-98f1-9eb8da45a759", "node_type": "1", "metadata": {}, "hash": "d1b050ed9a68707e6aa2508a3db0ecc5a5bcd39643cbf873bb637dfdc3e329cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93440cdd-f91d-4050-9e2a-64d9ffb63f1f", "node_type": "1", "metadata": {}, "hash": "8a7865f0068709dc8866ed81be1aedaf63131708214fc370a5509c3e956d6242", "class_name": "RelatedNodeInfo"}}, "text": "impression that IEEE 754, like so many other standards, could be implemented easily by following a standard recipe. Not true. Only the enthusiasm and ingenuity of its early implementors made it look easy.", "start_char_idx": 0, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93440cdd-f91d-4050-9e2a-64d9ffb63f1f": {"__data__": {"id_": "93440cdd-f91d-4050-9e2a-64d9ffb63f1f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "07b18a61-fe53-4c7d-84bd-a9d840736c42", "node_type": "4", "metadata": {}, "hash": "8a7865f0068709dc8866ed81be1aedaf63131708214fc370a5509c3e956d6242", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "894f8786-5da9-422e-aa55-442761786a2a", "node_type": "1", "metadata": {}, "hash": "4daf7f0b494fde1e7316495c8afbba69afa36c319f2998b173912dc3e9929e41", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b53e23f-3977-4e99-a593-cd650f78f704", "node_type": "1", "metadata": {}, "hash": "84fd10c533f032f725846975f5469f3bf32e16ba56b2ea3397ad400f181a4d14", "class_name": "RelatedNodeInfo"}}, "text": "In fact, to implement IEEE 754 correctly demands extraordinarily", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b53e23f-3977-4e99-a593-cd650f78f704": {"__data__": {"id_": "4b53e23f-3977-4e99-a593-cd650f78f704", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ab72e03a-8ec7-43ae-adbd-d87b6b7a9471", "node_type": "4", "metadata": {}, "hash": "84fd10c533f032f725846975f5469f3bf32e16ba56b2ea3397ad400f181a4d14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93440cdd-f91d-4050-9e2a-64d9ffb63f1f", "node_type": "1", "metadata": {}, "hash": "8a7865f0068709dc8866ed81be1aedaf63131708214fc370a5509c3e956d6242", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec1ad486-8c7c-4271-b7db-afd77390e6be", "node_type": "1", "metadata": {}, "hash": "8edb18a9e71e028dd996feed3934797d74dc4dd7f42abbfb758f8a758e9ae04b", "class_name": "RelatedNodeInfo"}}, "text": "diligent a\u0000ention to detail; to make it run fast demands extraordinarily competent ingenuity of design. Had the industry\u2019s engineering managers realized this, they might not have been so quick to a\ufb03rm that, as a ma\u0000er of policy, \u201cWe conform to all applicable standards.\u201d", "start_char_idx": 0, "end_char_idx": 270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec1ad486-8c7c-4271-b7db-afd77390e6be": {"__data__": {"id_": "ec1ad486-8c7c-4271-b7db-afd77390e6be", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "32bcb0f3-8316-4cc6-a988-6b2cd6a632a5", "node_type": "4", "metadata": {}, "hash": "8edb18a9e71e028dd996feed3934797d74dc4dd7f42abbfb758f8a758e9ae04b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b53e23f-3977-4e99-a593-cd650f78f704", "node_type": "1", "metadata": {}, "hash": "84fd10c533f032f725846975f5469f3bf32e16ba56b2ea3397ad400f181a4d14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41917266-6441-4a78-a9e1-6065ce427f5a", "node_type": "1", "metadata": {}, "hash": "f5864b4da50049265adf25dd47bd09970814bfbc858fcf0fb01debd124651d19", "class_name": "RelatedNodeInfo"}}, "text": "IEEE 754 Today Unfortunately, the compiler-writing community was not represented adequately in the wrangling, and some of the features didn\u2019t balance language and compiler issues against other points. That community has been slow to make IEEE 754\u2019s unusual features available to the applications programmer. Humane exception handling is one such unusual feature; directed rounding another. Without compiler support, these features have atrophied.", "start_char_idx": 0, "end_char_idx": 446, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41917266-6441-4a78-a9e1-6065ce427f5a": {"__data__": {"id_": "41917266-6441-4a78-a9e1-6065ce427f5a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6466fd6c-b869-4bfb-8c8c-b92248a3f128", "node_type": "4", "metadata": {}, "hash": "f5864b4da50049265adf25dd47bd09970814bfbc858fcf0fb01debd124651d19", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec1ad486-8c7c-4271-b7db-afd77390e6be", "node_type": "1", "metadata": {}, "hash": "8edb18a9e71e028dd996feed3934797d74dc4dd7f42abbfb758f8a758e9ae04b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3bd8d53-14c2-4e0c-a602-36b83d4d5a66", "node_type": "1", "metadata": {}, "hash": "8e41b32361396ccc8d7ed629d63dc9287c1b4aacd3588d73319e0439aad485a0", "class_name": "RelatedNodeInfo"}}, "text": "The successful parts of IEEE 754 are that it is a widely", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3bd8d53-14c2-4e0c-a602-36b83d4d5a66": {"__data__": {"id_": "a3bd8d53-14c2-4e0c-a602-36b83d4d5a66", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b618d094-4bd7-49f4-9071-994378a2f3ff", "node_type": "4", "metadata": {}, "hash": "8e41b32361396ccc8d7ed629d63dc9287c1b4aacd3588d73319e0439aad485a0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41917266-6441-4a78-a9e1-6065ce427f5a", "node_type": "1", "metadata": {}, "hash": "f5864b4da50049265adf25dd47bd09970814bfbc858fcf0fb01debd124651d19", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76dc5a57-693c-4338-b2d2-b0424f41591e", "node_type": "1", "metadata": {}, "hash": "4f94794119af6197009427ec3d28fc04108f1bfb5993a70e9fca7ff4c0f2007e", "class_name": "RelatedNodeInfo"}}, "text": "implemented standard with a common \ufb02oating-point format, that it requires minimum accuracy to one-half ulp in the least signi\ufb01cant bit, and that operations must be commutative.", "start_char_idx": 0, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76dc5a57-693c-4338-b2d2-b0424f41591e": {"__data__": {"id_": "76dc5a57-693c-4338-b2d2-b0424f41591e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "18037435-3bd4-4d1a-aeef-5ec895754ee5", "node_type": "4", "metadata": {}, "hash": "4f94794119af6197009427ec3d28fc04108f1bfb5993a70e9fca7ff4c0f2007e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3bd8d53-14c2-4e0c-a602-36b83d4d5a66", "node_type": "1", "metadata": {}, "hash": "8e41b32361396ccc8d7ed629d63dc9287c1b4aacd3588d73319e0439aad485a0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "af7a3a7d-b837-483d-a828-8ed5cc442fba", "node_type": "1", "metadata": {}, "hash": "047755620206799b936e52348a9e3cbe5c407fb955f32f140b9a5736a9ca42dd", "class_name": "RelatedNodeInfo"}}, "text": "The IEEE 754/854 have been implemented to a considerable degree", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af7a3a7d-b837-483d-a828-8ed5cc442fba": {"__data__": {"id_": "af7a3a7d-b837-483d-a828-8ed5cc442fba", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b8fe1b60-d207-4b55-ae00-a5ecddd9583e", "node_type": "4", "metadata": {}, "hash": "047755620206799b936e52348a9e3cbe5c407fb955f32f140b9a5736a9ca42dd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76dc5a57-693c-4338-b2d2-b0424f41591e", "node_type": "1", "metadata": {}, "hash": "4f94794119af6197009427ec3d28fc04108f1bfb5993a70e9fca7ff4c0f2007e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "69cba123-bc65-424f-b6b9-2028627dce87", "node_type": "1", "metadata": {}, "hash": "641786d25a547dc6e2fd1a4e9cd172b14b146dcc7a78104ad1c86644ffcf6362", "class_name": "RelatedNodeInfo"}}, "text": "American computer manufacturer. The only signi\ufb01cant exceptions were the DEC VAX, IBM S/370 descendants, and Cray Research vector supercomputers, and all three have been replaced by compliant computers.", "start_char_idx": 0, "end_char_idx": 201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69cba123-bc65-424f-b6b9-2028627dce87": {"__data__": {"id_": "69cba123-bc65-424f-b6b9-2028627dce87", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6accd3df-ba8e-4326-a694-204bf4fc89c5", "node_type": "4", "metadata": {}, "hash": "641786d25a547dc6e2fd1a4e9cd172b14b146dcc7a78104ad1c86644ffcf6362", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "af7a3a7d-b837-483d-a828-8ed5cc442fba", "node_type": "1", "metadata": {}, "hash": "047755620206799b936e52348a9e3cbe5c407fb955f32f140b9a5736a9ca42dd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09daa2cb-dbfc-482a-9030-980d4f50b5e6", "node_type": "1", "metadata": {}, "hash": "d9a866b3ea094221436dc002eef51018f41c13277b339574fe1eab2c734b1c3e", "class_name": "RelatedNodeInfo"}}, "text": "acknowledging the bene\ufb01ts conferred upon the computing industry by IEEE 754, honored Kahan with the Turing Award. On accepting it, he thanked his many associates for their diligent support, and his adversaries for their blunders. So \u2026 not all errors are bad.", "start_char_idx": 0, "end_char_idx": 258, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "09daa2cb-dbfc-482a-9030-980d4f50b5e6": {"__data__": {"id_": "09daa2cb-dbfc-482a-9030-980d4f50b5e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8cc65ec2-2dc8-4024-b115-10367bcde7e9", "node_type": "4", "metadata": {}, "hash": "d9a866b3ea094221436dc002eef51018f41c13277b339574fe1eab2c734b1c3e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "69cba123-bc65-424f-b6b9-2028627dce87", "node_type": "1", "metadata": {}, "hash": "641786d25a547dc6e2fd1a4e9cd172b14b146dcc7a78104ad1c86644ffcf6362", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7de89bc9-bdef-40d2-b275-bbf24ebe5189", "node_type": "1", "metadata": {}, "hash": "5b2ad305d0b989876ce38adbd462b067c5016044286defc20f55eed3eb2d8f1c", "class_name": "RelatedNodeInfo"}}, "text": "IEEE rules ask that a standard be revisited periodically for updating. A commi\u0000ee started in 2000, drafts of the revised standards were circulated for voting, and were approved in 2008. The revised standard, IEEE Std 754-2008 [2008], includes several new types: 16-bit \ufb02oating point, called half precision; 128-bit \ufb02oating point, called quad precision; and three decimal types, matching the length of the 32-bit, 64-bit, and 128-bit binary formats. IEEE Std 754-2019 made minor changes to the standard. The plan is to revisit it every 10 years.", "start_char_idx": 0, "end_char_idx": 544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7de89bc9-bdef-40d2-b275-bbf24ebe5189": {"__data__": {"id_": "7de89bc9-bdef-40d2-b275-bbf24ebe5189", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fdeb4cba-a6a3-417d-a96a-9247de79947f", "node_type": "4", "metadata": {}, "hash": "5b2ad305d0b989876ce38adbd462b067c5016044286defc20f55eed3eb2d8f1c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09daa2cb-dbfc-482a-9030-980d4f50b5e6", "node_type": "1", "metadata": {}, "hash": "d9a866b3ea094221436dc002eef51018f41c13277b339574fe1eab2c734b1c3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "975fdc77-0970-49ca-b073-3f6593d2eb15", "node_type": "1", "metadata": {}, "hash": "9ba644d5d7ecccfdf48c981ce513b86b8f4daa3a586a8f6ba7feccebc3291d61", "class_name": "RelatedNodeInfo"}}, "text": "Further Reading If you are interested in learning more about \ufb02oating point, two publications by David Goldberg [1991, 2002] are good starting points; they abound with pointers to further reading. Several of the stories told on the CD come from Kahan [1972, 1983]. The latest word on the state of the art in computer arithmetic is often found in the Proceedings of the latest IEEE-sponsored Symposium on Computer Arithmetic, held every two years; the 16th was held in 2003.", "start_char_idx": 0, "end_char_idx": 472, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "975fdc77-0970-49ca-b073-3f6593d2eb15": {"__data__": {"id_": "975fdc77-0970-49ca-b073-3f6593d2eb15", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3bfaa584-060f-46aa-9755-193077a71a0d", "node_type": "4", "metadata": {}, "hash": "9ba644d5d7ecccfdf48c981ce513b86b8f4daa3a586a8f6ba7feccebc3291d61", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7de89bc9-bdef-40d2-b275-bbf24ebe5189", "node_type": "1", "metadata": {}, "hash": "5b2ad305d0b989876ce38adbd462b067c5016044286defc20f55eed3eb2d8f1c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9bec055-3fd6-4b9a-b3bd-065c935d1820", "node_type": "1", "metadata": {}, "hash": "3823810e47c18c388947d7e8517f031a0703000ece0c4f5502d2f48c2d68df2f", "class_name": "RelatedNodeInfo"}}, "text": "Burks, A. W., H. H. Goldstine, and J. von Neumann [1946]. \u201cPreliminary discussion of the logical design of an electronic computing instrument,\u201d Report to the U.S. Army Ordnance Dept., p. 1; also in Papers of John von Neumann, W. Aspray and A. Burks (Eds.), MIT Press, Cambridge, MA, and Tomash Publishers, Los Angeles, 1987, 97\u2013146.", "start_char_idx": 0, "end_char_idx": 332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9bec055-3fd6-4b9a-b3bd-065c935d1820": {"__data__": {"id_": "a9bec055-3fd6-4b9a-b3bd-065c935d1820", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f49f0924-a249-4ab9-9e1c-f9de2eef66af", "node_type": "4", "metadata": {}, "hash": "3823810e47c18c388947d7e8517f031a0703000ece0c4f5502d2f48c2d68df2f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "975fdc77-0970-49ca-b073-3f6593d2eb15", "node_type": "1", "metadata": {}, "hash": "9ba644d5d7ecccfdf48c981ce513b86b8f4daa3a586a8f6ba7feccebc3291d61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c53e5de6-3d0e-491e-a807-be9cb6e6f38e", "node_type": "1", "metadata": {}, "hash": "2acba8c70950dbc238b360a0a84a173b3f4c4d82cb580ffbaeffdb4d4155703d", "class_name": "RelatedNodeInfo"}}, "text": "This classic paper includes arguments against \ufb02oating-point hardware.", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c53e5de6-3d0e-491e-a807-be9cb6e6f38e": {"__data__": {"id_": "c53e5de6-3d0e-491e-a807-be9cb6e6f38e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "49897da6-87bd-4ee1-ab99-6c6a482c32b7", "node_type": "4", "metadata": {}, "hash": "2acba8c70950dbc238b360a0a84a173b3f4c4d82cb580ffbaeffdb4d4155703d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9bec055-3fd6-4b9a-b3bd-065c935d1820", "node_type": "1", "metadata": {}, "hash": "3823810e47c18c388947d7e8517f031a0703000ece0c4f5502d2f48c2d68df2f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "435b8c14-2ed0-4459-b408-b494d48f84f0", "node_type": "1", "metadata": {}, "hash": "57d95af484eefad0644569595f35b18d47ed0818be6af287aeb19981416bbcfa", "class_name": "RelatedNodeInfo"}}, "text": "Goldberg, D. [2002]. \u201cComputer arithmetic,\u201d Appendix A of Computer Architecture: A Quantitative Approach, third edition, J. L. Hennessy and D. A. Pa\u0000erson, Morgan Kaufmann Publishers, San Francisco.", "start_char_idx": 0, "end_char_idx": 198, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "435b8c14-2ed0-4459-b408-b494d48f84f0": {"__data__": {"id_": "435b8c14-2ed0-4459-b408-b494d48f84f0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a782985c-a2bd-48bf-abb4-74eceeca50cc", "node_type": "4", "metadata": {}, "hash": "57d95af484eefad0644569595f35b18d47ed0818be6af287aeb19981416bbcfa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c53e5de6-3d0e-491e-a807-be9cb6e6f38e", "node_type": "1", "metadata": {}, "hash": "2acba8c70950dbc238b360a0a84a173b3f4c4d82cb580ffbaeffdb4d4155703d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "23beb3d9-0380-4612-9431-98ba0e499bd0", "node_type": "1", "metadata": {}, "hash": "97e4d666c7c379f5886db95ea2976835ce3ee48753786fbbea32a477b0cc344b", "class_name": "RelatedNodeInfo"}}, "text": "A more advanced introduction to integer and \ufb02oating-point arithmetic, with emphasis on hardware. It covers Sections 3.4\u20133.6 of this book in just 10 pages, leaving another 45 pages for advanced topics.", "start_char_idx": 0, "end_char_idx": 200, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23beb3d9-0380-4612-9431-98ba0e499bd0": {"__data__": {"id_": "23beb3d9-0380-4612-9431-98ba0e499bd0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0329b740-4abf-40cd-ab9b-26a3eb403d0b", "node_type": "4", "metadata": {}, "hash": "97e4d666c7c379f5886db95ea2976835ce3ee48753786fbbea32a477b0cc344b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "435b8c14-2ed0-4459-b408-b494d48f84f0", "node_type": "1", "metadata": {}, "hash": "57d95af484eefad0644569595f35b18d47ed0818be6af287aeb19981416bbcfa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a31c3909-2eb9-46fd-81f8-ca60263db607", "node_type": "1", "metadata": {}, "hash": "b021886049bfbdb2edad01cdd7f2097456ac5a9dc70fc65680db28e535bebc1a", "class_name": "RelatedNodeInfo"}}, "text": "Goldberg, D. [1991]. \u201cWhat every computer scientist should know about \ufb02oating-point arithmetic,\u201d ACM Computing Surveys 23(1) 5\u201348.", "start_char_idx": 0, "end_char_idx": 130, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a31c3909-2eb9-46fd-81f8-ca60263db607": {"__data__": {"id_": "a31c3909-2eb9-46fd-81f8-ca60263db607", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7bc701ac-a00d-43ab-9de2-487cbeabd5b0", "node_type": "4", "metadata": {}, "hash": "b021886049bfbdb2edad01cdd7f2097456ac5a9dc70fc65680db28e535bebc1a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "23beb3d9-0380-4612-9431-98ba0e499bd0", "node_type": "1", "metadata": {}, "hash": "97e4d666c7c379f5886db95ea2976835ce3ee48753786fbbea32a477b0cc344b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59a0a4ab-9119-434b-bb47-27735676e7f4", "node_type": "1", "metadata": {}, "hash": "5797f79efb233c016fb01305c01607a3a21c554dd9b2a608ec30d55a586ca8f2", "class_name": "RelatedNodeInfo"}}, "text": "Kahan, W. [1972]. \u201cA survey of error-analysis,\u201d in Info. Processing", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59a0a4ab-9119-434b-bb47-27735676e7f4": {"__data__": {"id_": "59a0a4ab-9119-434b-bb47-27735676e7f4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d6541d5e-10c3-48a9-9279-2b746c67eb46", "node_type": "4", "metadata": {}, "hash": "5797f79efb233c016fb01305c01607a3a21c554dd9b2a608ec30d55a586ca8f2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a31c3909-2eb9-46fd-81f8-ca60263db607", "node_type": "1", "metadata": {}, "hash": "b021886049bfbdb2edad01cdd7f2097456ac5a9dc70fc65680db28e535bebc1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "492e5c1f-4ead-4875-9c40-648b706cf2bd", "node_type": "1", "metadata": {}, "hash": "3548525740426e01174f1dd82ba176b0c24c48d6b6bc422eef94ecb3905d5b4e", "class_name": "RelatedNodeInfo"}}, "text": "71 (Proc. IFIP Congress 71 in Ljubljana), Vol. 2, North-Holland Publishing, Amsterdam, 1214\u20131239.", "start_char_idx": 0, "end_char_idx": 97, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "492e5c1f-4ead-4875-9c40-648b706cf2bd": {"__data__": {"id_": "492e5c1f-4ead-4875-9c40-648b706cf2bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "60f8b410-7c91-426e-9a5f-5ce171bec4a3", "node_type": "4", "metadata": {}, "hash": "3548525740426e01174f1dd82ba176b0c24c48d6b6bc422eef94ecb3905d5b4e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59a0a4ab-9119-434b-bb47-27735676e7f4", "node_type": "1", "metadata": {}, "hash": "5797f79efb233c016fb01305c01607a3a21c554dd9b2a608ec30d55a586ca8f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "485ca146-26c1-4f67-8a9d-1e0de3d1b73c", "node_type": "1", "metadata": {}, "hash": "5472eee94a0bad8d4b46dd04e5567457f777dbd200b42e422106295d6d9fec23", "class_name": "RelatedNodeInfo"}}, "text": "This survey is a source of stories on the importance of accurate", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "485ca146-26c1-4f67-8a9d-1e0de3d1b73c": {"__data__": {"id_": "485ca146-26c1-4f67-8a9d-1e0de3d1b73c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c72a40ba-99fa-4896-97c8-9c5ea7a1e832", "node_type": "4", "metadata": {}, "hash": "5472eee94a0bad8d4b46dd04e5567457f777dbd200b42e422106295d6d9fec23", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "492e5c1f-4ead-4875-9c40-648b706cf2bd", "node_type": "1", "metadata": {}, "hash": "3548525740426e01174f1dd82ba176b0c24c48d6b6bc422eef94ecb3905d5b4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40033c0b-6fcd-4964-bcfd-64c821fa8ecc", "node_type": "1", "metadata": {}, "hash": "ee754dca257ed5db47f8c1ade4ede9481ae150bc30a11adc804e0cee4b461672", "class_name": "RelatedNodeInfo"}}, "text": "Kahan, W. [1983]. \u201cMathematics wri\u0000en in sand,\u201d Proc. Amer. Stat. Assoc. Joint Summer Meetings of 1983, Statistical Computing Section, 12\u2013 26.", "start_char_idx": 0, "end_char_idx": 142, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40033c0b-6fcd-4964-bcfd-64c821fa8ecc": {"__data__": {"id_": "40033c0b-6fcd-4964-bcfd-64c821fa8ecc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "21636006-e549-4864-b848-48e5eca78c26", "node_type": "4", "metadata": {}, "hash": "ee754dca257ed5db47f8c1ade4ede9481ae150bc30a11adc804e0cee4b461672", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "485ca146-26c1-4f67-8a9d-1e0de3d1b73c", "node_type": "1", "metadata": {}, "hash": "5472eee94a0bad8d4b46dd04e5567457f777dbd200b42e422106295d6d9fec23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4c35d65-73ac-4e4b-8e33-a8dd4f84c573", "node_type": "1", "metadata": {}, "hash": "530fc9fcfb5074369fed06cbd53560791eeb5e1f7668965c526719428fc648da", "class_name": "RelatedNodeInfo"}}, "text": "The title refers to silicon and is another source of stories illustrating the", "start_char_idx": 0, "end_char_idx": 77, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4c35d65-73ac-4e4b-8e33-a8dd4f84c573": {"__data__": {"id_": "f4c35d65-73ac-4e4b-8e33-a8dd4f84c573", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "64fa4c87-a8e7-45cb-91fb-acc56a95da12", "node_type": "4", "metadata": {}, "hash": "530fc9fcfb5074369fed06cbd53560791eeb5e1f7668965c526719428fc648da", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40033c0b-6fcd-4964-bcfd-64c821fa8ecc", "node_type": "1", "metadata": {}, "hash": "ee754dca257ed5db47f8c1ade4ede9481ae150bc30a11adc804e0cee4b461672", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d04e0866-60ee-43d1-a525-9ad00741f3a4", "node_type": "1", "metadata": {}, "hash": "4d6dd4b048b15ecf5f852956664d3d60a432c55d5b036f7d83cab3701cf81c57", "class_name": "RelatedNodeInfo"}}, "text": "Kahan, W. [1990]. \u201cOn the advantage of the 8087\u2019s stack,\u201d", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d04e0866-60ee-43d1-a525-9ad00741f3a4": {"__data__": {"id_": "d04e0866-60ee-43d1-a525-9ad00741f3a4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bc7e29cf-4e68-4eab-9037-fa3eba5bf308", "node_type": "4", "metadata": {}, "hash": "4d6dd4b048b15ecf5f852956664d3d60a432c55d5b036f7d83cab3701cf81c57", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4c35d65-73ac-4e4b-8e33-a8dd4f84c573", "node_type": "1", "metadata": {}, "hash": "530fc9fcfb5074369fed06cbd53560791eeb5e1f7668965c526719428fc648da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2", "node_type": "1", "metadata": {}, "hash": "c65fa5d1a55bbea048f3709c80a6d182a0b02b04f0ef6c8c60df0ccd2688d885", "class_name": "RelatedNodeInfo"}}, "text": "What the 8087 \ufb02oating-point architecture could have been. Kahan, W. [1997]. Available via a link to Kahan\u2019s homepage at", "start_char_idx": 0, "end_char_idx": 119, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2": {"__data__": {"id_": "a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9db741ab-7977-4105-99ae-a9b40331f13f", "node_type": "4", "metadata": {}, "hash": "c65fa5d1a55bbea048f3709c80a6d182a0b02b04f0ef6c8c60df0ccd2688d885", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d04e0866-60ee-43d1-a525-9ad00741f3a4", "node_type": "1", "metadata": {}, "hash": "4d6dd4b048b15ecf5f852956664d3d60a432c55d5b036f7d83cab3701cf81c57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fa75de11-855a-40b7-80ac-84f99487b318", "node_type": "1", "metadata": {}, "hash": "d229b8c454c3e3254747cc9bff1a02f81edac1e0453c218e3a84a74a956e092b", "class_name": "RelatedNodeInfo"}}, "text": "A collection of memos related to \ufb02oating point, including \u201cBeastly", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa75de11-855a-40b7-80ac-84f99487b318": {"__data__": {"id_": "fa75de11-855a-40b7-80ac-84f99487b318", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cc678df0-39cd-4d24-bd11-eebcfc6d93ee", "node_type": "4", "metadata": {}, "hash": "d229b8c454c3e3254747cc9bff1a02f81edac1e0453c218e3a84a74a956e092b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2", "node_type": "1", "metadata": {}, "hash": "c65fa5d1a55bbea048f3709c80a6d182a0b02b04f0ef6c8c60df0ccd2688d885", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "484e2100-c59f-49ef-ba33-58890b5fca81", "node_type": "1", "metadata": {}, "hash": "37bd11caada0b7648222b6849759e2ae2bfeb1d48bcb75443d362aecc3c8bdce", "class_name": "RelatedNodeInfo"}}, "text": "numbers\u201d (another less famous Pentium bug), \u201cNotes on the IEEE \ufb02oating point arithmetic\u201d (including comments on how some features are atrophying), and \u201cThe baleful e\ufb00ects of computing benchmarks\u201d (on the unhealthy preoccupation on speed versus correctness, accuracy, ease of use, \ufb02exibility, \u2026).", "start_char_idx": 0, "end_char_idx": 295, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "484e2100-c59f-49ef-ba33-58890b5fca81": {"__data__": {"id_": "484e2100-c59f-49ef-ba33-58890b5fca81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9cc6ba0a-7485-45bf-b6d3-11755deb0074", "node_type": "4", "metadata": {}, "hash": "37bd11caada0b7648222b6849759e2ae2bfeb1d48bcb75443d362aecc3c8bdce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fa75de11-855a-40b7-80ac-84f99487b318", "node_type": "1", "metadata": {}, "hash": "d229b8c454c3e3254747cc9bff1a02f81edac1e0453c218e3a84a74a956e092b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54e89220-c675-4251-94c5-839e9d1aa936", "node_type": "1", "metadata": {}, "hash": "c712fc66aaeffc536e3c38a9eeb5113cc656d5035341a98458e99167de82e574", "class_name": "RelatedNodeInfo"}}, "text": "A textbook aimed at seniors and \ufb01rst-year graduate students that explains fundamental principles of basic arithmetic, as well as complex", "start_char_idx": 0, "end_char_idx": 136, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54e89220-c675-4251-94c5-839e9d1aa936": {"__data__": {"id_": "54e89220-c675-4251-94c5-839e9d1aa936", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "28752d88-f1ee-4769-9d2c-04f6c071531e", "node_type": "4", "metadata": {}, "hash": "c712fc66aaeffc536e3c38a9eeb5113cc656d5035341a98458e99167de82e574", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "484e2100-c59f-49ef-ba33-58890b5fca81", "node_type": "1", "metadata": {}, "hash": "37bd11caada0b7648222b6849759e2ae2bfeb1d48bcb75443d362aecc3c8bdce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba95def9-9c31-47a5-b33d-2443c3b8beb6", "node_type": "1", "metadata": {}, "hash": "95268c55170630fab9e826a6595a55e21825e456662e2034f0a3b9e755ab5aba", "class_name": "RelatedNodeInfo"}}, "text": "Wilkes, M. V. [1985]. Memoirs of a Computer Pioneer, MIT Press,", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba95def9-9c31-47a5-b33d-2443c3b8beb6": {"__data__": {"id_": "ba95def9-9c31-47a5-b33d-2443c3b8beb6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "178ac2db-5328-4c07-9117-e680618c90b6", "node_type": "4", "metadata": {}, "hash": "95268c55170630fab9e826a6595a55e21825e456662e2034f0a3b9e755ab5aba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54e89220-c675-4251-94c5-839e9d1aa936", "node_type": "1", "metadata": {}, "hash": "c712fc66aaeffc536e3c38a9eeb5113cc656d5035341a98458e99167de82e574", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c09c410-472d-4c55-9ce4-801ea41f8061", "node_type": "1", "metadata": {}, "hash": "f77bfd0010555d07609e2a2436c41def4259e58eb6087292093cc2717ac9f3e5", "class_name": "RelatedNodeInfo"}}, "text": "This computer pioneer\u2019s recollections include the derivation of the standard hardware for multiply and divide developed by von Neumann.", "start_char_idx": 0, "end_char_idx": 135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c09c410-472d-4c55-9ce4-801ea41f8061": {"__data__": {"id_": "9c09c410-472d-4c55-9ce4-801ea41f8061", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "09e6d16b-5619-4673-8491-03aad3c0345c", "node_type": "4", "metadata": {}, "hash": "f77bfd0010555d07609e2a2436c41def4259e58eb6087292093cc2717ac9f3e5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba95def9-9c31-47a5-b33d-2443c3b8beb6", "node_type": "1", "metadata": {}, "hash": "95268c55170630fab9e826a6595a55e21825e456662e2034f0a3b9e755ab5aba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "916a877f-6df9-4a67-84bd-5cbe8dc1e86a", "node_type": "1", "metadata": {}, "hash": "a5ca9603d12f8a0e1a307855c046e999da1ad82a7bf35b7c8527765e11749b1f", "class_name": "RelatedNodeInfo"}}, "text": "3.12 Self-Study Data can be anything. In the Self-Study section at the end of Chapter 2, we saw the binary bit pa\u0000ern 00000001010010110100100000100000two in hexadecimal, decimal, and as a MIPS assembly language instruction. What IEEE 754 Floating Point number does it represent?", "start_char_idx": 0, "end_char_idx": 278, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "916a877f-6df9-4a67-84bd-5cbe8dc1e86a": {"__data__": {"id_": "916a877f-6df9-4a67-84bd-5cbe8dc1e86a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d205ef17-5fd6-4fd5-8758-690657d7a26c", "node_type": "4", "metadata": {}, "hash": "a5ca9603d12f8a0e1a307855c046e999da1ad82a7bf35b7c8527765e11749b1f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c09c410-472d-4c55-9ce4-801ea41f8061", "node_type": "1", "metadata": {}, "hash": "f77bfd0010555d07609e2a2436c41def4259e58eb6087292093cc2717ac9f3e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d62aa50f-e95f-48c9-afbc-7ad7aa19f50e", "node_type": "1", "metadata": {}, "hash": "8f34866e3d99363fb29af6fa02585743a08c781aa9296e1963bc5484932bbe39", "class_name": "RelatedNodeInfo"}}, "text": "Big numbers. What is the largest, positive two\u2019s complement 32- bit integer? Can you represent it exactly in IEEE 754 single precision \ufb02oating point? If not, how close can you get? What about IEEE 754 half-precision \ufb02oating point?", "start_char_idx": 0, "end_char_idx": 230, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d62aa50f-e95f-48c9-afbc-7ad7aa19f50e": {"__data__": {"id_": "d62aa50f-e95f-48c9-afbc-7ad7aa19f50e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd5b59a8-fb93-46fb-a9d6-6fd65449fd3e", "node_type": "4", "metadata": {}, "hash": "8f34866e3d99363fb29af6fa02585743a08c781aa9296e1963bc5484932bbe39", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "916a877f-6df9-4a67-84bd-5cbe8dc1e86a", "node_type": "1", "metadata": {}, "hash": "a5ca9603d12f8a0e1a307855c046e999da1ad82a7bf35b7c8527765e11749b1f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d26c6eaf-3dff-4614-bc2e-a2a3765de72d", "node_type": "1", "metadata": {}, "hash": "c8620ad018c873211cce943907394060574a1062181b3780932240d9e2518b43", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Arithmetic. Machine learning is starting to work so well that it is revolutionizing many industries (see Section 6.7 of Chapter 6). It uses \ufb02oating point numbers to learn, but unlike scienti\ufb01c programming, it does not need lots of precision. Double precision \ufb02oating point, the standard-bearer of scienti\ufb01c programming, is overkill, as 32 bits is su\ufb03cient. Ideally it could use half-precision (16 bits), since that is much more e\ufb03cient in computation and memory. However, machine learning training often deals with very small numbers, so the range is important.", "start_char_idx": 0, "end_char_idx": 568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d26c6eaf-3dff-4614-bc2e-a2a3765de72d": {"__data__": {"id_": "d26c6eaf-3dff-4614-bc2e-a2a3765de72d", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6aa859cb-7b47-4e93-9aff-93f2ccb4a438", "node_type": "4", "metadata": {}, "hash": "c8620ad018c873211cce943907394060574a1062181b3780932240d9e2518b43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d62aa50f-e95f-48c9-afbc-7ad7aa19f50e", "node_type": "1", "metadata": {}, "hash": "8f34866e3d99363fb29af6fa02585743a08c781aa9296e1963bc5484932bbe39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eff23564-14c2-439b-a82b-eb2e18ef96bf", "node_type": "1", "metadata": {}, "hash": "f59671ccbf46e2eda9efa59941016369e387c4e5700659725b7d852817097198", "class_name": "RelatedNodeInfo"}}, "text": "These observations about the needs of machine learning led to a new format that is not part of the IEEE standard called Brain Float 16 (named after Google\u2019s Brain division, which invented the format). Figure 3.27 shows the three formats.", "start_char_idx": 0, "end_char_idx": 237, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eff23564-14c2-439b-a82b-eb2e18ef96bf": {"__data__": {"id_": "eff23564-14c2-439b-a82b-eb2e18ef96bf", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1d91fd71-871f-439e-aae3-668865c2877c", "node_type": "4", "metadata": {}, "hash": "f59671ccbf46e2eda9efa59941016369e387c4e5700659725b7d852817097198", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d26c6eaf-3dff-4614-bc2e-a2a3765de72d", "node_type": "1", "metadata": {}, "hash": "c8620ad018c873211cce943907394060574a1062181b3780932240d9e2518b43", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a01af1d1-a6b7-4603-a229-58e72efcfe59", "node_type": "1", "metadata": {}, "hash": "0ee9b49bbadc8c2c2fdbd6d58e6cc4f9a924fac75a90cc07843e94ea08417a5a", "class_name": "RelatedNodeInfo"}}, "text": "FIGURE 3.27 Floating-point format for IEEE 754 single precision (fp32), IEEE 754 half-precision (fp16), and Brain Float 16. Google\u2019s TPUv3 hardware uses Brain Float 16 (see Section 6.11).", "start_char_idx": 0, "end_char_idx": 187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a01af1d1-a6b7-4603-a229-58e72efcfe59": {"__data__": {"id_": "a01af1d1-a6b7-4603-a229-58e72efcfe59", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3c21b796-a00a-4b86-9761-e00b5f48510b", "node_type": "4", "metadata": {}, "hash": "0ee9b49bbadc8c2c2fdbd6d58e6cc4f9a924fac75a90cc07843e94ea08417a5a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eff23564-14c2-439b-a82b-eb2e18ef96bf", "node_type": "1", "metadata": {}, "hash": "f59671ccbf46e2eda9efa59941016369e387c4e5700659725b7d852817097198", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee", "node_type": "1", "metadata": {}, "hash": "b9d5dfafbc026e83ffbcc652713ff64d173b49feb19bef520cc137f3a8d57b26", "class_name": "RelatedNodeInfo"}}, "text": "Assume Brain Float 16 follows the same conventions as IEEE 754,", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee": {"__data__": {"id_": "5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "106efec1-3ef2-4b76-839a-ebf826fe5c4a", "node_type": "4", "metadata": {}, "hash": "b9d5dfafbc026e83ffbcc652713ff64d173b49feb19bef520cc137f3a8d57b26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a01af1d1-a6b7-4603-a229-58e72efcfe59", "node_type": "1", "metadata": {}, "hash": "0ee9b49bbadc8c2c2fdbd6d58e6cc4f9a924fac75a90cc07843e94ea08417a5a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225", "node_type": "1", "metadata": {}, "hash": "c086997092ddc448ad2d607baa73b0a673675a4059c4571456fed12ea30a6d0f", "class_name": "RelatedNodeInfo"}}, "text": "just with di\ufb00erent sizes of \ufb01elds. What is the smallest nonzero, positive number that you can represent in the three formats? How much smaller is that number for Brain Float 16 than for IEEE fp32? Than fp16?", "start_char_idx": 0, "end_char_idx": 207, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225": {"__data__": {"id_": "7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "175a6ecb-6ad6-4209-a404-5f54bfe21c40", "node_type": "4", "metadata": {}, "hash": "c086997092ddc448ad2d607baa73b0a673675a4059c4571456fed12ea30a6d0f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee", "node_type": "1", "metadata": {}, "hash": "b9d5dfafbc026e83ffbcc652713ff64d173b49feb19bef520cc137f3a8d57b26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d4f0a0c1-6af9-4371-8f1c-6df39949b2ca", "node_type": "1", "metadata": {}, "hash": "1010d1ef27c460939aafad742a9672c33834be23cc55af0c79118d13c03eb1a4", "class_name": "RelatedNodeInfo"}}, "text": "(If you know about subnormals or denorms, ignore them for this", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4f0a0c1-6af9-4371-8f1c-6df39949b2ca": {"__data__": {"id_": "d4f0a0c1-6af9-4371-8f1c-6df39949b2ca", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "be5ee50d-3c6f-486d-9afd-f7a9c55c3bd7", "node_type": "4", "metadata": {}, "hash": "1010d1ef27c460939aafad742a9672c33834be23cc55af0c79118d13c03eb1a4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225", "node_type": "1", "metadata": {}, "hash": "c086997092ddc448ad2d607baa73b0a673675a4059c4571456fed12ea30a6d0f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "668cc000-2d3a-4b9c-9139-61c68aa9558e", "node_type": "1", "metadata": {}, "hash": "d82990648618d85712161bee886f0d5c9d7b06926667d3978badadf429881b6d", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Area and Energy. A common operation in machine", "start_char_idx": 0, "end_char_idx": 53, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "668cc000-2d3a-4b9c-9139-61c68aa9558e": {"__data__": {"id_": "668cc000-2d3a-4b9c-9139-61c68aa9558e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "589902ed-96c9-4256-bdb9-bbc7aabe4501", "node_type": "4", "metadata": {}, "hash": "d82990648618d85712161bee886f0d5c9d7b06926667d3978badadf429881b6d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d4f0a0c1-6af9-4371-8f1c-6df39949b2ca", "node_type": "1", "metadata": {}, "hash": "1010d1ef27c460939aafad742a9672c33834be23cc55af0c79118d13c03eb1a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6c32c1d-a887-4823-91e2-2dc1ea1ed176", "node_type": "1", "metadata": {}, "hash": "86890a80754b48dfe5c39960d4d69eb23e441b1cc5afb738267ddc35a920c49f", "class_name": "RelatedNodeInfo"}}, "text": "learning is to multiply and accumulate like we see in DGEMM, with the multiply occupying most of the silicon area and using most of the energy. If we have fast multipliers like in Figure 3.7, they are primarily a function of the square of size of the inputs. What are the correct ratios of area/energy of the three formats for multiplies?", "start_char_idx": 0, "end_char_idx": 338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a6c32c1d-a887-4823-91e2-2dc1ea1ed176": {"__data__": {"id_": "a6c32c1d-a887-4823-91e2-2dc1ea1ed176", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9aa9a71f-a366-4736-b5bf-b505516c26cb", "node_type": "4", "metadata": {}, "hash": "86890a80754b48dfe5c39960d4d69eb23e441b1cc5afb738267ddc35a920c49f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "668cc000-2d3a-4b9c-9139-61c68aa9558e", "node_type": "1", "metadata": {}, "hash": "d82990648618d85712161bee886f0d5c9d7b06926667d3978badadf429881b6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a", "node_type": "1", "metadata": {}, "hash": "e8e1ab4000e88472992d63da5bc79e5222ec379eefaf58de840c84a764cf18ba", "class_name": "RelatedNodeInfo"}}, "text": "2. 82 versus 52 versus 82 3. 232 versus 102 versus 72 4. 242 versus 112 versus 82", "start_char_idx": 0, "end_char_idx": 81, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a": {"__data__": {"id_": "65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8f6507b3-d760-4773-9eb0-e332421d168f", "node_type": "4", "metadata": {}, "hash": "e8e1ab4000e88472992d63da5bc79e5222ec379eefaf58de840c84a764cf18ba", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6c32c1d-a887-4823-91e2-2dc1ea1ed176", "node_type": "1", "metadata": {}, "hash": "86890a80754b48dfe5c39960d4d69eb23e441b1cc5afb738267ddc35a920c49f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "839ec461-96d2-4c2f-808b-652bed91fdd4", "node_type": "1", "metadata": {}, "hash": "8c6a8e8032b9de047c63f84060a04c73a1b030f6d712e767939b48ae26a8abcb", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Programming. Can you think of software bene\ufb01ts of IEEE", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "839ec461-96d2-4c2f-808b-652bed91fdd4": {"__data__": {"id_": "839ec461-96d2-4c2f-808b-652bed91fdd4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "daabe32d-5584-4aed-b965-d9965b947fb2", "node_type": "4", "metadata": {}, "hash": "8c6a8e8032b9de047c63f84060a04c73a1b030f6d712e767939b48ae26a8abcb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a", "node_type": "1", "metadata": {}, "hash": "e8e1ab4000e88472992d63da5bc79e5222ec379eefaf58de840c84a764cf18ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1d3b9109-cc9b-4291-b206-6f83e1469445", "node_type": "1", "metadata": {}, "hash": "0a5b0375425f4bb17622d56442eae5a1f3add2200eec6578e5a71a42a99cac44", "class_name": "RelatedNodeInfo"}}, "text": "fp32 and Brain Float 16 having the same-sized exponents?", "start_char_idx": 0, "end_char_idx": 56, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1d3b9109-cc9b-4291-b206-6f83e1469445": {"__data__": {"id_": "1d3b9109-cc9b-4291-b206-6f83e1469445", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "97669618-e781-4a79-90d2-450dbcf54ed9", "node_type": "4", "metadata": {}, "hash": "0a5b0375425f4bb17622d56442eae5a1f3add2200eec6578e5a71a42a99cac44", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "839ec461-96d2-4c2f-808b-652bed91fdd4", "node_type": "1", "metadata": {}, "hash": "8c6a8e8032b9de047c63f84060a04c73a1b030f6d712e767939b48ae26a8abcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e557fc97-6fa9-4c17-a1bb-c7b479507ef5", "node_type": "1", "metadata": {}, "hash": "edd96a276d46a83d49b9f7e7f87026616eeee48cf41d3c5bafdabd616bbfea8c", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Choices. For the domain for machine learning, which of the following are true about Brain Float 16 arithmetic versus IEEE 754 half-precision \ufb02oating point?", "start_char_idx": 0, "end_char_idx": 162, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e557fc97-6fa9-4c17-a1bb-c7b479507ef5": {"__data__": {"id_": "e557fc97-6fa9-4c17-a1bb-c7b479507ef5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d7cd43c4-6d9a-40a9-9d4c-727d70ab501d", "node_type": "4", "metadata": {}, "hash": "edd96a276d46a83d49b9f7e7f87026616eeee48cf41d3c5bafdabd616bbfea8c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1d3b9109-cc9b-4291-b206-6f83e1469445", "node_type": "1", "metadata": {}, "hash": "0a5b0375425f4bb17622d56442eae5a1f3add2200eec6578e5a71a42a99cac44", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51de55fe-fd42-4c76-ada7-a3559b5e8b81", "node_type": "1", "metadata": {}, "hash": "fde7972c9d1808defecc6eeb8107ffb98f209017d02f4c737947858595fae4ee", "class_name": "RelatedNodeInfo"}}, "text": "1. Brain Float 16 multipliers take much less hardware than IEEE", "start_char_idx": 0, "end_char_idx": 63, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51de55fe-fd42-4c76-ada7-a3559b5e8b81": {"__data__": {"id_": "51de55fe-fd42-4c76-ada7-a3559b5e8b81", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d0c8c2a-b229-4f7a-8557-7fa286c9d10a", "node_type": "4", "metadata": {}, "hash": "fde7972c9d1808defecc6eeb8107ffb98f209017d02f4c737947858595fae4ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e557fc97-6fa9-4c17-a1bb-c7b479507ef5", "node_type": "1", "metadata": {}, "hash": "edd96a276d46a83d49b9f7e7f87026616eeee48cf41d3c5bafdabd616bbfea8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73441bc7-37a3-4a67-a354-03b023d9ea7b", "node_type": "1", "metadata": {}, "hash": "8d565bfca3ee41b67c2c245350549f652d03e9ba8dbbf735bd6a4715245603ee", "class_name": "RelatedNodeInfo"}}, "text": "2. Brain Float 16 multiplies take much less energy than IEEE 754", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73441bc7-37a3-4a67-a354-03b023d9ea7b": {"__data__": {"id_": "73441bc7-37a3-4a67-a354-03b023d9ea7b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a53f394-d6a2-4d6d-9f31-a27ed0a87769", "node_type": "4", "metadata": {}, "hash": "8d565bfca3ee41b67c2c245350549f652d03e9ba8dbbf735bd6a4715245603ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51de55fe-fd42-4c76-ada7-a3559b5e8b81", "node_type": "1", "metadata": {}, "hash": "fde7972c9d1808defecc6eeb8107ffb98f209017d02f4c737947858595fae4ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f9abfcc-af30-4ba5-9227-9250eede43a6", "node_type": "1", "metadata": {}, "hash": "464eb9169e925f7d3531e65ed110e2be822dedb112fe2bfc1d3f10b6a16608c5", "class_name": "RelatedNodeInfo"}}, "text": "3. Brain Float 16 is easier for software than IEEE 754 half-", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f9abfcc-af30-4ba5-9227-9250eede43a6": {"__data__": {"id_": "4f9abfcc-af30-4ba5-9227-9250eede43a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6c305455-6e96-4ecc-89dd-1df7efe41b81", "node_type": "4", "metadata": {}, "hash": "464eb9169e925f7d3531e65ed110e2be822dedb112fe2bfc1d3f10b6a16608c5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73441bc7-37a3-4a67-a354-03b023d9ea7b", "node_type": "1", "metadata": {}, "hash": "8d565bfca3ee41b67c2c245350549f652d03e9ba8dbbf735bd6a4715245603ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ab4505b-c335-4a09-8282-e844350b663a", "node_type": "1", "metadata": {}, "hash": "d8ce13c477e112838dff6983f817f232efb027ec992c1f3d9642c635196c9593", "class_name": "RelatedNodeInfo"}}, "text": "precision when converting from IEEE 754 full-precision software. 4. All of the above.", "start_char_idx": 0, "end_char_idx": 85, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ab4505b-c335-4a09-8282-e844350b663a": {"__data__": {"id_": "2ab4505b-c335-4a09-8282-e844350b663a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "20b58948-1447-4af7-a9b4-ef6d96f7d96f", "node_type": "4", "metadata": {}, "hash": "d8ce13c477e112838dff6983f817f232efb027ec992c1f3d9642c635196c9593", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f9abfcc-af30-4ba5-9227-9250eede43a6", "node_type": "1", "metadata": {}, "hash": "464eb9169e925f7d3531e65ed110e2be822dedb112fe2bfc1d3f10b6a16608c5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468", "node_type": "1", "metadata": {}, "hash": "6dabaf8d3e37a5e61958569185f75c9458e55901ece587163aa52f900c2468f5", "class_name": "RelatedNodeInfo"}}, "text": "Self Study Answers Data can be anything. Mapping the binary number into the IEEE 754 \ufb02oating-point format:", "start_char_idx": 0, "end_char_idx": 106, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468": {"__data__": {"id_": "4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "686eba91-277a-4d2f-9260-ed8f086c0c4d", "node_type": "4", "metadata": {}, "hash": "6dabaf8d3e37a5e61958569185f75c9458e55901ece587163aa52f900c2468f5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ab4505b-c335-4a09-8282-e844350b663a", "node_type": "1", "metadata": {}, "hash": "d8ce13c477e112838dff6983f817f232efb027ec992c1f3d9642c635196c9593", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ab87346-3f17-49a9-b371-9d00fdd93449", "node_type": "1", "metadata": {}, "hash": "54d2b815811356e80eeff1668f40f6571998aff5f9a5da985bc6b27540edc694", "class_name": "RelatedNodeInfo"}}, "text": "Since the exponent bias for single precision \ufb02oating point is 127, the exponent is actually 2 \u2212 127 or \u2212125. The fraction can be thought of as 4,933,664 ten/(223 \u2212 1) = 4,933,664ten/8,388,607ten = 0.58813865043ten. The actual signi\ufb01cand adds the implicit 1, so the real number the binary pa\u0000ern represents is 1.58813865043ten \u00d7 2\u2212125 or about 3.7336959ten \u00d7 10\u221238.", "start_char_idx": 0, "end_char_idx": 364, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ab87346-3f17-49a9-b371-9d00fdd93449": {"__data__": {"id_": "5ab87346-3f17-49a9-b371-9d00fdd93449", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e156d715-8cce-4505-96be-1397e91a4a05", "node_type": "4", "metadata": {}, "hash": "54d2b815811356e80eeff1668f40f6571998aff5f9a5da985bc6b27540edc694", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468", "node_type": "1", "metadata": {}, "hash": "6dabaf8d3e37a5e61958569185f75c9458e55901ece587163aa52f900c2468f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae2282e1-fecd-4af3-9338-8aefb22552b9", "node_type": "1", "metadata": {}, "hash": "70d584669210f8dfd67b0f6bfb52a46027ad3c067df41ac7931934ecf8b802ee", "class_name": "RelatedNodeInfo"}}, "text": "Once again, this exercise demonstrates that there is no inherent", "start_char_idx": 0, "end_char_idx": 64, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ae2282e1-fecd-4af3-9338-8aefb22552b9": {"__data__": {"id_": "ae2282e1-fecd-4af3-9338-8aefb22552b9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1558aa88-0e5d-4495-b32a-a1444e6a906a", "node_type": "4", "metadata": {}, "hash": "70d584669210f8dfd67b0f6bfb52a46027ad3c067df41ac7931934ecf8b802ee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ab87346-3f17-49a9-b371-9d00fdd93449", "node_type": "1", "metadata": {}, "hash": "54d2b815811356e80eeff1668f40f6571998aff5f9a5da985bc6b27540edc694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c37aa7c1-fb3d-4346-9447-4e7a390f9f44", "node_type": "1", "metadata": {}, "hash": "cc49c63f1575f79dc8cb767db0e88015bd518f23892702a72c4b282bb804c8e3", "class_name": "RelatedNodeInfo"}}, "text": "meaning in a bit pa\u0000ern; it depends solely on how software interprets it.", "start_char_idx": 0, "end_char_idx": 73, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c37aa7c1-fb3d-4346-9447-4e7a390f9f44": {"__data__": {"id_": "c37aa7c1-fb3d-4346-9447-4e7a390f9f44", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2e8969bc-2d98-4802-a852-1085671cd73a", "node_type": "4", "metadata": {}, "hash": "cc49c63f1575f79dc8cb767db0e88015bd518f23892702a72c4b282bb804c8e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae2282e1-fecd-4af3-9338-8aefb22552b9", "node_type": "1", "metadata": {}, "hash": "70d584669210f8dfd67b0f6bfb52a46027ad3c067df41ac7931934ecf8b802ee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df8fa25a-e356-4aef-a694-fd28da7c4f40", "node_type": "1", "metadata": {}, "hash": "95a7c9616da2ced62f61ce098cd6ca7bd899507d6de538b2d6b6e41afbea0d0a", "class_name": "RelatedNodeInfo"}}, "text": "You cannot represent it exactly in IEEE 754 single precision", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df8fa25a-e356-4aef-a694-fd28da7c4f40": {"__data__": {"id_": "df8fa25a-e356-4aef-a694-fd28da7c4f40", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1b235e4f-4183-46b6-a70a-6b45762de10c", "node_type": "4", "metadata": {}, "hash": "95a7c9616da2ced62f61ce098cd6ca7bd899507d6de538b2d6b6e41afbea0d0a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c37aa7c1-fb3d-4346-9447-4e7a390f9f44", "node_type": "1", "metadata": {}, "hash": "cc49c63f1575f79dc8cb767db0e88015bd518f23892702a72c4b282bb804c8e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6105b9d1-3ede-49ed-a13e-0572ae58dfa7", "node_type": "1", "metadata": {}, "hash": "dad159e0453771c04bbbde9db1673483f24cb5f7c218bcf6c60db576ec9a5c14", "class_name": "RelatedNodeInfo"}}, "text": "\ufb02oating point.", "start_char_idx": 0, "end_char_idx": 14, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6105b9d1-3ede-49ed-a13e-0572ae58dfa7": {"__data__": {"id_": "6105b9d1-3ede-49ed-a13e-0572ae58dfa7", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b7ccbfe5-1077-46fd-bd7a-97c75464c57d", "node_type": "4", "metadata": {}, "hash": "dad159e0453771c04bbbde9db1673483f24cb5f7c218bcf6c60db576ec9a5c14", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "df8fa25a-e356-4aef-a694-fd28da7c4f40", "node_type": "1", "metadata": {}, "hash": "95a7c9616da2ced62f61ce098cd6ca7bd899507d6de538b2d6b6e41afbea0d0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7741b1e7-7351-46a0-a232-f7fdd1be55f8", "node_type": "1", "metadata": {}, "hash": "57eb5c5fa663a648209a0fdd2a5928b33f1fb009f79383d9443b5e9a48f08b88", "class_name": "RelatedNodeInfo"}}, "text": "The largest number you can represent in IEEE 754 half precision is", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7741b1e7-7351-46a0-a232-f7fdd1be55f8": {"__data__": {"id_": "7741b1e7-7351-46a0-a232-f7fdd1be55f8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c8a8c8c0-0e5b-49f3-ac78-7518e2f857ff", "node_type": "4", "metadata": {}, "hash": "57eb5c5fa663a648209a0fdd2a5928b33f1fb009f79383d9443b5e9a48f08b88", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6105b9d1-3ede-49ed-a13e-0572ae58dfa7", "node_type": "1", "metadata": {}, "hash": "dad159e0453771c04bbbde9db1673483f24cb5f7c218bcf6c60db576ec9a5c14", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c76028cd-c520-4946-9e32-224cc07270bc", "node_type": "1", "metadata": {}, "hash": "da209d9b2e524e78b3f665446ab5bab06e4347e5e5d12836684bbbb16a402d1e", "class_name": "RelatedNodeInfo"}}, "text": "Converting integers to IEEE half-precision \ufb02oat can cause", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c76028cd-c520-4946-9e32-224cc07270bc": {"__data__": {"id_": "c76028cd-c520-4946-9e32-224cc07270bc", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3df377e4-2b7b-499c-8836-6aa90bad93c7", "node_type": "4", "metadata": {}, "hash": "da209d9b2e524e78b3f665446ab5bab06e4347e5e5d12836684bbbb16a402d1e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7741b1e7-7351-46a0-a232-f7fdd1be55f8", "node_type": "1", "metadata": {}, "hash": "57eb5c5fa663a648209a0fdd2a5928b33f1fb009f79383d9443b5e9a48f08b88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebc91681-6964-4d89-a75d-7e3dd21ebc5b", "node_type": "1", "metadata": {}, "hash": "fbb84ea5c23271e4f2dd020ad50b5faf98dac7c0af402ccd7366b11845a875c7", "class_name": "RelatedNodeInfo"}}, "text": "over\ufb02ow. (The 5-bit exponent 11111two is reserved for in\ufb01nites and NaNs in half-precision, like the exponent 11111111two is reserved for single precision.)", "start_char_idx": 0, "end_char_idx": 155, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebc91681-6964-4d89-a75d-7e3dd21ebc5b": {"__data__": {"id_": "ebc91681-6964-4d89-a75d-7e3dd21ebc5b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d2c01d03-f7e2-439d-aea0-e477c8f3d24a", "node_type": "4", "metadata": {}, "hash": "fbb84ea5c23271e4f2dd020ad50b5faf98dac7c0af402ccd7366b11845a875c7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c76028cd-c520-4946-9e32-224cc07270bc", "node_type": "1", "metadata": {}, "hash": "da209d9b2e524e78b3f665446ab5bab06e4347e5e5d12836684bbbb16a402d1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4435053a-8fa8-4aca-b237-b0772d86e5c2", "node_type": "1", "metadata": {}, "hash": "4b107e6b3293c6a0a6baddca714d9cf4cf68e4888fd4171e44d88e3ac067b12d", "class_name": "RelatedNodeInfo"}}, "text": "Since IEEE fp32 and Brain Float 16 have the same-sized exponents,", "start_char_idx": 0, "end_char_idx": 65, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4435053a-8fa8-4aca-b237-b0772d86e5c2": {"__data__": {"id_": "4435053a-8fa8-4aca-b237-b0772d86e5c2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a86087f2-7daf-4bd7-9031-3190974a8413", "node_type": "4", "metadata": {}, "hash": "4b107e6b3293c6a0a6baddca714d9cf4cf68e4888fd4171e44d88e3ac067b12d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebc91681-6964-4d89-a75d-7e3dd21ebc5b", "node_type": "1", "metadata": {}, "hash": "fbb84ea5c23271e4f2dd020ad50b5faf98dac7c0af402ccd7366b11845a875c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1b6a9a1f-b01c-40fb-9c4b-63ff0717029f", "node_type": "1", "metadata": {}, "hash": "8420f7069d5e8bc1cde417d0b05139e387ba43744d9d86e00b277ce18ccd4bac", "class_name": "RelatedNodeInfo"}}, "text": "they can represent the same smallest nonzero positive number. The smallest number they can represent is 2112 times smaller than that of IEEE fp16, or about 5 \u00d7 1033.", "start_char_idx": 0, "end_char_idx": 165, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b6a9a1f-b01c-40fb-9c4b-63ff0717029f": {"__data__": {"id_": "1b6a9a1f-b01c-40fb-9c4b-63ff0717029f", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d0078963-5e23-4c0b-8577-3b944b26768e", "node_type": "4", "metadata": {}, "hash": "8420f7069d5e8bc1cde417d0b05139e387ba43744d9d86e00b277ce18ccd4bac", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4435053a-8fa8-4aca-b237-b0772d86e5c2", "node_type": "1", "metadata": {}, "hash": "4b107e6b3293c6a0a6baddca714d9cf4cf68e4888fd4171e44d88e3ac067b12d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93f9f162-30cd-4899-af89-5eb3add91ee1", "node_type": "1", "metadata": {}, "hash": "1ef3a678187dbee9453709866b0360b54cdba483f5d0cc980fbe17073d4aaf0c", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Area and Energy. The exponent and sign \ufb01elds are not", "start_char_idx": 0, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93f9f162-30cd-4899-af89-5eb3add91ee1": {"__data__": {"id_": "93f9f162-30cd-4899-af89-5eb3add91ee1", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8140f84c-a6d0-485d-9794-22d42ef940c2", "node_type": "4", "metadata": {}, "hash": "1ef3a678187dbee9453709866b0360b54cdba483f5d0cc980fbe17073d4aaf0c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1b6a9a1f-b01c-40fb-9c4b-63ff0717029f", "node_type": "1", "metadata": {}, "hash": "8420f7069d5e8bc1cde417d0b05139e387ba43744d9d86e00b277ce18ccd4bac", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3253646d-b4b2-4888-b337-df2b3ab08c5c", "node_type": "1", "metadata": {}, "hash": "7770ba248b92c32fc798c13c8da9390716d1a0c6de478a281339498a582c702c", "class_name": "RelatedNodeInfo"}}, "text": "involved in the multiplications, so the answer is a function of the size of signi\ufb01cands. As there is an implicit 1 followed by the fraction in these formats, the correct answer is number 4: 242 versus 112 versus 82. That makes IEEE fp16 multiplier about twice (121/64) the size or energy of Brain Float 16 and IEEE fp32 about nine (576/64) times larger.", "start_char_idx": 0, "end_char_idx": 353, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3253646d-b4b2-4888-b337-df2b3ab08c5c": {"__data__": {"id_": "3253646d-b4b2-4888-b337-df2b3ab08c5c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "93124def-e3ef-47d3-a2fa-bd297bed6598", "node_type": "4", "metadata": {}, "hash": "7770ba248b92c32fc798c13c8da9390716d1a0c6de478a281339498a582c702c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93f9f162-30cd-4899-af89-5eb3add91ee1", "node_type": "1", "metadata": {}, "hash": "1ef3a678187dbee9453709866b0360b54cdba483f5d0cc980fbe17073d4aaf0c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c500dd79-4810-40d4-a4c3-d87743bb41bd", "node_type": "1", "metadata": {}, "hash": "7ea87f7d3b02bb08259e7dab6f261723905542bde75761f342bd1a31130fbb6f", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Programming. Since the exponents are the same, that means software will have the same behavior for under\ufb02ows and over\ufb02ows, Not a Numbers (NaNs), in\ufb01nities, and so on, which means software using Brain Float 16 to replace IEEE fp32 in some calculations will likely have fewer compatibility problems than switching to IEEE fp16.", "start_char_idx": 0, "end_char_idx": 332, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c500dd79-4810-40d4-a4c3-d87743bb41bd": {"__data__": {"id_": "c500dd79-4810-40d4-a4c3-d87743bb41bd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "496908fe-32dc-484e-8961-0434e121c9bc", "node_type": "4", "metadata": {}, "hash": "7ea87f7d3b02bb08259e7dab6f261723905542bde75761f342bd1a31130fbb6f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3253646d-b4b2-4888-b337-df2b3ab08c5c", "node_type": "1", "metadata": {}, "hash": "7770ba248b92c32fc798c13c8da9390716d1a0c6de478a281339498a582c702c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7df77f21-ee41-42e0-940c-20b634731c57", "node_type": "1", "metadata": {}, "hash": "34b539a235cb25261ad71839dccc84565877b018ccdd3e0e25e43a1c02b7d497", "class_name": "RelatedNodeInfo"}}, "text": "Brainy Choices. The answer is 4, all of the above. Remarkably, for", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7df77f21-ee41-42e0-940c-20b634731c57": {"__data__": {"id_": "7df77f21-ee41-42e0-940c-20b634731c57", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cffe4411-5928-4ffd-ad7d-390e81ae295a", "node_type": "4", "metadata": {}, "hash": "34b539a235cb25261ad71839dccc84565877b018ccdd3e0e25e43a1c02b7d497", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c500dd79-4810-40d4-a4c3-d87743bb41bd", "node_type": "1", "metadata": {}, "hash": "7ea87f7d3b02bb08259e7dab6f261723905542bde75761f342bd1a31130fbb6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e6564c4d-b1e2-446f-8bb9-f1a95de03f3a", "node_type": "1", "metadata": {}, "hash": "406595f33066a8cf25ff55f284396fe75a8aae3fc2c83b3516821f780bd40d43", "class_name": "RelatedNodeInfo"}}, "text": "machine learning applications, Brain Float 16 is easier for both hardware designers and software programmers. Not surprisingly,", "start_char_idx": 0, "end_char_idx": 127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6564c4d-b1e2-446f-8bb9-f1a95de03f3a": {"__data__": {"id_": "e6564c4d-b1e2-446f-8bb9-f1a95de03f3a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "87b9d72d-be33-406c-a36d-de7eb6375dd3", "node_type": "4", "metadata": {}, "hash": "406595f33066a8cf25ff55f284396fe75a8aae3fc2c83b3516821f780bd40d43", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7df77f21-ee41-42e0-940c-20b634731c57", "node_type": "1", "metadata": {}, "hash": "34b539a235cb25261ad71839dccc84565877b018ccdd3e0e25e43a1c02b7d497", "class_name": "RelatedNodeInfo"}}, "text": "g y Brain Float 16 is very popular for machine learning, and Google\u2019s TPUv2 and TPUv3 were the \ufb01rst processors to implement it (see Section 6.11)", "start_char_idx": 0, "end_char_idx": 145, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"4baf4462-46b1-4b04-b8d0-21e59b184df0": {"doc_hash": "d20588844686476d9e6a90fa93cdc6f781d2a74bc31eda418edb330beb4eac16", "ref_doc_id": "9f837790-0e07-44fc-8fa5-12375f808fa4"}, "d17ad58f-dc58-439b-9464-7ae2819ace1a": {"doc_hash": "eaf6b0421acde1f987b2108e38e45d3af7b508f2f76807a0d7d699ddf0742249", "ref_doc_id": "c0b4d635-1304-4a6a-b6bd-88a7aa7db544"}, "43412ee2-7a8f-4c76-9d04-3c3ff54e5fee": {"doc_hash": "8a296aac943956dcc5a6ca54945e2cdba535155848e33d01d45c789116821e2f", "ref_doc_id": "0d78d308-f4ec-423e-8f7a-cf313c9cda5a"}, "44a0ff82-aab4-4adf-b2ac-b63875a862cd": {"doc_hash": "c16e7d0a9edd830932f8fb5169402fa25e5938f8bbde31077b5720bc9146d30d", "ref_doc_id": "b34a6b2f-e1eb-4d07-8a26-fa50f0a2e887"}, "1eec0e0b-7f66-4bf2-82b8-716c491f9dc7": {"doc_hash": "89a51291f21e23788f7750d7ff614bc770a6c70658677ecf9a737deb18a18ad9", "ref_doc_id": "1514030d-8142-4860-934f-fde4d81e2405"}, "92e6e707-0fa9-4218-a453-cd08c7a38467": {"doc_hash": "aef6b0315369c3cedc71d5534cfd3a29e902c6853d72a3604f1503d1fa9c27c7", "ref_doc_id": "21bcdd6a-23dd-405f-bc97-e9e38f4db7ac"}, "f9a0b647-6122-4120-b14c-044e7f6945ca": {"doc_hash": "29036ceea66197139540a97ae645100e8fec8df112391ad37ec0d016dfcab7e6", "ref_doc_id": "46f38460-7311-4a34-bd0a-47b5333c3b44"}, "a0966056-50ae-4d40-99dc-e6d933becf54": {"doc_hash": "ffcf0d829ea45ddcf9a336a453ae5a5f8ff5af29ceb2377e44a06113e68bc62e", "ref_doc_id": "f79c7cac-7c3a-4852-b873-bf7abaff55a5"}, "85dfba78-9cff-44c3-8e42-7c2766083a1e": {"doc_hash": "7b5db5d34fa5d604611bd24fc0e5af16a8730b26f97dd779e8406796e3e1a7f5", "ref_doc_id": "d759170d-e0cf-4c60-bc59-915083b472e8"}, "60aaf181-c600-4738-ab8b-34933f5131a4": {"doc_hash": "cbc40e28151c4b0edf510d1a8dbaa4084cd884a92c4343acf92021eec216c533", "ref_doc_id": "1553336b-957a-4938-9126-a6bf55e72c3e"}, "86b42913-aa8f-4827-a30b-155b69742111": {"doc_hash": "91d9f3a51e8f96f14b008edd09205a4c6b2a376922d1e863b7919de521ac0066", "ref_doc_id": "b03e529a-f887-462f-b72a-e42c4581f52b"}, "f0f62f51-4a87-48ee-9509-6db3ba6d8671": {"doc_hash": "8aa092c682ab5ffb80681cdfded6a030c3683426c4abad8d56bec436e057e1a8", "ref_doc_id": "4bac8712-605b-4bb6-a145-98cee2515cdf"}, "399b0c51-72d6-4810-a59c-1d1b59a89b57": {"doc_hash": "78097960779585aab1acede607ed778c4ba7169602b4897f9879935a5696d183", "ref_doc_id": "9d88a5f2-1543-411b-b866-d8424d6afa5f"}, "edac23d5-1999-4249-aebf-7f904ef874b9": {"doc_hash": "980db8880e417de893fa0b6041bd9158e9d5cf43db113515dc1fe77afbd47d45", "ref_doc_id": "49940627-84f5-44ae-92c9-a41d859a7f44"}, "edadf7aa-37ec-41d8-b8db-edd32a1bf67f": {"doc_hash": "827f80e952dd19aea93f9fb6410e35ef9c8665512581ea3380cf559a8b57caad", "ref_doc_id": "6400bf89-a736-42a5-b9a9-cc5a9f024abc"}, "9035cc73-d75f-47a9-b1db-62d36ca83a80": {"doc_hash": "9ed38a89f6376cfb8413533b9d8663a21735c3cc61ca74c735baf9252c20709c", "ref_doc_id": "01eaa419-18bc-46d5-a153-c1888a36cfe7"}, "0c561569-64ea-4cdc-92a7-870318c983ad": {"doc_hash": "90ec1431586f773ff7d1ddf4717a9cbd99171a556e104963afe7134fbabe15da", "ref_doc_id": "c435f901-a65d-42b0-b33a-e99f11bc7236"}, "3281d5aa-af5c-4091-843e-3039a29af228": {"doc_hash": "42196a9fb8e92e69f592c405b80f3e5833a488c26c1f0c429de80af75e63fb42", "ref_doc_id": "2fae31da-603e-4183-981f-df854cf0406c"}, "dac34c60-781f-414e-a618-517fa049d8e5": {"doc_hash": "275246f45bea083be1a527a6b2c88daae7543e8a1d697a3ec21d3178a0710987", "ref_doc_id": "bad08cc7-4fdd-4f82-8a60-469fa255464a"}, "c734333a-fbfd-47ba-ae18-cd3d02a5ee64": {"doc_hash": "221fcf521e21424c71a24812d897ab5d43c8c5d4e1873e0cda6cbf436bb5adf6", "ref_doc_id": "f5341aae-332f-4b5f-a60d-6dc93cbca1a1"}, "c2b5ded0-c5a3-4102-991d-9ef3afd1a75a": {"doc_hash": "d5e8f8e1f905aaa29af9c814dfdbd70384d4a0f3d3c9aa1a960c89ad52dca421", "ref_doc_id": "3542a9f9-3469-4e7d-96be-1f4d3dac83e4"}, "ed58c28a-a388-4a04-86ad-22eda62a1bb2": {"doc_hash": "dcb27f4252d59d2ce9e1cd56dadfef329817d2c12e766c22e0e9be6a6dcac8c8", "ref_doc_id": "c0f3b3a5-8373-4c00-8a9c-5f344e7c73f6"}, "1241d19d-6866-4e23-ae1c-8c8c3d93c94d": {"doc_hash": "f7d1a584a88cbeab28666ce10b96c007a76f53dce6ab41d6808569f669ead850", "ref_doc_id": "38561f3b-8413-46c8-baa9-a73219d50969"}, "b340860f-165d-4a35-b432-ab38744102cf": {"doc_hash": "81326ce427a487ef5eb4eaeca860aad11dbea81cd598120ed91868fb3be154e4", "ref_doc_id": "279dce82-2d56-437d-8886-ba7d458b79f2"}, "751e4cfe-fc88-4c7d-b914-a87bf7612652": {"doc_hash": "88fa3dc64b4b3b6337b7b953b0a135b15817ea08929f09ee14fecb8120ee2b50", "ref_doc_id": "37ed75de-949d-4e65-8037-58cd1a5ee4e0"}, "f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39": {"doc_hash": "3c49985f62c7e9258bee6b3662cec26876a271776e22fcfc6c35497d5be88cd0", "ref_doc_id": "09fba88a-c052-45dd-849f-df499f17953d"}, "83fa51c1-b77e-49a0-a049-b9af0a806f81": {"doc_hash": "4fb4669d67b296523b07630d309f6a8507901fd09301fca12895149625ffe240", "ref_doc_id": "1c690737-241d-47d7-b92c-1a4f11d37c30"}, "51c52a78-0258-4ff9-9d5c-f977869ffe18": {"doc_hash": "6ad0104955e396326b3d3f76bcd7c3714aead166f7f3406bc923da981ffde07d", "ref_doc_id": "a8804949-90a6-4b3e-bb7e-3bfa1b688a0b"}, "b3672af8-b97e-4dcc-8d50-4bf8e2013156": {"doc_hash": "ccfa4084335fbb54fdd00b03edb395cfdf33dffacb3cdab1415b576fa3ad5bc0", "ref_doc_id": "0c7e182b-5cc8-4e79-98b3-d5db498b3587"}, "3f6a02a8-d1fa-469b-bf61-862f38a15436": {"doc_hash": "bb20e96856ef451e06d98b8f6b01a5226fa492ec091eb922c0275e1f4164c136", "ref_doc_id": "85d55c1a-fe08-4741-b0f4-a2edaa47b9fa"}, "c7d71d6e-3b18-42ac-afc9-138514abd91a": {"doc_hash": "c5bbe5ded5045b04535a5f0928b903b6423c142332063bafe42cb97217b8cc3b", "ref_doc_id": "5418f586-4bfa-43b6-8837-bd391fd87867"}, "1c3459f4-0950-43f7-a7cc-64976e4e3b9e": {"doc_hash": "6ca5f70713a03fe58841b3cf4bb03a476792e57dd9bc234072cf5647d6f1ad6b", "ref_doc_id": "6d656e49-ecf9-42ca-86c0-103aa7e7a674"}, "24933012-467b-4b29-8553-03a4864e4d88": {"doc_hash": "f38cb0a34882e1d91e9459abb0ecd60c916c33b05c38997b8ea7e20cecd2a1f3", "ref_doc_id": "946d8ff6-d338-42b6-afc7-6034d731b2df"}, "56e3e143-0db0-495b-a2e4-25aea1b63194": {"doc_hash": "1c1c6e36bfd34e9698d9a7bb384cf37ec9fa3039d5728462868fe90af0f18253", "ref_doc_id": "3c98a572-c871-4b0a-bfe1-fb8b658cc74a"}, "2aee1504-ad8b-46f2-b754-4284eca3c0d1": {"doc_hash": "b44c53292a0aa513df4c0e1dc926552021858b2d86f81b637303a24c8c0bbf92", "ref_doc_id": "9768df35-69fb-4e62-9184-47e1bccc7da8"}, "d0d884fa-11ee-427a-980a-c231fd22c7ea": {"doc_hash": "46ae711c2018dac06bda1276e141b0e3823fb3dd6e1a2923cdb2e9c334f8181e", "ref_doc_id": "ca35e230-dbba-4daa-976b-e198d39639de"}, "a691493d-ac2a-4e9e-90f2-e24a3b6b0888": {"doc_hash": "f00c025c82bd13981eed79461c393cc647bcfe27271b312ba64805fe72422c24", "ref_doc_id": "749bb1e7-da46-4306-ad5c-9a92362331e5"}, "a663210e-371f-459f-8b1c-906362a7089c": {"doc_hash": "0004f718d43c4280df01f982aca145715910b9d5fea4effe3a02e63ea38a7003", "ref_doc_id": "9abf78b8-26f8-4989-a0f1-facb9f0b306e"}, "c29ec131-469b-4975-a97b-cd5e51551d11": {"doc_hash": "ce3a78108c9d845b8e3f56ed5b243b7a416810694009c6dfc5976806b36ad053", "ref_doc_id": "7c4be381-4c53-4277-acee-774c8f52f7b3"}, "2d3cc238-a404-43f2-a71d-900b39b8582e": {"doc_hash": "7a0f278857228864e8108d7ff3f1fb822ad334b15d3e8e2bf83fc9e93ad38d3f", "ref_doc_id": "b55f027c-5ad7-4d29-9acb-2e3dc5153476"}, "ae75d3b4-e7c2-45a8-b19b-72d94a982026": {"doc_hash": "5a751596f0ec67a8cf6a7e416fbfc196f355887b74c2dc500abab5fe67167bf8", "ref_doc_id": "64ceabfa-4441-4ebd-b091-663ecd17f45e"}, "3756d990-8290-4de3-a440-2af6f700c70e": {"doc_hash": "63507f66d2d1cebeec499ab12beef1b3ee41278f7c2f2a3dc9434a03b4faeee1", "ref_doc_id": "02887fc6-e816-4bce-9fdd-93212193c11f"}, "7fc21e30-ec39-4b08-9629-c24956837a62": {"doc_hash": "56cd84431cd35e22f7775b6cc4d081ce8be9a55a7b92c95001a222cfbf97c427", "ref_doc_id": "65dc8cc3-31a1-45cd-955d-d4b131735a6d"}, "f173ed58-a77c-453a-a210-6b5ef16af950": {"doc_hash": "5c1dd48f3f779024d95fcac43c7f18f1894ba0148d8edca28079519b8a642631", "ref_doc_id": "9e1ecd30-af2b-40b2-8526-0ed0a1d95ae2"}, "b6e76d56-2a9a-4465-8c86-4432e4978126": {"doc_hash": "0ae8cd1d3db3bc28e7fa1d3cb502a6dccd05701f549379fd449068044afcd9e4", "ref_doc_id": "f55ef5dc-7358-40a8-9443-cf63c41e3f95"}, "4f8ad4d5-5251-4714-85e8-48c86d25a8aa": {"doc_hash": "0fa04bc6b685cbfecbf5748142da29e03785f8cee840f0cce9de6585da657870", "ref_doc_id": "79ceaf7f-d267-409e-94f6-f7c7b278de39"}, "c0108431-29d9-42c1-8fa4-35d80742ff2e": {"doc_hash": "ee0810c54c8ece5338ef655c4b25a53eaab946c3f8451de884626ac099f7ec56", "ref_doc_id": "6b21e160-bd7e-49a7-80a9-af4e1abfa0c9"}, "08fe89b4-ff5c-4285-aaff-f547e4954e39": {"doc_hash": "0cc1b34478ee900cb3bf6cf7498e845fe0a7c833b22a0c77a97d6f31f0965a7c", "ref_doc_id": "aa3283a3-1f45-47ab-b4e6-3c5f4d716331"}, "7157fd64-8441-42f8-9bf9-4f3ebaffeb14": {"doc_hash": "0af4e5cc1b1c2ea59aaf157074823f3cbb171200dfcfb50ffa5bc08e2a1528fa", "ref_doc_id": "3447f5b0-2eee-46a9-a552-b980f65ad2ae"}, "680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf": {"doc_hash": "7ae857c9d3a62340929bad05994c295a2af87c89ebdbfe7c566b8eb1352eaf6a", "ref_doc_id": "ff488a7e-950d-4b21-bbdc-9a0c1ac8069c"}, "2d60da06-e2cc-4d9b-a8f8-f6a08289a06c": {"doc_hash": "a1901c11f3c89bbe85b402f2b3b8141650fb8123bfe7e965bf5b8e00dec01e39", "ref_doc_id": "e1be24de-e1ee-477a-881d-342d4cbf4035"}, "5535e2a7-4f71-4a01-bc72-85a925bade40": {"doc_hash": "a3a8b29b0ced9f746ad47d3fca5d721fbdf38d8d74cda98decb4f9a6bb901f89", "ref_doc_id": "8c0b980c-087e-4331-ac5d-d41fc401b73d"}, "7ae31b27-b741-4a42-a713-1a96b573d558": {"doc_hash": "e77dd407d6bbe5af094ab1952003b3264e1ad58df0a80b0676302d8348761dc6", "ref_doc_id": "d822aa0b-1039-4081-afc8-9bceae5e9b25"}, "3743bcf7-b80d-4d7a-805a-393f81f350a2": {"doc_hash": "aa4c27deb2de8b45548ca8c8dc2ba89d1b7d8e0331f50b51148e9446bbb26fae", "ref_doc_id": "e4cb4fa7-3953-4a4f-a848-d7aaccaa079e"}, "fa4a664d-1714-45e2-bdbf-aa7b9be1ead8": {"doc_hash": "cd2f7310abefaa94caf7701d364f8cba580ca825dc0a928ffeadd8782385fd7d", "ref_doc_id": "b86c477d-8fe7-4749-a06e-71ead87bbc0d"}, "73e2e9a4-f9ce-4576-b9e2-293d06615026": {"doc_hash": "2e7e2cc7bff7494d2cefa8cfa33d31977953a1ebc8042373741179d6f5cbd184", "ref_doc_id": "3b7b735f-5a05-4b33-82eb-d26314d951cb"}, "23713b43-23a2-4388-9704-4127744a4ce1": {"doc_hash": "f142185201ac57407aa4dbf93c2faaa9d8ac8888eb0ab35654fa62c885773156", "ref_doc_id": "e7b892fb-ddc6-4380-8a82-cb9eaebbca14"}, "c788a562-545d-4b94-a1cb-74e8eedc110b": {"doc_hash": "bf47fdc11353f73232e2a916716facf40d6c32046418c3acb6a62dd5ea57bd63", "ref_doc_id": "a7d46d3a-e4f2-492b-a531-916509641dad"}, "926fbdf1-0830-4f5b-8e54-1a65108c4371": {"doc_hash": "4a82dfc60bac88379cd524f3b5c2284faa7264000c4475a7de034bf2d22a87c5", "ref_doc_id": "14f4c572-0807-4a93-af8d-4bfbc6cf9f42"}, "a14244dd-78df-48f9-a36c-ac599b7de7e5": {"doc_hash": "816a637da16008e7cff4e84bd76696ae3fb8e10c2590c3438288437b37b7ebc5", "ref_doc_id": "ff0e1281-a48d-47e0-b187-2814f6d0b0e1"}, "a2916db3-0bde-419c-bf5c-d3e408ec8878": {"doc_hash": "0cdf8541111301056492ad92576f1e665d7b7407d2915f96bcd2f769567e371a", "ref_doc_id": "f8224af1-1901-455d-b33e-a99bc2ab6dab"}, "339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e": {"doc_hash": "cce1980f3b71fc2416968f21f0d3bfa916be1d736acea7b959811dbc8be8b04e", "ref_doc_id": "b1877f4b-c06d-4636-9586-f8b68ba6af28"}, "21cae550-a792-4b3d-b88f-4bbfd45f4b14": {"doc_hash": "e3c2fe51180e1dd2d7916598119ccc169471e987f5c67ff6b136c550ae287458", "ref_doc_id": "a70c500e-dfde-4cbc-b1e2-b2fe3a094762"}, "801bec80-3d4c-422f-9f57-f8d68b6ab82a": {"doc_hash": "27dea82895f8bc29badf64df22cd3ecddd2e676eaeb7a28d332f9415fe8653ae", "ref_doc_id": "800c1c01-c43f-4c0f-9454-89119d2f20ef"}, "9d30b813-40b9-4761-93a2-567b588cd93e": {"doc_hash": "89833722fea28ac31e4124957313bfc8f2d1d60d1972a351d4111bd59ab9bfa6", "ref_doc_id": "5a9373f9-6bab-44c4-8ab0-ef59dbe439ce"}, "9253646a-5800-44f3-8010-9e5328ef2b74": {"doc_hash": "9ac45daab710f83a6e672e5e5bd8030b61d62ff6d62b6e4462ecf5dff361412c", "ref_doc_id": "63ebc2f3-982f-4942-85b6-c479ce10b386"}, "cd11f445-7232-4d6f-84ec-dc17b5f3918b": {"doc_hash": "d58bdd1b8809e303e1d3397ffd6edb28f7d64db3cc054287386e7c340ac31b1a", "ref_doc_id": "d4fbeae7-1153-4d5f-ad30-d67896f79bc5"}, "e58b2063-41f2-4bc6-8d88-952075dec1b0": {"doc_hash": "0af77744eb5b877e09ad6a5a42199e83374ba4f848b37fa6c8a3e00d34339096", "ref_doc_id": "d4cb580c-31d0-4b58-9878-61aba678f106"}, "9b827bfe-da08-4c73-a2a7-b4dc59f8d78b": {"doc_hash": "8cbb0db36d0f778d17d55eeff04f6e978519c75e39a88e9df20a8769c91a0f1a", "ref_doc_id": "94568cc0-71a2-4dd6-bbc1-d113b06bb5dc"}, "17222984-4cfe-4c48-8b58-857a0b89b833": {"doc_hash": "c0a919c6dc3d9803bae31c4a7268e713617064e45a50b616e4d233034bb8588c", "ref_doc_id": "a3d72201-b853-4275-81f6-43540564ea71"}, "34404b09-17ec-4a30-8014-b22e683bc700": {"doc_hash": "a3e4b021fbadb2a968d9ca005764093c3355f0c2faac63a2a33f3cde22703da0", "ref_doc_id": "b1a805b5-8bbf-4cc0-88ec-824791423d04"}, "40bbd5e0-a82d-434c-88ac-6b6814eecb47": {"doc_hash": "f56b5f21103a071a14733695c6db417aba79f10461a26e1015b1b68cccc5cd71", "ref_doc_id": "52098b39-6941-49d5-ba6b-1e73720945f9"}, "2c286414-ec3f-43d1-b1b1-2aec3c78be9b": {"doc_hash": "da504a677b2e3a71ab9c58e71029f10cb3d3c482e8203d67bf5e4175ff2d6caf", "ref_doc_id": "b9b2e6b5-db09-4934-80fa-bdbc877c159f"}, "76a9dba2-0537-471b-b72b-b869edc619dd": {"doc_hash": "1efd3bca3d489488d43861c55a7f72cfeb46f8bbd52852436af87339f9be22dd", "ref_doc_id": "cc5a10a7-75a0-494d-94f2-5f45da7c20b8"}, "bf6584a3-b706-4cbc-9933-bdfbbe193ff8": {"doc_hash": "8710bb2960116922cf4a468f7760b01124858af2ffdebaa9f25e4fc317cb7b4e", "ref_doc_id": "1fb4170e-3897-4997-aa3a-8e4066ffddbc"}, "b5ee7649-1745-46ee-968b-44cffc6c79ce": {"doc_hash": "fe7124d60df86917a14bd96f1e54d2602103cb530f0a1c1cdb81bb342d8fd372", "ref_doc_id": "0824898f-d511-465c-9db4-776d288f131f"}, "c837eead-f4ca-4fe0-a013-963f0269282f": {"doc_hash": "d8a32cc2bfd893e8594a260d7ca6da0623264be6c235d0d32b6d8e858f1fa5de", "ref_doc_id": "31597250-f281-43d8-bfc0-80f89b283453"}, "3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4": {"doc_hash": "e9ef8519163d68c8bd6148aae3652a0e44c11ceac27423464ab47b0a61e2c1de", "ref_doc_id": "b9d1c02e-0773-4f18-b08b-e71940a04ebf"}, "57a50616-24ad-4c34-a468-18fd195e5949": {"doc_hash": "ce6f29ee17224976c249e1d12a2f766e9f8152b219fcf6aef241e955ef788c56", "ref_doc_id": "4a4d2ead-71f4-4e0f-a1bc-f8096bdae699"}, "66d977b5-6ee9-4ccf-a686-5bec4604febb": {"doc_hash": "8cce92ac3ead8656327dde1f5ce20bb778e2a424a326a6928ef322c094491e37", "ref_doc_id": "f64a2bc8-d50a-4368-b242-e477930bfd6a"}, "f2e70c3e-0703-4f78-9e9a-70949660aebd": {"doc_hash": "fc7bbce85fb34738989f434ef9ca5c70d31f63647503b0327ab724a0626bfbc5", "ref_doc_id": "ec98d5f6-6fe7-46fb-a389-31856ad7ac9a"}, "68a8a736-e74c-4709-a535-3aba786f31da": {"doc_hash": "029b61546cd9e176b62b4024165b31a94e52fff886011e54854b126d3dc096ad", "ref_doc_id": "57c4465a-e712-40e1-b70b-c4461547908f"}, "7dc6af21-60a1-44e7-97ca-a5307eebe8aa": {"doc_hash": "5017d166bc71c281ee8265b1cb3929ad5d97c0f35b7cb1e33b024d95cd80848b", "ref_doc_id": "5f0439ee-0f69-44a3-8e56-043dcaab7fc1"}, "7b356574-4dbb-4d47-86e1-fe6783e9a30e": {"doc_hash": "789117971bfe886fb680fe0f10c8a72bfa7a87cd4fc9a31492acba8810370832", "ref_doc_id": "90d2538d-fc7c-42c9-8d67-322db4b5c1b5"}, "f3ae6cfa-3659-4bc9-829e-e2a61a839bf3": {"doc_hash": "ce91a80316f7f6b7cd7a918de25456dcf885d8fe57629ecad190c0f3498704d8", "ref_doc_id": "1a3adb64-953b-468d-ae07-c48bbd48a4ab"}, "a197e3ed-1d75-44aa-8a41-a6a051c39dcb": {"doc_hash": "c146289d658eba5608259d2eb4e2dc02c63379f957b7dac35553f51e22a6617f", "ref_doc_id": "1c1bf24f-5bed-4292-bdb8-339ad4e699fa"}, "310c7a4e-2333-4eca-9e7f-37521c558d1b": {"doc_hash": "471537884d17d9883383b21ae9081a393c433b802fe4438eba6747b38e802488", "ref_doc_id": "27ddbf86-ca33-4585-8cb7-53dbc3232863"}, "5f779259-4d3c-48c1-bb41-e809e06e6a5e": {"doc_hash": "2b5c3bd64b48ece8acfcadfa6e082cb80d32ebd88a6ee47cfbafecab0a1aa3c9", "ref_doc_id": "d299ccb0-ef2f-4c2b-af97-9c4a3f001b3f"}, "9eed830a-ce1b-4e9e-ad4d-e1d454c56a21": {"doc_hash": "c1b4906531d9e95f5f7a3acf03c0f09421f969319eb174916ff51f92dd809bbc", "ref_doc_id": "546068a9-0f26-485c-a190-d1e7815c3ee0"}, "9a206ec9-3b2f-45e4-969e-737b648e876f": {"doc_hash": "ba873646f212aacacf0ac7cc3ba424306b0d95fc2178c8a80196a133dead4bb3", "ref_doc_id": "3f3c868d-7a95-46c2-a96b-38c735ae0f45"}, "ed2a4d82-46ee-4007-85a8-0c4f29e044f9": {"doc_hash": "5a46dbdc5a432823d85c5501a5defe5d859cebc367b2d48ef324878edb7d9f26", "ref_doc_id": "0025c555-66e3-4093-8dbf-22a7f964604e"}, "bee743fa-cb63-4d2b-a938-a72b127cd6d2": {"doc_hash": "06ff82b18e3d44f9df4170aa41a0b1800d9843f05139cdc452539c1a10f0b29d", "ref_doc_id": "0b63d8ce-3b7c-4c01-9877-0d1f4ba0f0d3"}, "40eef8bb-2b4a-4a06-b523-d96bec478e3b": {"doc_hash": "ed2c70fedfdfe511c1907eee01e6ac7d1fd8cff354c1550b79d43f15a87b1e70", "ref_doc_id": "50d48a42-5f4c-45d5-8539-b46f83b5fc2a"}, "17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa": {"doc_hash": "8898d432b36e758b720d402037e7429ccfbe44229ebafadffaec88e5a9749eef", "ref_doc_id": "fc0506ad-4816-40e6-a71a-c6903d77a307"}, "90e1087a-ebf6-4612-a8ff-e307e59fb18c": {"doc_hash": "a7d047a61eba6fea9e6ee91be4f5b0a68f8b3251737375520660232358d08d78", "ref_doc_id": "01269aef-e414-4955-a267-a20e3f9bf88d"}, "1540a4c7-71b2-46ae-a120-ffb112a50308": {"doc_hash": "23eb79b1fbc23bc24604043ca190ed55a8e2278793aa177dbd12b9cd56912bf0", "ref_doc_id": "b10de07e-8b17-4863-a00d-fc99e883044e"}, "444f244f-50e4-4443-b064-8c473723e46a": {"doc_hash": "a0ca5792f3238838e66792dd3ea26027311bcf85b937355f5466d3ea8408a10c", "ref_doc_id": "726ab1a6-3676-4271-bb8a-93cbee35bf43"}, "240aa3fa-cabc-4608-a169-f3c6646a76c7": {"doc_hash": "e6915032e80d2495fdd4096c1de21a3dd8ae1e144e9e43783f035465eb6add16", "ref_doc_id": "736cf82e-c1fa-4af7-9d46-4efe2f833dfd"}, "89716225-2cc8-4995-b518-7e9a2d987a07": {"doc_hash": "853f926fb9a3d9231543a13c280d7263c3d05c867d42c77f11e3d4fbca700bde", "ref_doc_id": "5c17d48f-2e5e-4987-95d9-0a46a4d77c25"}, "c06307b8-e7e8-4c14-a1c7-41f15a8c16e0": {"doc_hash": "cb40bf849dc6c80af5368aad6f6724d99bd872ccb6d8b94ee85ff10a2ffa292f", "ref_doc_id": "7888b8f8-6b8e-4ec8-bf8d-73dd8af22270"}, "3c9d0583-6c3a-4b93-912e-026ab46a6fd7": {"doc_hash": "83064883aa3f2a5681e56e9fd4a77245e345907cec02983b7a6ac61802632d96", "ref_doc_id": "6b3321a2-e371-4643-9850-a6a33ecc4955"}, "b9469608-11d5-4ed9-9974-02017fb12741": {"doc_hash": "a3ed5be6050a3e8314e69ba2434c450ce9e0282a4f3e91651517a20d80f88074", "ref_doc_id": "cbd32d7e-9568-49a4-88e9-fdae9b2f0587"}, "8ecc8d4f-a981-4293-8454-b8a7ef8b42e0": {"doc_hash": "4f9779170450d599d7f45ddd8a796458dd68d1d9e3afd43d2163321bdf4a3462", "ref_doc_id": "e6c630ef-0145-4025-b43c-9c99389801c6"}, "c555cbe6-f03b-4677-9ed5-0088602fed21": {"doc_hash": "9d4db36f307b09afb7e0fb7501a3c2a1cccca4bf4721493204121ef271e2f140", "ref_doc_id": "23bd1efe-ef16-4565-aecf-60df4efca582"}, "cb8ad650-3530-47fc-a9e3-9994cec7cce0": {"doc_hash": "70f2165f87fd3ee08e4e4d6aca7bb6968c63284867ec2f9f15d4b78c8ed28326", "ref_doc_id": "7156ed31-8a22-4684-ad4a-570efed464d9"}, "aa8a9c25-9361-41fb-b33a-17c6e260dc8b": {"doc_hash": "14831a8674493061dca8ecc3e546805ba99ee147053ee2924a2edacdbd3ef42e", "ref_doc_id": "69dbae18-c6b1-450a-8d6e-9323a7dbb39f"}, "342e14be-bcb1-47bb-b2b1-052f553bb98c": {"doc_hash": "8946a84f904bab19c9820d70ddb37e8be065b0ff96a88d1b13134a110fd34c52", "ref_doc_id": "11bba3a9-8aed-4712-85ea-ea81ed673de2"}, "1d9b984d-6eb5-46a0-882e-f045f5f463ec": {"doc_hash": "fd0cd43029505daf9fd6c881519e40451bd8662f4061df6f8936baa1c0ce787f", "ref_doc_id": "d3053965-45b7-4112-9952-222435a95688"}, "8563b831-6fe8-4889-b2a8-105e06931aaa": {"doc_hash": "ff39aaa631cc29988377622c607bbf357332a472be052281d9bd093333818931", "ref_doc_id": "a601cc7f-2518-43ca-8fdf-cda207c8c65f"}, "21771d7b-17b1-4b33-a8e3-aef2f551d489": {"doc_hash": "d7e715bc78a19d2b57783a870927c26cf96fb79349a5ef4add9d9a5bec2ba185", "ref_doc_id": "0b5a5c19-23e7-497c-83ae-a780d950c83a"}, "22e997e6-e747-45af-8ca2-36b3d3a1ddc9": {"doc_hash": "18803433005a40bf3db8630c93c792269d685a2c88f901fc1fffc15c3ff01b25", "ref_doc_id": "c43d7ebc-2c1a-43ce-8999-13f8dbaeda77"}, "78e1ea45-692b-4c73-a7a0-28ac78cbc2ed": {"doc_hash": "34cc96445612afb0eae38dca8bedadd730acd7d1210f47a15b85c18022785069", "ref_doc_id": "0e0a1f41-8590-4eea-8989-a86a6875e25f"}, "b82bc74e-b918-4665-b7bf-8d3ce6ede9f7": {"doc_hash": "22e9bc0959b8a1dbde58717f3a33ba5f9ea37f0b2150021ed596cbd324b4108f", "ref_doc_id": "bddeaf4d-1c10-462a-a253-8056f23997b1"}, "db8ab397-c013-4cff-bb07-5848898647b2": {"doc_hash": "ca2dcfe7a388fdf37e379d55918153cbb86b1b2d26f4e9498c81e007aec3fac6", "ref_doc_id": "0bdb2cd6-cb98-4735-b9f3-08be3e727391"}, "a6757937-ee09-40ab-99f9-2c7cd86056f8": {"doc_hash": "87e2f987ef428f2869f7bb11a75da48f8f4e214ded51a297683232efcebb0918", "ref_doc_id": "4c924759-88bf-4338-878f-503af56598cc"}, "17066d66-b608-4e18-afea-48b1296adb9b": {"doc_hash": "ba8279eba37e3a6ba01044485d8cbf3afc252cc0886e45d530d0b990077649d0", "ref_doc_id": "885c0ae7-aa50-4a2e-951e-1f31f51f4e87"}, "6ee0fa23-dec9-4ecf-8134-d267721662ad": {"doc_hash": "845079f6eeaecff0a7faa8facbf6180e82053137f3a6bd4622818bb2a6009e27", "ref_doc_id": "56b1b63a-cc4b-4b11-8525-e7a31ce4560b"}, "a93d3cf2-3902-4a6b-9c84-68dce525cc3f": {"doc_hash": "1c6e95a1557f31b9dabd9b029898e581348ae57ac2f0082bb765e27c15b2e40b", "ref_doc_id": "c6ce5105-0940-4931-940d-5e959cbbdcf8"}, "737e1234-5f08-4793-90da-6a3535d51c14": {"doc_hash": "066d212e7d72793b8a02325a2e11dfb498199dee27dcee5806c9a1745bb4c103", "ref_doc_id": "ffdb48c1-540f-4e87-82d4-13bd9f06c5df"}, "13e480ec-709e-4183-89bc-d1900d39f0aa": {"doc_hash": "a0b88fa426a3f3cc4319be2d0e767f0d151766b67d1b9bd733cb39b68cfee373", "ref_doc_id": "3a50bb10-c4de-4622-93df-d85ec4f157fb"}, "8fbfabf9-db30-4ed3-a1b9-05c6ea471b55": {"doc_hash": "aa7e12e97e96ce10da6e2343c7ddde9c5eeebfaae4a562007d98a7543fe40e31", "ref_doc_id": "0a27ba6a-8183-4f50-8529-b4c4b33196cb"}, "417bb67c-9197-42f8-8218-2edc17cadfac": {"doc_hash": "0d184c09235b5c35bb899b19fbec44da21ec28d40599366bcf2b74e8cb2997d2", "ref_doc_id": "dc11b16e-c889-426a-8745-23ee8b2c5ae1"}, "fcc94ce7-b009-4954-a1a1-748e0c15acf3": {"doc_hash": "6f1f2858234e757c6d2953ab767efa6f0d4f71b58605214827d6020802a43165", "ref_doc_id": "6f6905cb-357a-4a63-bf29-5ed3fb4eab17"}, "6f7d10f9-369b-4853-a291-fb72e68cabf3": {"doc_hash": "497e78ad81d8d5127f97836b282e9677f0f54801a8711966ead2f5e68491b302", "ref_doc_id": "ef23d3a4-21e3-4491-a810-4a3a9e074b39"}, "f779793a-597d-4ffc-9ea3-955dd7b25e0d": {"doc_hash": "4390c0e7cbcfed6be2b9ed52fdf753a767ad9f0c080fa02ee9ce179721a25896", "ref_doc_id": "fe5e191f-f29f-4075-a62f-512139a44265"}, "87da93c0-db0f-4afe-a3fa-ec24eb256125": {"doc_hash": "062ad1594a4bd8a446d4fd3df39ff6fd84c2b93705d1652761ea5433476f4180", "ref_doc_id": "f56b4c20-e1cb-45c3-9932-d2dffdac61e3"}, "2d39d561-d579-4f02-b825-9a6bf7982b1a": {"doc_hash": "1eccf93125d1f85f98e0cc1846018847f3631b31f0e1453025a80ae58eadcb1d", "ref_doc_id": "22df2817-82e8-4a2e-bcd1-74842f1b7e9d"}, "dd841c0b-a27d-4bf8-bdb7-aab004a5967c": {"doc_hash": "54115e7a9790f6867f4cc6165bd8df096ff343ffbe6c10227579ad29649222f8", "ref_doc_id": "d8f7e772-f388-40d2-8b63-8d7ed581b37c"}, "4b0a6a96-990c-4f02-844c-f2658b3e4f72": {"doc_hash": "b4ade634a48150808c2ad5fa5843475902dd4f65c8975425d7d3dc854475503b", "ref_doc_id": "d674128c-63d1-4802-b3fa-42d450b99b82"}, "4c5758d3-df1f-4141-87f9-e92cdfec31b0": {"doc_hash": "545bc619cccf601e4e9addc7c83e7590603bf0725ba3122afe1a7f62d2702de1", "ref_doc_id": "4da90f9a-6464-407b-9ec5-085f74e1d997"}, "05b9d29f-cb36-415a-a61e-e521ad432b17": {"doc_hash": "2762ff6382ca5751834d610163dbc65375e37509c8123d6d41b50ad5b3cd5f57", "ref_doc_id": "c7951835-b97b-4f2f-9563-7f3597582689"}, "61ae2c55-b986-4ea4-a8be-ed29b99ab7e3": {"doc_hash": "6e13b4f21c15f1e3cbc98778a9ef3fefdfe03581a462d0b6ef6da439caf04b2e", "ref_doc_id": "69dbccde-a373-4954-8b13-7c9768990bed"}, "3f5ec293-9fa0-495a-8293-4ef6e01aae54": {"doc_hash": "d12822e3956e5253d276528602d7c63b3c8bb37a3a9ba4af5a9f6a871eab3d7a", "ref_doc_id": "5a6604b9-0050-4b51-b0bc-1c7501c298be"}, "f0e12242-ad05-47b7-9b22-a5d19c5fcf18": {"doc_hash": "90bac69d354bafab66ae955b249a9ef4563f25419fa132fea4b540eea27555d9", "ref_doc_id": "f0d95cf4-76ec-4f3d-83ac-75acdef47117"}, "1cf61dd0-11d4-466c-a72d-77ca69b83b3c": {"doc_hash": "a385336a6e7d31b56e21e0812b602ec588a9c2d1922e00f52485211ee8cf5943", "ref_doc_id": "90ffdaef-99cf-416d-a7cd-b1cabd26c338"}, "87e03c28-0a6b-4133-9376-584a4e92f740": {"doc_hash": "af1620d71d6a82dcd772ba331849633e5979ad0db144fbc4b3ce75486e43cd49", "ref_doc_id": "8265ac69-c94e-4be3-845e-8d94b8798d79"}, "1254296b-4b99-49ac-abd1-9afe3e82f053": {"doc_hash": "6638a54b0f15b817575fed55c2b07fa97a0ac29b070675c9c0363921be7e3c91", "ref_doc_id": "b9008f91-7f64-4978-9943-25522b17a06e"}, "ee1d72ab-3f2d-4071-9b67-7eaf050b0f76": {"doc_hash": "9457918f11d09b5e0043c775881e27dee1deac92865716dec36639b130f6afa4", "ref_doc_id": "8a58a202-15e6-4769-9cba-ff2d3dc321bb"}, "1b3433d9-5275-4a30-86bd-0c919960a478": {"doc_hash": "98a2298c339787159eb305cc7c780d56ced80972f94bdfb1e67d2e9bed573798", "ref_doc_id": "0c914b27-125b-4c34-8cc3-c2772c1be762"}, "b75d5b1c-09a8-4b93-872c-80061dbcb2f7": {"doc_hash": "38cdaa2025ed1f645641ce7cd80f889f2bde8e992970d6f9c5735bc0431ae861", "ref_doc_id": "7d5feb65-c194-4b16-8da6-82415fb6807e"}, "f761d02a-d882-4171-8af3-d96415e3570b": {"doc_hash": "a1292627712a2ec2775af31ec7f7ec8a213ebd00852d91cc4661d516e12a0a80", "ref_doc_id": "ef87d969-83c7-44ac-b0b3-61fe7b92e227"}, "94f054bf-74ed-4c3c-b3ff-c29f1d317fe7": {"doc_hash": "45ac1289dddcf5a0d62dc73bce103403f8e2666d5abc994763a8a0caac0c6b99", "ref_doc_id": "def39dea-7d06-4094-b7ba-f65b01e06d98"}, "5dda3144-e265-45e2-824f-2d24fa1248ce": {"doc_hash": "d7fcc28c90795479409513e42861f9e102850b1d7c3c23f3bd82ad378d9f462f", "ref_doc_id": "d3849c60-a598-496e-b925-30ba1036f26d"}, "53a31736-4e3f-4c9b-9e4a-391c58305bef": {"doc_hash": "a9b5dd503fac74f836824c9dde6fa33740214ae88eaa3936fc2ce6bfd75c0417", "ref_doc_id": "dbbb0a02-e8fd-4d85-8bd4-a92c42fcdca6"}, "b63af6f7-a6bd-45ba-a412-83863ba699d2": {"doc_hash": "0bfc67c5bb75a5cc5f84ac50ed97f6029fbfa84c06c2aa7cc47ccc2be64e4285", "ref_doc_id": "ec7601af-cc8e-4ab5-999e-a824eb1fdbf9"}, "05df9c94-d230-4878-b77a-729856240e6e": {"doc_hash": "ae1f39273cc007980028687e4a6b508a6b7312b7c4adaed103a6adb768e8f0e0", "ref_doc_id": "6944ea0b-487e-460c-b47c-febe2807db68"}, "0d371018-7407-41e9-b3de-02b2ccb802fb": {"doc_hash": "c9f5a5a1985b1f2a3116198b4c0824a06b6565573f5d35525b91f77d5931833d", "ref_doc_id": "b0ac1376-3859-4fc3-9ce0-cb1501f278be"}, "99909c26-6b94-4afb-9af0-40e082b83b45": {"doc_hash": "3cd1651cb7a4d39fe8c7db6b2285d5232180d8664c632632fca809428415e9fa", "ref_doc_id": "6b9fe8c4-38de-41fe-911e-87f8853952fb"}, "56300bc6-88bd-461d-9c3c-0f1426200e0c": {"doc_hash": "88a98cbf015b620224f5a679cdb180527cf7d1261fd0231d2bb3fd5e2b935cad", "ref_doc_id": "91c0a7b2-78c2-4ddd-9495-7e5175ec01b0"}, "b832b658-f9b0-475c-accc-d653b2ebe356": {"doc_hash": "2a18a16daea684b627b9149c691d2b3603bd9295163eada8399485207f1b412c", "ref_doc_id": "b2217c41-fcbc-4561-b5b6-eb533a64f703"}, "b7397336-aee1-488b-9720-b504ecba12e4": {"doc_hash": "35209317b23f0f0578878e312883f4119acfe103adfce75541870a51d4eccf61", "ref_doc_id": "1b9c6aa4-a68a-4ac6-bbb9-9e96652f7220"}, "e925a6c5-6fee-44ce-94a1-9220e2d74e33": {"doc_hash": "75bc400d6c7c8b88d1e2a318bed56575ccdadc8e9db07e6af9e04bcb2552d399", "ref_doc_id": "b98a40b3-82ad-4038-a98b-19f0f34ac2dd"}, "47df33fc-01b5-4192-86b4-d70a3b5f0f56": {"doc_hash": "cfe5c0ee3394e8b1552e7f178099579cc6e2f446b48619a90dce756b4afe6e3f", "ref_doc_id": "1622d2aa-d8ec-4196-8aad-7134a8b171b3"}, "cacca074-c80a-4e17-9b00-7222d8d735d4": {"doc_hash": "a0bf41f171de4c0718f15a44e0239f501d4400435945a8f4fcfe2524de14801a", "ref_doc_id": "cdee89b8-f130-4814-ae01-ea824d14b95a"}, "7e6abc97-6918-4537-a376-10a608523d0f": {"doc_hash": "fa9ceaba54d991e2b7cdec252301ba10f741926bcbfdbd05310b926f53ead4d7", "ref_doc_id": "48f73b8e-f4e2-4fe5-ab85-2e825998f993"}, "28a7e6c0-9919-4eca-9b6d-2d2a1064e6de": {"doc_hash": "134fbc391c7898e645dfe870221d79035eeab38095d6b265e10a7dc67af186ad", "ref_doc_id": "a75d7776-845b-40c8-b6b8-2e7d593bc106"}, "70077349-7b30-40db-962f-a3766e3c1090": {"doc_hash": "4306be0c16b1b2b34538afbeda8d7792866344d4f6be9112ea89778c7cdb4d2f", "ref_doc_id": "acc44452-cbf1-4dfa-9ac1-f18f2ecd46eb"}, "99dca7f9-aa20-41cc-abf9-dc9745127573": {"doc_hash": "aa7d5fb976d2b9131a16c2d0553dd5b4f09f9a43e207cd329fdfbd06ceba8fc2", "ref_doc_id": "580291f3-80f1-4360-9cde-871ae80da153"}, "7dd2a390-0f82-4acc-a535-7b34b5328be4": {"doc_hash": "f32310bb72e4a4e5eb0cd2e255f64e01240ea1c0f0eb49a5b9a32dedb7fce87c", "ref_doc_id": "b76d4b1b-f99d-4b89-b451-c8c0274fd778"}, "fb18cdee-97ec-41aa-aa65-6ce3a49e7708": {"doc_hash": "6d23fcd2d1476f5225db8411c13fe481a41d6b17a41f9b2d842debeaf1072225", "ref_doc_id": "c04b38ee-6fe4-4516-bd34-8c27b562117f"}, "2b7f13a6-2a2a-4444-996f-52146b173865": {"doc_hash": "28351157b79deec9b672e6deb7a4889a22117381611bb6ddb74f8f1981d9d3b8", "ref_doc_id": "5fd378f3-4450-42f4-b972-f1d94feb4b57"}, "eac53cdb-5a67-4790-a0bf-1b02771b8162": {"doc_hash": "02192f7ba0eafcdc0c5f60f9ddcde65e3ff1f685ef02d004f8951de0c22c4a6c", "ref_doc_id": "0e89180b-5bf2-485b-922e-a687f655d37c"}, "eea40d40-a74d-432d-be26-58ef54f56646": {"doc_hash": "ecb69364e8c53fec0761632cf54ed8e249d57a60de63f47ed326eeea1864e547", "ref_doc_id": "f6658450-7d62-44a4-832f-739f92745711"}, "9f17ef59-4cbe-4c26-a986-5825062dc368": {"doc_hash": "ad48fe7890f4a041f1c62853fe16891756a683b05f466a3e764a74312d1c7c88", "ref_doc_id": "c91658de-1b83-41a4-8398-706689d64a2c"}, "a370df99-7952-434c-b65d-187a19e143c2": {"doc_hash": "86c63c700729880a0795849be568939820d5ee4e581a59ede9d8ea5988e2e33e", "ref_doc_id": "de8a8188-6af7-416d-a0c6-7ae69514f84d"}, "bf1b29e3-9290-407a-92ec-375f0bd73491": {"doc_hash": "6dca155f8650cfe18e5aafb7133d5da31db917d03ad99df1ad396825390fe034", "ref_doc_id": "85a6115b-f3c9-41ef-ab14-a0af2c6149c3"}, "b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33": {"doc_hash": "d42a2ed9d7d07083d0ed72db8b144b040dea4aa9e6d5772ea3ca669e3a8d5ed9", "ref_doc_id": "25d87206-f60f-4a1e-80ab-a56cca0a46e1"}, "1319e110-8696-45e5-897d-1d9128fec55b": {"doc_hash": "f2a0cbb3b64cf33f201a87881f910f080176b70101a57dc4754fb0aa6d9758d9", "ref_doc_id": "9b0e6327-bc02-4b09-b4c5-dd83454d0f8d"}, "2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b": {"doc_hash": "7e89e86ba466d4737d6f9e125f61d93ff19f991e79e38f357668c6941739932e", "ref_doc_id": "2a709ea8-f6b7-4b59-b85f-27e6e70375bf"}, "fca4b6a6-b5d3-4a1f-b891-705633d526d5": {"doc_hash": "586a2bef45cf2fa8d2680830ce4e748e222bdbfef413b489ebb0b30e82eccb48", "ref_doc_id": "9441eecf-0fff-476a-9610-bb833ce63db0"}, "8c1210cc-3951-46fc-ac48-7193ae6a21be": {"doc_hash": "03a102c64aa1ae281ff370ad7581bdf353cb2ebb58c374106f33d2e649066796", "ref_doc_id": "3f8efd17-40a2-4868-923f-4e82c36e0e0e"}, "5a65a88e-9bb3-4aed-a561-61261edab9a7": {"doc_hash": "0b285765a291c2ce705c59d92410c97a96f99f1b3d91ecd66eaef6352428049d", "ref_doc_id": "133c03e7-43dd-4d9c-bef0-2572531fba06"}, "5083719b-8ccf-472c-b148-30b0e7ebb0ee": {"doc_hash": "6e2175dfe65e3680ef41fb8b3e82d752c62336f7bad00233d87612eaba28190b", "ref_doc_id": "25730df5-4a9f-4e26-b3ce-53de2d1bdc18"}, "8b97bf6c-250b-44dd-af6d-2681ccfd273c": {"doc_hash": "3f79cce68232eca905264f399363eec64bbeb120af0b1b0dd890ac605235ed2b", "ref_doc_id": "d03b855b-4277-4f62-aa29-43afce90108f"}, "86ec58d2-a878-4fb6-847c-52183df30813": {"doc_hash": "1154ec867c47497740e32066df0719387dba8f2b93e984779ba466b91fcbf707", "ref_doc_id": "43840cad-0a64-4f27-aba2-437b8975ca7c"}, "9509a148-202d-479c-9511-c97ef8a99b52": {"doc_hash": "77ef13fe3968d128de1fb20464776c7f77efec63f611cb25334fb513f670b4d5", "ref_doc_id": "d84ff050-4d37-48f6-b823-eb3fb94fa0b1"}, "18556d88-95fa-4a91-bbf7-8da16d14f392": {"doc_hash": "01179215f1c440a250a39b68321c431e867b71ad54a1bc7168d72fbe4ac90997", "ref_doc_id": "2d46502c-bd38-4ede-bbd4-495b47d7e12f"}, "47aa688c-6f1c-4a0e-9de0-4485bf538e08": {"doc_hash": "3a4ff0e67b99e90d586ad19f8f96c3d3d5b3f9257732e2eff22b7540394c4130", "ref_doc_id": "b792b014-1aed-4def-820e-4d7fb1e7bf73"}, "4d3820c5-7e33-49af-864a-7b2c5c14e401": {"doc_hash": "be2b4338952ba0d62208578b2455da15dc04271f52f223ee3b8fa9f80d85de51", "ref_doc_id": "485eb1ed-c4e1-4fff-88d5-c448fa221b02"}, "baefb61a-aba9-4abe-b8ee-cef19bf2aa25": {"doc_hash": "8087675a7720be7b010bde765732dff5a6daec3d010a881338ece44b95fe354a", "ref_doc_id": "85e15b9b-0d54-43d6-a9d7-72dde4ba8973"}, "6b55b4e9-5f75-41a3-9f50-eec1f032c46d": {"doc_hash": "b5b1fab56c0a80be84de69022cf5a2b123e65e4c36a3f3bce3db6f5f5881df75", "ref_doc_id": "eb0bb849-261e-41c7-a5e3-badef4ef092a"}, "7b125472-5885-4ebb-944f-c5a19aba1166": {"doc_hash": "b671f9501c71984218edaa719bc42dbc5f00a4a2cdab2acf29ce2697883dc955", "ref_doc_id": "c433aaf6-2a11-42c5-9c7f-997f12889758"}, "cce41510-02a2-4486-bdc5-4fbbc0951d19": {"doc_hash": "1d4a6b44327683f8cf55e85385d18a37d1dcb72ef959252ee90673e2000a3434", "ref_doc_id": "3e332211-1d1d-4c9c-a8f5-faad63b2e501"}, "8832ca76-2271-4f37-ad70-7a63811e1c25": {"doc_hash": "a84e01a0d8679f78aa679881f40d3660f07f1708bcb6c0c7eb30d7e93eed93c1", "ref_doc_id": "da18e335-d659-4135-9cd3-bd9fe827653d"}, "cc931d08-3748-4443-8e0e-8ab07bb925ab": {"doc_hash": "381962ab144069179a183ab6b60ce9ff689f473e467bdd1ec04f781f9f81d853", "ref_doc_id": "c8824fab-93d8-4884-8fa5-3df24309e156"}, "e1bdcb4e-13f6-4e52-8c73-542a6b514205": {"doc_hash": "8159c5217f492d3efb6fd8aa31bd98ebdd9c27a96e839a65bdca3b1c50d60fa0", "ref_doc_id": "029d12b7-5cc4-495f-839d-b29588430f4f"}, "a9530275-1a96-41e9-8bc4-cf788b8284b3": {"doc_hash": "352f36fcf9213d393bc05b1ff27f153611bf37be1bdeb61a06bac66ac80e4618", "ref_doc_id": "6ed4ebe8-b501-410c-8d93-b2397fa83b54"}, "faf279d8-2686-4296-a25f-6af0400aa624": {"doc_hash": "84d994a1176280488bdee6954bacdddd9e95e6650b29b6bf2a382f94c487b13b", "ref_doc_id": "02c9d4ae-af0b-42f2-8770-bd83ba881176"}, "60703d3a-f4a7-47be-806f-ea72b24ebcbe": {"doc_hash": "d1f32d2d0b915431c424aaa1bc4f306bfeb8d9c4f7034d9c06f95daa4afa48e2", "ref_doc_id": "1dc36a62-a0fd-4597-b805-65ab5ba50f16"}, "fea17699-389f-434e-b490-a3f7d0494313": {"doc_hash": "9ac361a7e01ed49ebbfd4a21c230a78208c50a5a18be6e6fe40fda2bf4778683", "ref_doc_id": "fd4a7439-c90c-4661-8e1d-c960fca46d4d"}, "d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48": {"doc_hash": "3dfee7cf048da9de5944502fe2ec67ed6dc820914d36418efed181eb0ac3b474", "ref_doc_id": "8cf06d78-6b5b-4407-8a76-90404007f1b2"}, "07375756-0465-40ae-98e0-f35453b84bde": {"doc_hash": "6f72d992aa363ee158ef45ef152c96bda7a56fec071b8dba7127bb6a8e2fcc84", "ref_doc_id": "1b67dfc9-60b6-45ab-87b4-76951db8acbd"}, "3389f99c-0365-483b-a06f-a3c538260a89": {"doc_hash": "a816a38e85c70439db06ef2ae225a02d6cce4ef9bdc31d39069cfa601787c9c1", "ref_doc_id": "91f22cf2-cdfc-4898-913b-a651348e6c2e"}, "3b75477f-3a36-40d4-852d-597a3e0fae56": {"doc_hash": "1761db2a6fd76a70a263705f8381ba68193ad8098326bc69553485bd0853d4a1", "ref_doc_id": "fa5484a3-0e67-4338-977f-dd61d4ca4075"}, "839b19a0-bc2d-41c6-8d36-257708d9e27b": {"doc_hash": "ee5a73be50634cf371ad61a7e90020c8d5cb6f1868cc8a57ad46ecf4601b18c9", "ref_doc_id": "a5cc8f74-2501-41a8-8134-a625430e23ed"}, "efc65296-1b96-4be3-8697-81f8b403aebb": {"doc_hash": "71bb492e16c82bdbdef5643322ed0d3772622e18f725c0875f52da9cee1f61ed", "ref_doc_id": "9441cb22-ee76-431a-bd30-76bba5fe3fef"}, "5b5398d9-9738-4b1d-a914-f99dbcd4e49e": {"doc_hash": "74c75e5f51ca9a338e84da71d8b539f247adf0dd171554188a613c6bf207106a", "ref_doc_id": "a1f55f21-4657-4da8-89a2-7dd32fb42d5c"}, "061dba23-dc9f-4d09-81d7-019410a950d0": {"doc_hash": "4d85e6081f24fb8bb412e1f0a75a7151b30b013bcc11df5b9cb6671982e60649", "ref_doc_id": "af056eb7-5050-4b2e-8672-d832e080873d"}, "dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a": {"doc_hash": "db66f1a1ba1385360ca9f1e7b24a102e43da9a799a8d2736d49fe0e6d54fbc55", "ref_doc_id": "4365a805-929b-4e96-be61-ef73018d003d"}, "b163c55b-a88d-4ef3-aa97-254e0e513baa": {"doc_hash": "66fde63b285b11734945edf5e9ebdb578689f230a2f005a61def93569797134d", "ref_doc_id": "660a6b27-868b-4273-a28e-87a1fd7a150f"}, "ddf98014-b0db-4090-ac63-7bf9f169fe0e": {"doc_hash": "cf9f44b9d70cd07b25e62f544a1d2b6e24bc8b0ddade7b24f3bb288906b0b49b", "ref_doc_id": "9be281f8-6084-4da3-9c33-f7988e3533cc"}, "53cab28e-abc6-4a4f-b645-553a7aed6321": {"doc_hash": "d4532d8a70b0bc3ea5bcdadee1ec838dbe7b861a03c235472111e7f7eaf06dd3", "ref_doc_id": "0f97b675-c1b8-4754-a09f-7c385ff396d5"}, "904d9f8e-c859-4f19-ba91-a4270716d33c": {"doc_hash": "67d92a7e1ed6675d4cc6f59742c5c1cedec8b930439628d0ef25e9ee15d29938", "ref_doc_id": "1a666200-77e3-4b0d-af82-e260b7c311a6"}, "9a835099-9e5f-426e-90de-0c966952599e": {"doc_hash": "2c6a25b6bbb80658831065f8ae6ee8f39d56ce18643c10d047b3a09349f2771e", "ref_doc_id": "9ee4da73-0299-42c4-9a33-a2daff840a34"}, "f644fffa-88af-4eb4-8509-8a54a4bfb4d8": {"doc_hash": "e44919f88ace1e06760de909471cf03b4d9ab1c23526ada5db9a3f022343de8e", "ref_doc_id": "2b9457e7-20f3-436a-9a9e-2441e55c245c"}, "83f6f991-db0f-4527-86cc-65e7fb683baf": {"doc_hash": "f3be0b7a83ef6f9c746fd2831bc53f0fa0052f47efa467c3318fa88a405df26d", "ref_doc_id": "5be32343-a17a-4734-ae67-f366d99ca1ac"}, "db3e303c-5d55-418c-99b9-5050758dc25b": {"doc_hash": "8accfe28c559dba20fffe2ac344e76827c058881edc046a0d65b2974838b751e", "ref_doc_id": "10c210d2-a93b-4461-9bbc-ec88f5e78dba"}, "a13a9b17-3d16-4adc-86db-71408860e865": {"doc_hash": "1b1626241a09a49e8326f3a1baa6b7fa974dbe73244d1343ebaa0fad4993f938", "ref_doc_id": "0b146157-cb0d-4c1d-a18e-e4f7d9a1d281"}, "b170cd61-17f0-4677-ae53-65ae00359b85": {"doc_hash": "c90c2b4c343808de767a7c2974e0184db77300fa771e5cc10db3f2f7d3a87cbc", "ref_doc_id": "850320d2-bec2-4c39-b863-462d24f86926"}, "9d42a912-e6f9-4182-842a-ea041436f194": {"doc_hash": "9c4109d4cfebf4414e7397c782625449ec39513c5e9bea8de7a8c68d9ff1b1c1", "ref_doc_id": "1cbad5d0-eb86-485d-8df4-08e9bd8189fb"}, "248ebe53-5528-454a-bc63-c127decd63b6": {"doc_hash": "daa0b1268ea434246e0045d279bfaf4f26adc8f0a6a3be9f98ad9e1c0785f14c", "ref_doc_id": "9ce3b0c7-0884-4061-b62d-0a36504d4db7"}, "7a929d1e-9189-4504-84e9-a8dbb3531945": {"doc_hash": "11d18527891781d6cd72d928e9b037ab1f9ebc19db0f7210436ee37841892474", "ref_doc_id": "e6b8895f-f81c-43d5-b992-043e95f84ce3"}, "24ef898d-2f22-4fee-8b59-79465a7cf831": {"doc_hash": "99a229fa27be725d3296a6bbf022df478e01c13ff74ec0501b08d9518d851b95", "ref_doc_id": "83c7913f-5bae-44b7-af55-50698092edbb"}, "4c04df0f-4719-4d6c-937b-54b36e0557e8": {"doc_hash": "f5ddad80085807460349daa0e6d422068cfc951daf742ed8f02694f1b08dc19d", "ref_doc_id": "f893b623-dd08-45bb-8f3c-9fb3c0b3ee85"}, "94cc32e7-6487-4a54-8642-c1c22002cfba": {"doc_hash": "91613bdc4b7eefed032098d0a6245cf7b3e153b7683bae358d196bc0c536d6f6", "ref_doc_id": "3fc03d3e-4786-4798-9dcc-73c172831b48"}, "057fbba6-1944-45bc-8f9c-8541b5cd991a": {"doc_hash": "5fd31cbe8549b380aeb2cca91d3760c740994397df13d3bdf7176816bb4e7ca3", "ref_doc_id": "2ba397eb-6d39-4584-bb2b-8b427da3d25a"}, "42624bdd-7325-4abe-aa57-b6703a8b029d": {"doc_hash": "167b56bcc602612b6f3e6f6b16e6310ede5f052f6f15d9165cec41a45ab0ccd6", "ref_doc_id": "1d90a201-1189-42d3-a7b4-3e1f650d3eb9"}, "5b380bae-b186-466e-b888-af23effe7eb7": {"doc_hash": "f16178dac196f6267c312694f2d300d10c47147945a117ea00942744c6fb6abb", "ref_doc_id": "60a8530b-d0e5-47d6-b516-1f5d4eb663e3"}, "f2a094f6-2db9-48ef-a2c9-b2e0470a52ce": {"doc_hash": "1f1a06c21dce1b235a62ffe4e6aceafef62cbb5b9748ea43b8ab628e6ce17a9e", "ref_doc_id": "7b7d3550-751d-465e-bbbd-ab277d5acfc6"}, "4ccd9869-9c12-46a9-8c06-789690d8dd3c": {"doc_hash": "e28a371969b7357efb154673a72e54dcd7f2a0a13e17fdc59a77ff81be775ea8", "ref_doc_id": "74f13071-46ec-4e1b-895e-b82ac56e12f0"}, "335f8606-6a7d-4339-abe5-b112a96814e1": {"doc_hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "ref_doc_id": "103ca0cf-524d-4d7d-9e57-9fc4188ffdc8"}, "5fb69d8f-a0dc-4257-819e-037e68e0115a": {"doc_hash": "400d641f54ee6deebb3c413724325cd844da2d14c5840cb34740d126a9796250", "ref_doc_id": "64ec8d8a-b3dd-41c1-b020-cae7f01418ce"}, "658dd5b6-71cd-45d2-b48a-4d9c018cd803": {"doc_hash": "7435c152c38ce491d73cee4aef5f694009c33ec5d7454830c3d051774f665057", "ref_doc_id": "e5ecae0c-89ab-4a2d-bacd-6645b8a3f94a"}, "c06a1e04-1059-468d-8743-6955db84422f": {"doc_hash": "6967c1c8265fe88de9b34a09ef15dd73135bff429c68416a8a1a1933f224fb76", "ref_doc_id": "0aee6b76-55b1-4c36-b5f6-7caea3a33f82"}, "32b87b6c-7e2f-4e13-a5a8-4079677eac8e": {"doc_hash": "47a8139f1ffb01377af8c98cf233e04cccdefda20ce4aa2ab1971db9854884da", "ref_doc_id": "8625af05-ba7d-4238-8336-1148e0d1c3ed"}, "e488d82e-0886-4ddc-a7da-56caca7b4e1b": {"doc_hash": "beeeb22dbd83d903deafa023fae49eed297545f61dd67c31a3addecdac3e3671", "ref_doc_id": "432a4166-febb-40bf-afd0-544601c658eb"}, "3ab9f865-dc30-4226-b4f8-88aa5a199f7f": {"doc_hash": "7cc8581bc79bccad2e1417f82f39ff900bc4af53e5f6179eebec15878d3b1695", "ref_doc_id": "162c1f18-91e2-46cb-9bf0-e0feb5a90606"}, "f109dd60-c377-42c7-b3a0-0e7a861cd542": {"doc_hash": "4f015c9633a957f9c20f8e4750df0e6b6029ac0ce3814c4702ce9dde050d88d2", "ref_doc_id": "4ec5bcf6-81b8-4bd0-8094-cdc47606b1f3"}, "7c6366f4-651d-4a94-adf4-de81d867cb62": {"doc_hash": "4453344bb785c7dd88c0f43f041ac02ff2ef9144ae36ed586443a53c91d50937", "ref_doc_id": "9787d327-29e9-4f5b-aeca-922a1f395ce6"}, "2bfcc599-d22f-42e5-a1a7-5ecd6023b8de": {"doc_hash": "d626dcc1030ee9c3234efba10d45d8acce4436576f063c5bae9984d254008d2f", "ref_doc_id": "1cd869a3-c36f-44a3-9e98-039fd23a5478"}, "9ba509ab-2617-45d2-b7d9-f1e1b576d81f": {"doc_hash": "f8263ebd54c3de08be91b4194cf665baf49b3d625f1b5ec858e75002fdfa2fca", "ref_doc_id": "696d891e-3a50-45fd-bad2-8c0628abacd6"}, "22dc7c04-870e-4073-a733-bacbdca3e116": {"doc_hash": "353217db480e1c8dcbdbf874513f5ab9bde25d86fadd4483af4211d426130fbe", "ref_doc_id": "bf5fe259-2d20-4b96-bb12-eb80b24e0e72"}, "91a3aec0-ea14-4273-8d29-b49b98fe36a7": {"doc_hash": "9d85731e5d0cee95794ffdfa63608cb8fe43ebfae4897c568b2219c7622e7ffa", "ref_doc_id": "ff290db7-e39c-4fe1-9168-df0a1a3255a7"}, "835717d3-4612-498a-84e9-9806dac4886c": {"doc_hash": "deea5be6e32382bd32766317d823ccfa796f128e8a97ef5dcac8ab5e41bc7238", "ref_doc_id": "00670afc-a33a-46eb-b092-89a6c5fe2dd8"}, "11b27806-3fa5-41ac-97da-7d7de9939978": {"doc_hash": "d4abc36adeb3dca92310bdb325489e6913d086146b23c04087c4e2ee654763b4", "ref_doc_id": "ab8d4606-52d0-446a-a9dd-8968762353f5"}, "19648df2-a009-4802-a8d8-00467e629ac1": {"doc_hash": "138b046659b4feca9e91936d0556bc42328ed0e8fca582399b8c947dfe8e459c", "ref_doc_id": "6d71874b-4478-473e-b573-8c5336f6b753"}, "cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6": {"doc_hash": "84b455c71a334d719ae7ec9263ad23314126b7dd56670514dc4a0675afaa3626", "ref_doc_id": "3b4cf9e0-499d-4ebb-9d92-e77f622055b5"}, "b4c839dc-2095-49f7-bdc5-2a7bb90132b2": {"doc_hash": "f92c1aba93f2aaafac4f64e24d29046f5f5c3dfb1a48bf4080f5aa415622570a", "ref_doc_id": "6316e4c0-e7a0-4510-b782-a9bc0d72a70d"}, "6557abc6-0695-4f65-80f3-c797838960f7": {"doc_hash": "f043174652a85b02bb05385ed6d8f1cf507b523997d53ae024201a8976891fad", "ref_doc_id": "a01d6f78-3cd3-4006-a49b-2f30f5781d3a"}, "5d95f130-eaab-45b7-a90a-02dfac0f8de7": {"doc_hash": "aefbc7b96ee6898206221e704dd9e072ce2bbac4a9b7c8592e2e88a48ec47519", "ref_doc_id": "e2ceb6c1-6640-415e-8f4e-6520f2410874"}, "60576e17-0992-4f71-89b5-7035a24edd55": {"doc_hash": "d0bbaca1123ae9d1a747f30ebe4e936277eddd2cba75337fd312bed14aa9b052", "ref_doc_id": "73aacf01-3fa5-4745-9881-b7eeb9ea617b"}, "06995add-f706-428a-86f7-af70ad6c9ee4": {"doc_hash": "111b331cb32fc57fdc8145f883c60ddeae650b8ad89a9f4202af901b46973961", "ref_doc_id": "a9b92808-d77e-4330-ac83-bdd60658a246"}, "c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66": {"doc_hash": "b86ba1ec56a868e7bb6fad2619695b3484b3fbf45915b22e9598e9704612b685", "ref_doc_id": "8b8ab30d-82dd-424b-819a-62eb336fdb79"}, "477cccc2-edfc-4fd4-8b79-5f0b39aba0c7": {"doc_hash": "fb1e5e84acd7d1aaf2b1a9d0c21fcaffe8d213779b315357b177faee5c259608", "ref_doc_id": "4736c0b7-775c-44b0-b392-cc34dab103b1"}, "bc5bb9a2-5229-4d17-a565-d1d4e0dce577": {"doc_hash": "c2f75b1313b32c4d9d5754bd07910ac8f75689c4e21398986ddafc22a984a1b1", "ref_doc_id": "81261962-4876-4f56-9256-8440f51fd913"}, "abfb14bf-f029-45bc-8d1e-07a8d6b71788": {"doc_hash": "ff73ec67090e472f33ccece4430650fadfa978607ddae4ce5027e8253ed4dfaa", "ref_doc_id": "aca40966-a930-49d8-939c-08675dda4fa2"}, "0d7420d4-ff00-4816-bf2b-135395eb6956": {"doc_hash": "e0d03b4731322fd9aacaad4b61b645f44435ff9d4646eb28f0b4db9479bd71ab", "ref_doc_id": "c4ba9a01-5e2b-49c4-8488-0e5288cfbb9c"}, "e44447ba-f75b-4716-a958-f88577b5382c": {"doc_hash": "966e58009363c8aa0ba4fd9edf0d67a6b24eaf83af4508c84957c493ee894534", "ref_doc_id": "a1f26be7-dddb-413d-bf22-27ebf2ed0263"}, "ef5ba1a9-21d3-45c7-9400-77d1705d5d20": {"doc_hash": "d014cb3d8c31a2aa38da2cb555f181bc35543ca376a00cf74bef1d9424879e43", "ref_doc_id": "a0de3acc-557f-4784-85ed-a2c9132805a9"}, "76fc8aae-23e0-48ff-9fa2-5e964f020b1a": {"doc_hash": "2c5444081082e52e3e8c44ed199d0ad83489f35c639a82b44f4bd04c77656d8b", "ref_doc_id": "72c5d73f-d69c-4103-9885-14a3895ab160"}, "93066231-17f1-4e28-9023-b261c88536e7": {"doc_hash": "78ebd3c3f57d783bfb1c2f3fb99916b4340e1a227581835a22ca47464fa69512", "ref_doc_id": "9e51b533-d3cc-4fca-ba3f-c48e8621876a"}, "40efea49-c5a1-4583-8d2b-c00ba1e64c73": {"doc_hash": "f9b2f225e19cb34ad7287f5b4716894a762d172dd355e0381b9b785d9e34e971", "ref_doc_id": "e60aa1ef-cfc4-47aa-a167-a940dfdf05dd"}, "1e6505bf-9dc0-425e-8a06-6dce77f44e39": {"doc_hash": "650cae2a86cfd6ec84829d574725588cfb0442ad902f57635117dbf84cedca49", "ref_doc_id": "91ad4775-630f-4bf4-a29a-438386c2e4cf"}, "0fb209a3-4117-4e5a-8cf8-23d4392cbd1c": {"doc_hash": "b736b1af157ad691c63626c4a8e959a734410e3858a8c083ddd7f2d6c95c183a", "ref_doc_id": "d1e8f7dc-84a8-4537-9882-94ab69da0b61"}, "b1a42015-ec8f-4a62-a09b-afa6034c806e": {"doc_hash": "6178bf74396080fc14cf5cf16f0c4eb5e912623259eba22838a620c0ca82a9c3", "ref_doc_id": "e47550d1-eefc-4b62-972d-b7a2d9e42ec9"}, "823a2eef-4a23-489d-be92-cac626389b5f": {"doc_hash": "98bc42325e4dcec50ed43a2a8137e010653e5539fde41d0b56eb0beea1980c4e", "ref_doc_id": "953ad1ff-b9df-43d2-bda8-8026569316e4"}, "750f1531-1497-46a9-9f8d-45b7a5e46811": {"doc_hash": "c8c5452dbef493a7365a1afe2651cb7cc1684b5e45ed313edad5dd5ab8f16ced", "ref_doc_id": "1fa3a76f-99d3-43de-badf-a71848c796b6"}, "1472646f-f558-4578-aeeb-84624fc75ef3": {"doc_hash": "df3a0b308449197c6c93f3009c70676fdf7ba1aa202189a3d67538dac8cef695", "ref_doc_id": "e781b816-fe17-40ca-b4ab-f1d9f1a0f730"}, "1e855793-ef00-4066-962f-b45a93222cfa": {"doc_hash": "4f0fc5f11c5975823db4fdf3371466d4c14ed95c9d5a6bcbe9de8837f435686a", "ref_doc_id": "526e1e31-5bf9-4766-bc84-831fc4c1d641"}, "4516948f-dfa6-4ef6-9058-01af21565bdf": {"doc_hash": "94884ad6d84a0cd147ee538bfcc7c4991f80241ea17c8cc2b9ebf4e457ccee65", "ref_doc_id": "fb5d5025-6bf6-46e8-affd-c57b8546184a"}, "dd7807d5-56f3-4e73-877b-55e5bb25e8fd": {"doc_hash": "66aa6cff4afd675937b716a9f40ddc479b10478eb878c41e1d6c826f8c548351", "ref_doc_id": "dfa658a0-e524-44e7-8945-6bf847a0ecc8"}, "a4b59647-922a-454d-9490-878bf772b655": {"doc_hash": "bc0167c923dfef355f6f90de5c936c68c5c294cd73ff430a67311a61a69ffa13", "ref_doc_id": "f930e826-b6fb-4235-b88f-49a3b3ad3906"}, "dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8": {"doc_hash": "4c81c1042f41119319c69a6e0b24e0b93ef45981d5d6bf6491cfa6a4fc056586", "ref_doc_id": "5873b544-fbc9-4c89-b6e0-705cf4b16d4e"}, "9c8b1588-0d6e-4904-b384-2e839add97da": {"doc_hash": "15b678c70378ae2a7896c51bef043b52fe97e638774fe5f3a16e6f6fb523a8bc", "ref_doc_id": "da4b84ef-0454-4778-9bcf-6ee12711f4ae"}, "b5406aee-3175-4a6f-b42a-652167a368b3": {"doc_hash": "2d212ae9566c4066d41ca6d8b0a86d9030e29c736acc1f92016280ddbe92ac6d", "ref_doc_id": "857cd767-db79-458e-a2f0-71f9a12cdd12"}, "6c360862-8411-4abf-ad32-bba564c1aa56": {"doc_hash": "953326295f95b3ed474625d28acca031a3cc8485ddd78d16aeeb6510c10a6f1e", "ref_doc_id": "a25ea45f-7852-4cb1-a982-3996ac6e392e"}, "7f1528fe-e423-4b1c-a7b9-66e96029cdc4": {"doc_hash": "a834efb6b428d0156b79922bb47c5ff72ee8d3d1c1caffd83dc98c58018caa30", "ref_doc_id": "98b5f93f-ce75-415c-b091-3b7df5654b40"}, "7616eea7-d3c7-45c8-a126-1ff77b13bb69": {"doc_hash": "4169d47896fcb99fa49dd8d631cd3fd41ccb644525ce9700134f96427ad02fda", "ref_doc_id": "b8ab729e-724c-4ae8-955a-33ea8fa63812"}, "7e6d6c03-44c5-4603-9763-c19cf5e50b46": {"doc_hash": "a9c8c64402eca25127ec674e8921ad87e0f1406412daf6dbf14a265b9d403f91", "ref_doc_id": "5e0a6e2b-be78-4dc2-bf12-7a5bca9e8917"}, "c0970580-0592-4662-8de5-b94d74411397": {"doc_hash": "a96721c07630d94fb88296b4d9c7b3e09d042daa22a60ec0596c3d956ceebb53", "ref_doc_id": "66d2f18f-cad3-4868-8db8-92ca13194f94"}, "ce4ec69b-4421-4a45-883e-674c40c44e16": {"doc_hash": "7fc910a2048ee15abf13a00300d51b4bb6aaed2902fdb00c374a1104e13fa5ab", "ref_doc_id": "81379386-4742-4204-9f24-89dc841b8c26"}, "b5c9538b-597e-448a-ad3f-88b68c4223d9": {"doc_hash": "ff8c3514e9cf5654c5f32c6235a8446a80f17c9d14ed84fd24c19a82b8097e4e", "ref_doc_id": "97a27ff5-4560-46ad-9ed1-6fc6698b85d6"}, "b2f673f0-7013-47c9-bd40-6c405357dfc3": {"doc_hash": "45a1654e3d8108f5e184cb1ecdebb720138c3fd930e0ab10bacbf6ed65dfa991", "ref_doc_id": "3573b733-5ca5-4aeb-8646-75023c3a4121"}, "db6db6b5-2f7e-4b76-8e7c-b93a472025cd": {"doc_hash": "acbbb3c557129266e7a43c18cef998e253f2d548fb96129caf10e2fee7d2cede", "ref_doc_id": "0d0da4f1-7d9c-4a2d-a3c3-7b48693fcbf3"}, "d4086658-b201-430e-9bda-782dea18d280": {"doc_hash": "234c2652a9ed3c5c25ad7bac28258911e10d7eb7f6aea54bdd0cca850ed6bb70", "ref_doc_id": "a0d977e5-ba7f-4a23-a37f-00a20cacc08c"}, "8ea36535-4835-405b-9b20-30001418354d": {"doc_hash": "d4f2fae3722700bd9003ab27b3dceb268fbd08bca0182fd2beaceb77ab521e8b", "ref_doc_id": "135c7b44-4c46-46f1-bc6b-819fe55aaf13"}, "84eaad8d-6026-4fb9-a1cf-c721f808cd65": {"doc_hash": "7d90bcd3c68cf4e07edc61ab85bb4b1a7074dfad84d72a56d76e729a7460efaf", "ref_doc_id": "f1cf6713-c09a-4335-a7e2-f32a2389c5d8"}, "7a31615d-4b04-400c-b7ec-a47e16e3fea8": {"doc_hash": "b86ba6da758f363208196f54cf33a677332d8218373453a7cd9fa6bb90c172c8", "ref_doc_id": "3d567488-7781-4a65-8655-4084d989545a"}, "6426e555-3111-4860-9669-0f284ff11144": {"doc_hash": "98ecedca261ab83c40afd2ce974b37a43fa71a3edc19d58b5d25b75461adf52f", "ref_doc_id": "6c8c47cf-c37a-476c-b15e-68478a086002"}, "0f4137df-8ff7-4008-b496-a429d09ba7a4": {"doc_hash": "ce4fa5c5f07cca274f2db50319bd93d7e35c3df2799e431dd6f018b00ed37390", "ref_doc_id": "261f962f-1a5f-48e5-b108-e43bc8819395"}, "49de2c7b-f56e-49a4-a6e8-2c0fd595082c": {"doc_hash": "c9fa7120c1f7993c871aac5a1addf2e12e38082eccb16cfcf162eb95177204c9", "ref_doc_id": "78fedbab-49ec-44de-844d-6a9800341f1e"}, "f64fdf59-4dc0-4f6e-829a-a1ad3208a912": {"doc_hash": "f15650d4347b750ac24acbee0ce47230250fd275bae2871c1c89c471e407792d", "ref_doc_id": "572170b8-9d69-4070-8601-86b35ee2e253"}, "bc345544-2ef6-42c7-886f-4a6e8efdb9cc": {"doc_hash": "adf2fec560ec9c8065acda6e07bab79bac7fdad6bc9870517859cb2ec89252fb", "ref_doc_id": "38a5ad20-d2b6-46bf-9124-b2236b2e0519"}, "d9d5de35-e229-4f64-88cb-0ee5745925d5": {"doc_hash": "85d99ca4163c43eb36060f0b97c025b11a44e9488336006e81a8b630a488484c", "ref_doc_id": "7a2848aa-7555-4d2f-8e49-486569507f7e"}, "d24f48fd-0dfc-4d98-ab84-dc4511adaf6b": {"doc_hash": "d902081478c5eb64656dc10233e773a9564396e3e9409eae2c4bfcee31ffa309", "ref_doc_id": "1b96c0c2-fba4-4fa3-9e48-9baaa3d3e08c"}, "3016aa9d-cb95-44cb-9b48-74fcd2993245": {"doc_hash": "88a7faaa95dbfd3f70691d09af3364c7be4e505fe32ad6bc47abf89a20b41626", "ref_doc_id": "e34a1ab8-0748-43ad-9fa3-112054b21bc1"}, "32e34e7d-e3e1-467f-b776-7b54c245aada": {"doc_hash": "ddf94c0245e329d329ccd1d58a2d2c8541c9e76d1a0cfd54ec2fd66b34021239", "ref_doc_id": "539f960b-2dc5-4115-b7f2-902d1ddd0afa"}, "7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a": {"doc_hash": "1ba6469529cddeacbd9c2d7ef80eaf9299ac62bc3eb13881e49f9b97990b5038", "ref_doc_id": "ccc8a85f-cf9d-4ba8-a8cf-41345b8614b6"}, "27464a6f-2093-423f-b575-52650967b7cb": {"doc_hash": "4d7e94d0eccf819dbe6298a1342c2c4e79c050dcfc53ba29d9ace7e4c3ed7e66", "ref_doc_id": "b2039709-6308-4b21-89ee-fa2e9b782698"}, "e3770e80-456a-4e40-b1bc-a48086cb4866": {"doc_hash": "d3432fa09c5ac398c99313e6d77bab2914c5d4d71d8a568bacd3818daf984065", "ref_doc_id": "63d9dbf9-4a44-4c9a-8bde-30b93df4878f"}, "ef88011c-40c5-4716-9330-92a364fa550a": {"doc_hash": "91bd866477c870957fe10e5ee68e4202ab556b45557397b06b24ee6129c8ad4a", "ref_doc_id": "baeee50a-0507-49c6-ad0a-3114637f4d0f"}, "3e76bb23-2277-4907-8329-210781458d45": {"doc_hash": "8306a76d884e5a3244c8f03d4206e0abdc78f9fb5d8bf68987608cbf7cd500fa", "ref_doc_id": "d61b81da-6f87-4bd8-a2c5-9044e1173fdf"}, "1757036b-5a1d-416e-9ac3-62b79b0c0c0f": {"doc_hash": "2ab7b7b64de251d19f19a992152af4e30a86b43687690ce42fffe2f72d3622f3", "ref_doc_id": "c1bbbd33-2ab6-41f5-ab5b-ed077c10c84e"}, "877450de-1735-4d1b-9a23-51bb72de7e36": {"doc_hash": "b6b7555bb216ffb1fdd74004048bd99a04532bf5eb71f0aae3904f27c4126a33", "ref_doc_id": "3c86ac1c-2a3d-43d6-95cf-a4d87a04e80d"}, "d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0": {"doc_hash": "5bfe650d737306e9597c8663a80d1e39a6122ed68e0b2dda41ab6ab072443ad2", "ref_doc_id": "9409da37-43c3-4fda-b8ad-776c90ae586f"}, "3cc7c075-6091-454b-a287-c21b70536c7e": {"doc_hash": "81d1ebc57c4a4c599318a8e0bdc1a7b80f5fa5d5db4612dc013dd181786a4c15", "ref_doc_id": "97fbaee8-78de-4152-8dd8-52c4c1a5b449"}, "026668d9-c202-4ec6-bc5c-13cbc847792c": {"doc_hash": "f2bbcc20c458b3dc6e02ce92b4fac7c8b38032fcee38b0f028bcde0312798ec3", "ref_doc_id": "6be10d8b-c23c-4cc6-a317-6f54b93dd3ae"}, "04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9": {"doc_hash": "d0a9608a3a65a60888a3bf68bc8f645b2320f705fe92e0452b63fc57b11309c2", "ref_doc_id": "f9c3ac4b-a94f-417b-9284-4a48b19ebd51"}, "ac42879a-1f8b-49c9-b0c7-0e6ec266497c": {"doc_hash": "fc946e152f4b419fb4cfc086a34ab79f0f9add3b3cd36c1e5878b351b0703304", "ref_doc_id": "f8fdf1ce-5174-4af5-bf52-b1ab9806a465"}, "fb903d6d-62e8-4284-ba92-4cd3c1341f9c": {"doc_hash": "db7b6876064ab91155d2a173cfa9165052a12e943c205a874a6890c68875266a", "ref_doc_id": "d088d6f2-2cf4-41c6-9b2b-d2ae911d2b04"}, "22fe33ab-7058-43cc-83ab-1a2585f4271b": {"doc_hash": "a576986632d61d2e9034c0cb11cbf35e01c7a527efa8f971e60836c3950f61b9", "ref_doc_id": "aa70a2b1-40a8-4e41-a82f-327a5ebe1ff3"}, "ae685ddc-2bac-49e8-be0a-1086be2fc1a6": {"doc_hash": "47170e0ebaf010755fdd65ad6214279ed487a21133c5fd59bdab2e52919502ad", "ref_doc_id": "096c41c3-d450-409b-8b2d-964a1467248b"}, "e1aef8f9-af2a-405d-90fe-d61b0a42d31d": {"doc_hash": "94fd4c0a54a9bfcfc3d0225b8c58c29040be5a4675028f73f8d8c96ce7c3c908", "ref_doc_id": "67b19a1b-c8c3-424d-93ab-31b6b8fb34d1"}, "062e369d-3b85-4ae7-8508-58af3366fbb9": {"doc_hash": "ef2b8670e4c3af0f16296c8feea634e2a3810aab3f97b4b1c9043a26560b3ef6", "ref_doc_id": "5ef08820-e57f-4a08-9e23-f21d475e8b06"}, "9b49c941-425d-46b7-8244-525834f823c0": {"doc_hash": "69f491bd08147b3864c87556ccba7b36fc5054d34f40faac84b9809f39e65d52", "ref_doc_id": "d54bf77f-bc0e-4f8c-acdf-ca27bb9fc1c4"}, "65b44b09-e787-4aa1-ac17-59a5348d6332": {"doc_hash": "a55ab711d3e2b8c039ac4bd551844f18fab9d1df2c6e2df918468fb14936d359", "ref_doc_id": "eb720173-1797-4134-9e1a-b61273d67a76"}, "a96a19f5-2b87-4a6a-8518-33a96d21ed45": {"doc_hash": "6d8ca3df47418c918cc7d1267de79c5f6aae9b491388e0f880292007ac36d5b7", "ref_doc_id": "540ada36-0615-4654-91f2-473b791ee70f"}, "0297d30b-1471-4148-9834-2fcf40ea4b5b": {"doc_hash": "406249e284f981791f859c00ef9edfd472c49e572a3d66c44494624b6dd67e0b", "ref_doc_id": "99871a37-cdf5-4ce2-be73-85753a730815"}, "dfcbd6b9-b330-4184-a803-79766aaaa07a": {"doc_hash": "86c5caaaf556ddf3facc3ba18ce79dc4b3018df3c2f0f37d361c4bdf3e1401b3", "ref_doc_id": "816e0a23-35a5-4bd3-bf5f-dac15d3b8d73"}, "963f2f1d-1935-4ced-9745-65220ffc82ac": {"doc_hash": "0396d867945f612b0a70ce6516352f568241229db20e0e289bb5159d29735a31", "ref_doc_id": "f92c4b4a-52e4-4c53-b3f0-795877aac848"}, "fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c": {"doc_hash": "b606dd25b676a02f5b0af0eff9b83f13657fd014537448e3474e10d43b2c75cc", "ref_doc_id": "4a663d69-0a3e-4271-abcb-59e8fa53d34b"}, "bbfc1918-415d-403a-96ea-89c519e1ee08": {"doc_hash": "710dfd8055682bbf4550dc91ad9a8573f69a0d06844178c540f2d0be5338efef", "ref_doc_id": "9368d87d-3b17-47a6-9af2-f4578aac44b6"}, "6fcccc78-41ff-4169-bbcd-3e5c87169108": {"doc_hash": "35deb840d98e88cabb2ef32450f98da3fe5a07490d6466c54ef1cebd97a26775", "ref_doc_id": "7f334c45-5acb-457b-bb48-4f25b33ccaba"}, "4c28411b-3f04-4bc2-9d54-1e4434ddf390": {"doc_hash": "1c4f744eea15a07f7dcb29d5b2e24289097648a269f0313f754ad13525fc418f", "ref_doc_id": "1cb5572d-6ec9-49fe-9816-1b8a78ed9287"}, "714f0bb8-946a-4700-a768-b6e66349905d": {"doc_hash": "ba513530706b0f01831ab0818c2dab799d619453deea8a5cc9fc6619e5c6eb76", "ref_doc_id": "e4da60c1-cb71-42fb-a47e-b774f1d23042"}, "237457ed-c8d5-411b-816d-04df31152659": {"doc_hash": "2a58b2a6cd9b09173a4592223b8ff8d14dc8cb206bac6e610f30b980d20c43da", "ref_doc_id": "afb6a292-9afb-4bb3-880e-2d45fb4ce775"}, "5fe4b2ed-8bf3-49f5-b06c-879da52552e0": {"doc_hash": "8f4baf71bc0c31e28746421db885a934bc128dcb553cd82b561becb9d2e8278d", "ref_doc_id": "c4582ccd-b280-4392-87c0-d3e013bc43d6"}, "33a89641-02f1-4fd2-801d-be113af8cb69": {"doc_hash": "ece7ee5a1832cf481b3e7657b04393edbc27303800985225e8a41f5ef77168b1", "ref_doc_id": "b4a28b23-72db-4707-be7f-78b02ef81e9b"}, "f7e3f098-e61d-4df8-9fe0-57be1d99fa8a": {"doc_hash": "f843fe9da699ddfbf7bbe262f16e267fba0b8a5d3ada8a8a76e35bdd043521a4", "ref_doc_id": "457f05e6-5ecf-40fa-aa8c-e20996e560e5"}, "e1be0ef4-c2ea-4785-a57a-00b70f7867b4": {"doc_hash": "02eb923838b1e39d8f589857d570b611fec2e3bb9541d54dacba92e58f1c17f2", "ref_doc_id": "9701fdcb-4e4f-4365-b387-71d3e74ac6ed"}, "9863306e-e535-4cc7-8b94-cc81bb6e1745": {"doc_hash": "a8b49242bf98ddb5a854454556cf74768604d6379d50a4aa1185bbc085a1bbbd", "ref_doc_id": "b53159ae-78ae-4403-b21b-01a9bafea4bb"}, "77bec705-312d-4772-bff9-f2deef76e9c5": {"doc_hash": "3dc54ceaa2b35d7c7b27e2c8314a8113dc8cea472f1bb12977a1492abe180d0e", "ref_doc_id": "4eaea1e3-d59a-4696-ad2e-531ab501cf36"}, "bbf7bc2a-6775-44f3-b071-c2c14931ee0f": {"doc_hash": "b35f9e08072b015c5cb5b744e486445ba9f2ac38a1ca84d600a5ac8446bd6b1d", "ref_doc_id": "7a05eafc-51c7-4e34-9ca8-2cb13259e711"}, "d425ca9f-5c01-41a9-bd23-9933679bb384": {"doc_hash": "9a9ee5904abe451ecee8448ca6b605b6d2cc2994b6fdc19715ae976b1769a14f", "ref_doc_id": "2c4d615d-c49b-4161-800d-543065bbf394"}, "aa440905-ac01-4e9c-acfa-6586a83dca01": {"doc_hash": "a48a81efff514b68f52b5af0e3b1cfca5fa002f622f21ce44c389e530b076df9", "ref_doc_id": "94db6863-579c-4d3f-b83f-aacb1e1428e5"}, "fc8f8c3f-9327-4731-8071-02c9b498ce39": {"doc_hash": "65e8dfc0742a2893e371939582422518d6dbebe87802606027231bf78d9fb1be", "ref_doc_id": "4a97b280-b69a-4c10-91bc-23e86691b6d0"}, "d2efe2d9-2b52-498f-aeb9-cd026f4c2314": {"doc_hash": "e983d893cca40f3f99d0fc51bb866cd8d127cf408f6a1f0d9e14b6a0e4746200", "ref_doc_id": "a7752ebb-4a9c-44fb-85cd-4fcf33109d72"}, "c42edc7a-6e5e-41e8-9af4-87a1da4fa15d": {"doc_hash": "e6c9aeee9082f4eb15d88b7fb7ab76cdb3abffbce918c2d84d1582e9cc519776", "ref_doc_id": "74206a89-4d7b-47e1-b9f7-ed0d7f7fd5a5"}, "d603fbad-680c-409b-aa2b-6753e11e62fa": {"doc_hash": "e3cb319385073f430184984a62ba608572cdf9d502f9b7030db9b8ee97e8dee1", "ref_doc_id": "ef401959-3a00-4aa3-bf65-f44600154757"}, "bfcc835b-341b-4ae5-a515-f238269e0d38": {"doc_hash": "cb9ebfc0103cbf9504d1e5b7d919f442f4a8c32298ec4ab11601e7cc684b0252", "ref_doc_id": "97a6d3d8-2445-43d0-a58b-ef9bb41d77ec"}, "f2651c55-4ecf-48b2-8151-7d453c46a9f5": {"doc_hash": "8f04fa168fec9dd7ea4e5f012f7f24a95d9051121d0b7dfd18e0bdb0cde83e14", "ref_doc_id": "56c02c0f-1778-480b-9c1b-e0f5632c1467"}, "e2a827f5-3c16-4314-a1d5-95d00cfbc94a": {"doc_hash": "c8c9303e503dee39baef179d264e1cefd3bdffe83c7e877cfedec66e819714e9", "ref_doc_id": "94ab26cc-31b4-4703-8bb1-a9ff48adf765"}, "7fc99eee-2778-48d2-a221-443827ec0c1c": {"doc_hash": "4a07332a07947aedaab1e9bf54c85f8ece3108c285c24d8715e22876ed55a79f", "ref_doc_id": "44dbb68a-4232-479c-9c90-5bcc146ae8cb"}, "951a41fb-c1ba-45e5-9fea-6c25c07672e9": {"doc_hash": "9e9e2e762b607206c751f1a8960f94022e2e724061097e51e242c5f0136e3c0f", "ref_doc_id": "17e166fe-3d78-4e63-8ace-62f7ea196306"}, "fdba8959-5438-4634-906e-cd2407811141": {"doc_hash": "85a05d6d1413f8b9382319ab13db031667878e9a0d38d2625fbe8563f09f641c", "ref_doc_id": "31cc59a6-d440-495d-b8e5-fb5fe20df523"}, "13c40034-ccbd-4c30-8a91-208a798d46da": {"doc_hash": "231a450b0e6970def9d6d150cd494db2422352368bf6ee2123dda876cfa6b51f", "ref_doc_id": "27c2e3ad-19a6-4f9f-9a4f-816d91a24bf1"}, "50b7b47e-4819-4a8e-ac58-b04a77ffedbc": {"doc_hash": "f67dd9ab125dbea94f1164f9cdc7b194a8ba5c000f084017a67723eb2cd24f33", "ref_doc_id": "55c94261-84d3-460d-87ad-b255514ddc1b"}, "70991ff5-a905-4798-bc35-9be5a8e0961b": {"doc_hash": "aa57729c2e06da2484bdccaa8b042efbfe42b04b1164705cd82321ff762acc7d", "ref_doc_id": "c4e68e59-9445-4d02-bcd3-0bd77d42d2ed"}, "b9da6a29-d930-4922-8e90-5f986f42bc5c": {"doc_hash": "6b03262a689a2268d9a911ddfd039aeb0515829198fcd0db60d777897552958a", "ref_doc_id": "33c7f173-e7ba-4edb-822a-a5b3f7bd8aad"}, "d50cc086-71d1-482a-9783-eb339f53d488": {"doc_hash": "01347a5c734743d627103ad5330a635aaa860cdc76da8cf01d13b04bf2ab8b6d", "ref_doc_id": "bf0032c3-68a4-447d-baaf-e295bc8e9913"}, "ca40220c-14ba-4f8c-adf1-f81e6f2a16fd": {"doc_hash": "023794cfbddddd618101bce8ba0a92c1507981596c457eeea85c2e00baf4294f", "ref_doc_id": "8897100b-b214-452a-8c44-b6572aeedaf0"}, "bea5be73-6d9f-4ab8-adf6-afaa121f86f5": {"doc_hash": "61035456bb46bab586b5e6c39b6c8f352ebe6c5c308a655defa8eb5f670fce9c", "ref_doc_id": "defd85b9-80e4-4482-b1d9-ebff4c63d241"}, "5ee34344-703f-456b-8343-f8a23e32ae43": {"doc_hash": "06a7340bd20550e316105b65ca1ba21ab76f3afa518930136e00c1148f337128", "ref_doc_id": "40017cca-771f-4289-b42a-07468d63edd1"}, "d54a7471-95c1-4dfd-8a0e-4a88b50964ac": {"doc_hash": "b5868d3a0a8458f6897687714f1ed4f5fd25f9530bb2043214ed0c009afaac23", "ref_doc_id": "8299290e-0f22-4b01-b84d-f025c058711b"}, "077d3a30-0c11-47ac-80f8-245ebccc2896": {"doc_hash": "5348ec9b9409a9075196754cb48da18595812a96daaeedc004e95a7f71e27756", "ref_doc_id": "af2270a5-3eea-4595-b046-37c8ccb64f81"}, "1535f90e-a377-4542-bae2-c0576a255117": {"doc_hash": "f09ff3f517638361f34bb5e6432c96fd5d3aa1ba8b3a7cb689a004569de7ec0e", "ref_doc_id": "d18d07a6-8fc5-4416-bfbe-b572a2534f37"}, "c900a411-98d6-4ae0-8357-cc8a7d1b135c": {"doc_hash": "518d4608f16209169a668207eebc800b47fd904a2ed0313bde560e5ecc36488b", "ref_doc_id": "3cde3871-5dda-4f27-8e97-e2d96199e0f4"}, "e97ebac9-2349-4e6b-ae38-50a97d516fe3": {"doc_hash": "e8df1a202d2d72589ffe86b33360458e1a1c6910286f42cb0efb0d49efed5c2d", "ref_doc_id": "2a1e30fa-3d59-4a6e-b109-abe4921867a4"}, "8998c02f-c0fe-4672-b89c-2a577bcf0177": {"doc_hash": "e050397411d3a386c6a0aed8d552919979013b9b5c81b09b5876be89dac6986c", "ref_doc_id": "daf8fb84-7c65-40df-a461-067dfe111d83"}, "6c33818e-932d-437e-a2ce-23c7c424a3ce": {"doc_hash": "a2314a4b24d884def4acec82ce92112f07333f3039a95c6b73abf43a3e360507", "ref_doc_id": "06898521-40cf-4185-bdfa-72eda63ea660"}, "63a107d2-8ab0-47a9-a199-139b66242e02": {"doc_hash": "579b3dc68ca7961a1c654caa020aed14dac50600b93f0965882002a39382b755", "ref_doc_id": "8f06e7d4-ea72-4823-baf0-bda81672210e"}, "1a6f5fdd-b26f-49c0-b027-5f57e7a57719": {"doc_hash": "35534ec1b746adaf4fff2b68b9e66d713b6bbefba9ab3eca98d3fb2a1f643288", "ref_doc_id": "eb5c3faf-ee86-469e-93c9-82115f2f8ddb"}, "daa0aea6-07ae-4411-9c87-d72a7e498b14": {"doc_hash": "e5cfbc218265587ebb3429319a9a486784513ab1ed00b966a93d4939b38f068f", "ref_doc_id": "22c94260-7335-4bdb-8032-f52e7a9a978b"}, "126d6f58-a038-4a78-84fe-dad10f8b5bc4": {"doc_hash": "1a265dafc04f4780112657a77a0ca066e8aac8d68fa648a9835b78c46773f389", "ref_doc_id": "5332eb84-808b-4939-8a66-3b4b9db92f52"}, "27e6d2b4-113f-42d3-a892-5861e4d0cb26": {"doc_hash": "b799ce1cf28a1eb248d59d107cdaeb67284395704e328651c8e94eb03928e08a", "ref_doc_id": "055ce19d-e7d9-4e86-b9c4-a835acdfcd7a"}, "30cc33fb-07f4-4864-8bba-d1dff72db97a": {"doc_hash": "36ef76ae98f013beb40de1a4662bb0a1e4b8792cfbadce082ac0372d7fb484b8", "ref_doc_id": "a139dfb8-5929-4fb8-8124-1759291c8a02"}, "55d23a93-e4ec-4b39-9d9b-82ebdf2a570d": {"doc_hash": "4b72a4e8855dd067a6991cb22525725c29a301298d96fff9c639f91b85d55610", "ref_doc_id": "475ee4d7-8532-49aa-bae9-48db9fa7101a"}, "15f318d5-9569-413c-a383-b6fd91d12add": {"doc_hash": "9c368556534d0ad539fdd1d61b678590cfbc68f92e8143573056e25bf1129534", "ref_doc_id": "27fb7768-3ba8-4a0c-bc48-3ec402028e07"}, "ffed8c44-e20c-4358-8dd6-a274822e6cf5": {"doc_hash": "04fe1e140af2066f1cdc91f8ae5594caff678525b959c083eab5e72d68278354", "ref_doc_id": "bb684eb2-caca-4833-8fa3-47181296a47e"}, "355f9dc1-75de-4ad2-bc5f-ad0a466db1a5": {"doc_hash": "1cb9f152b3d609541ec67a0d4940a9473b9de32de8b9aacd8e2b01909a23dc24", "ref_doc_id": "15401c01-81e6-4d27-b668-550c6d704c9d"}, "09495c7d-0f0d-4106-8cdf-348b97ce42ed": {"doc_hash": "122f61e748ef33a9fa0648dc5ec3388c869dfb9ed84f89f17b01bb583e199e48", "ref_doc_id": "14acf40b-e252-4475-98f1-e4a70fecd8c2"}, "69902734-dc85-4206-9bde-984202bf81a2": {"doc_hash": "1d7d16aa7871fdb8274a4034eda3ba222d8e3784049d4f0fd07afbd48878d3dc", "ref_doc_id": "eb496f4a-d45f-4b02-bb24-cd8775c890a6"}, "16367c02-e4dd-4717-8bf3-a7e9ffc5ae81": {"doc_hash": "def45507f5f05b81c98d7f9b6a02c27ce0ac093020d71d87d6dc1dfba113897a", "ref_doc_id": "52baed8f-5d85-440c-810b-7dfd5d67be85"}, "51177885-c387-4263-afdf-84b4514ecb05": {"doc_hash": "247bfda158f8834f70f11a4245e3c92eb386daf635fc4c6fd62f7fd7324c5a7d", "ref_doc_id": "f172849f-6221-42ba-b9e8-b476f208ca68"}, "60766178-7d53-43f7-91ce-b680500f8616": {"doc_hash": "9c73aec4d82265b9ef21bf1c72212a4c5d39c60d74e49001296aca08446e24e3", "ref_doc_id": "dcff81b9-7c81-4279-bc79-cb156b778cad"}, "b2b71ca7-d150-43ba-a07e-167e4805193d": {"doc_hash": "37dd874dca978b72a6b2f061061f65be6eb390e64f91a68873528d122a9341c6", "ref_doc_id": "adf839f2-a66a-48ad-94fd-560e0c5eb6e5"}, "5b44b80a-5db6-44f8-b412-88b08f9cc8fb": {"doc_hash": "7ae6100bb9316d0cc93488f2fb4f939a52c1b34e381ed6d9d457335e3490ef54", "ref_doc_id": "ed85af63-b367-4ea8-a606-a1a7c0ee2246"}, "bb7caf46-f5bd-4302-801d-0593837bb9a9": {"doc_hash": "787533bb1346d219ab6456e55885d5afe2e4f26a3fec7843809239aedcecaf4a", "ref_doc_id": "5c12a641-1f35-4b76-be11-5f94ab80201c"}, "a849414b-4296-46d5-b0a3-f12b2d437ac1": {"doc_hash": "76ad8db59cccf6a963ff8ee655d9d7dcc597c05f5bdef1e712ec152d8e9c9f22", "ref_doc_id": "9c8640de-daa6-4664-a8b2-eb3f8356b2e3"}, "11adecf3-d8a0-4a87-b447-bfa8d711ac7f": {"doc_hash": "9a20f9e625954d4d5b886829d52d84a55f026ea0a10c1a16b2ce1cf437da18b6", "ref_doc_id": "9162d2b1-2bf9-4e7f-a193-912911038565"}, "67b5705f-36c2-45e9-b021-50f9e087ac43": {"doc_hash": "a761b78e4528fae0dec5ff78edd4c1cfa20575a70d0889670b2b46ba4a758a18", "ref_doc_id": "dd0f2e6c-6efc-4f34-bc2e-6c7e1129ed69"}, "9a7dc112-baab-49e2-8e20-c5b241883e8e": {"doc_hash": "60beeeea93c0b988c4112eb4e495c57cc1d1a49d5c8637c4c8054cfe16447f77", "ref_doc_id": "b1a39222-1c97-4942-91e8-d4eb9af405dd"}, "492ded27-dcfe-441b-b5c9-8872ae226418": {"doc_hash": "55acfcec7e23f1fc395768772c9b514f8ef97ea8e5f0ef92d57d11e01a6ce9aa", "ref_doc_id": "99562c16-88ae-487d-a665-edee7d56b1a0"}, "9e480fc7-d6e7-412f-be42-1290a42bdd9e": {"doc_hash": "623f70ae85841c522e0a0e76b278778428f109acbd38f90295be2385cf0d4677", "ref_doc_id": "91df2fac-537f-4c95-a1fb-aebf75441c5e"}, "003cab41-2f43-45e1-97d4-7d395e7956a2": {"doc_hash": "6c7d315c74dbb519f9d072d0a5c9515150700d422469975a761f54a2d019fdd3", "ref_doc_id": "e307dffd-052c-4a2e-8afe-91ef431b044b"}, "63eece61-848a-472e-afc6-d6f2bd730ff4": {"doc_hash": "1683a167891c29bb1265a4841d8974144cfdce52088855432e88a3f4f6bb2e97", "ref_doc_id": "b3f7b9f8-7528-4cf0-bf3c-a1d85a74ca5d"}, "5dfa6f80-3505-444e-89ec-e36710270e0e": {"doc_hash": "d7911fa3c09957fe1c200a9c7c789fd5c5acf60bbd9d1676062127146d631e73", "ref_doc_id": "fefa5c2d-bbb1-426c-8b77-075fdf0c564f"}, "8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b": {"doc_hash": "d321a100f10b92325718098d4e09b96e9161f42068197137a5a520101b8d2a16", "ref_doc_id": "4d13a23c-0e2e-4381-9aca-a31931129ca0"}, "ad44bece-21ba-4cef-b588-bd70b3259bcd": {"doc_hash": "7e393b9aa7aab46f3dda62b784133f2d7485f222c35a89421d59004cf373ecd7", "ref_doc_id": "7f6d9a0e-2a1b-4ea9-9800-189e385cbc2d"}, "d5ff816b-f2c3-49ef-a933-f99acb8b9cc4": {"doc_hash": "47230ceea05bdecf9d2fae1b17d3c0c72273b319e48b591ef23dee10ee4a06cb", "ref_doc_id": "a11eee9d-33cf-4d8e-98a4-b17759657dad"}, "bae30238-6707-46bc-b7a3-980299b7f85f": {"doc_hash": "b374db73e62048be2861235aad36159730c81daea68895bb726fbb21a3a24377", "ref_doc_id": "cf5026f9-8b02-42da-9bfe-15316f766b23"}, "d70c9dae-5589-4d8d-b3a7-46d631ba8ae4": {"doc_hash": "fd341806296872dd5deb59a8f88d89c5ecb4340b0afc4d55a074f288469ca761", "ref_doc_id": "784dfde3-ad8f-4bfa-8418-4a3ec42c2873"}, "106490af-8c4d-4eef-ad0b-7d51b14621e6": {"doc_hash": "e0c55cc7de63f8ce59bd3418ce7bd59e3a50ef5a547779817e5663b296bf9a56", "ref_doc_id": "47931b18-9e06-433b-94e4-71387e8aa797"}, "118fb3ba-2930-4cdd-9975-d0f8fe564fae": {"doc_hash": "3d44242ee70970343896993c7ef809947a0e6d3705e4ad63d79e3de59a0b0885", "ref_doc_id": "f0b5707f-ef3f-48a3-a527-7e46dfded75a"}, "dbaf7794-f160-4b5e-8fce-e363f2e3fd81": {"doc_hash": "60dc4e47ae629059c52a5c897573fedfd84e84ca5b28b545b5770de22dd01c9e", "ref_doc_id": "2e581b10-2058-4839-9a99-5d7cf14c61d5"}, "82e7943a-f209-4e93-b4bb-f9a2e96a92b9": {"doc_hash": "1f9a9b58008d3b3fa07ead3fe74f873b214b787a1b246396b614ffac537118e3", "ref_doc_id": "a7089d71-1bd5-4788-adc9-2a84ba01108d"}, "cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d": {"doc_hash": "292173243afbca104009e83e658a82c9241967c4e47ad7643198b3e8c81f4515", "ref_doc_id": "563f1142-5799-4c6e-a485-1a33bd075726"}, "ac0ef22b-d0f2-4121-9da9-4dba9120bcc9": {"doc_hash": "e57692e3d7dc120db0836edb9a34882d2fd77aee7440b6f740f5fee4a8af4028", "ref_doc_id": "f4f07f7c-7198-41d0-b634-16d0d535bdee"}, "9d08108d-aa33-43ae-a0dc-c716b8053784": {"doc_hash": "0dc8f31355dbb00cf7799492184f4013936a67bed5d19361ded5c8e889041f25", "ref_doc_id": "83ce1b91-fc69-4e4d-ae5b-83f5bc0d3944"}, "f67ee5ba-ddde-4f97-b526-3b15580d359c": {"doc_hash": "24f026d921949712493ea3e551ca4b0b71d42c65cce71aef841b86693df7953a", "ref_doc_id": "d5d9ed4a-6b08-4231-880a-bb9dab62cd4a"}, "06bf0028-7c1f-4dd2-b774-14648b2c69e4": {"doc_hash": "e7b4178ec6eb328535024c1df7767d653d5a2aeb7d74f2769e6cc6c75ab6bc9b", "ref_doc_id": "fda4c6cd-050f-49ac-ab20-bf2942e48585"}, "fcd2ac72-3995-44b3-837c-fba2c28765eb": {"doc_hash": "882a0f2666ed9d7ed9d6d59f5db291da05bfd1f00d77ed7fbc40ba6bcc1bd34c", "ref_doc_id": "c9da83d8-11ac-4ab5-9c27-b7f1cafe8f67"}, "5d6eacb1-463d-4eb2-9e30-b5a02996343d": {"doc_hash": "2673d2521a9725bdbdb5a498b7fddc886f2842f3fdfe2fa492f20f3faf216bce", "ref_doc_id": "847ce774-4f36-48c5-800c-4662fa32e0d5"}, "a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff": {"doc_hash": "04634a5319f54976cda3f15c87bce8455fe5250d7c3ddc6cf8a4f44969ad04d2", "ref_doc_id": "afbf1cac-523b-4d99-8a14-c8663e85f5d9"}, "0050f467-9ea5-436a-b426-b62e58874db4": {"doc_hash": "594550dcd31e29ba1792d009805f512084835e2ac285046acdca61041261ea4e", "ref_doc_id": "2f4ca8d8-0e81-4072-a319-89c36be53181"}, "67f1adea-5bee-4228-8517-5c74b3c10532": {"doc_hash": "631cf1279bfb826aa97444b36f1f1d32786fef719a3203d5fc3194f362a2f15e", "ref_doc_id": "8cbc9b7c-f928-4493-aabf-db4fe88c71d5"}, "009046d7-7439-47b7-b250-aa33149367cc": {"doc_hash": "dd03e2ebae1ea2121680d15c544670828912efa7d3339c162d1e7233b56a4fbc", "ref_doc_id": "76532bfd-84ad-4482-bcf1-c1978211377a"}, "b00a40ca-9301-4bcf-9893-3c4b169e2957": {"doc_hash": "3f9d08a25b7ae32b0932c000e2db2045aa01053968a18ac6e44d953c5c5731cf", "ref_doc_id": "08a77f31-13e5-440a-91a1-32fcbf341c95"}, "a28ea497-e7fc-4188-9b82-631d7875b150": {"doc_hash": "39d7d563199a7b7775df144c855db61847fafc244a3e1faf79b08d4bb82b4be9", "ref_doc_id": "85602fa6-8722-4912-b3f2-424d51a37726"}, "48f49feb-614c-45b7-a8ec-4b43132c4eaa": {"doc_hash": "26683b2db0ccbeb7afb48ff74d2f512e04b57ec93788a3999a0c5b022e3a017f", "ref_doc_id": "117f2f2c-929b-4696-bdf8-9863a41e527c"}, "9ed37739-6cb1-42ab-a697-8e3c8c3e82a9": {"doc_hash": "4c53e43c00fba7c76bee750ae7ff868b6c9951eef7f926b3948ffe913197b0c8", "ref_doc_id": "74d954e9-bc97-40a6-9fb0-a93ba2099ab5"}, "a6483253-c531-4658-89a7-bb7212350776": {"doc_hash": "7af9adb9fdaa879c474c00c611e1437ae6d00d92b775fac22b9c8ac6b02ae350", "ref_doc_id": "f563cd0a-b726-4d20-9da2-f14e328966b9"}, "491a62b2-c379-4689-8914-fc37bfc302bd": {"doc_hash": "829b08f74f0dce0ab0fa89084e1305134efb4b2971229a9e6b689a3e847411ce", "ref_doc_id": "5ceaad40-dd11-46ee-9960-fe5d59556395"}, "5c784b97-dadf-4233-9e98-9cef5c4c4f7e": {"doc_hash": "bda1611adc5db54472eb854537454ac5cad0c98dcdb1825279b7413c570c7852", "ref_doc_id": "0597fcd1-eeea-477a-9f9d-c9c335b6e890"}, "85e068ab-dd23-4d3b-90f9-1544b61f48da": {"doc_hash": "3f316e90ddcbc55a8a51f22f91e48d46b0c746f74d756fb26a2b0098994b5179", "ref_doc_id": "eaa061bc-9b71-4861-bd5d-2218b535541a"}, "d94c333c-c93a-4553-a0bf-ffc87dcac762": {"doc_hash": "fa9e8967de589ac8997171f3bda938dd1730048673c322ee340705ded366205d", "ref_doc_id": "0e8d64d7-11f9-4e20-b146-abaac9b4c43e"}, "e3dc7101-341a-4b76-8f53-076445218d3a": {"doc_hash": "fc527d8d149572961b06a1f7f5f533f0b339119571df0ac38435eda3dbb4660a", "ref_doc_id": "a5e7aa96-ff22-40e9-8265-d8f446b8a76e"}, "fcc2c3ee-e57c-426e-a833-b74633120862": {"doc_hash": "c98c1854a873fee8837bfeacd4cdb4033ee367ecf06007f83864a8321f787145", "ref_doc_id": "37485d19-2b81-4f26-8a2f-17bc00300cef"}, "8ae3aec3-c101-48a1-8083-707dea0dfae9": {"doc_hash": "43df431ca81c828e80ba82d67546eebae85a6d813d184b080333377eb5371cd6", "ref_doc_id": "28fc266f-e71b-4ec7-ba96-64c1ccfd2912"}, "e5b45309-c770-4260-bbed-3f69ce977cd9": {"doc_hash": "8fc172367a2ceafe9391575ad8901e36b0bc731cc09e4b42014dc61a5d7e11ae", "ref_doc_id": "ae77585d-2f33-457a-96b7-0d8f32f5c40f"}, "3572e71c-53f8-402b-9881-ce91abd9110e": {"doc_hash": "40978eb410972c56e6dae8c77836a00e0ba8e8eced36f4e8c51b57a693f3b62c", "ref_doc_id": "49f2014d-b8f5-41f3-b62e-0a004d3c6eb0"}, "03e13a44-62bf-4082-8262-a09940be882e": {"doc_hash": "9cce62e2f606c260778f4ac79fc24ea15a052de1897ddb59b8f50e8da3656d35", "ref_doc_id": "355a6a04-8cea-42b4-aa3c-384dba4bc16f"}, "af11b8b6-6fa0-4eee-a396-cdbf058e86ae": {"doc_hash": "039aac8b7411eec90974827c24303143873f9ee02b08c4acadea4974789d93cb", "ref_doc_id": "73a636e6-532e-4cbf-8309-2c41197fa30f"}, "f492f6f1-b1f8-468e-b1d0-32e5e8f36eac": {"doc_hash": "d19d145028e10cad735ec87ad72b191758a6b405cafcfdd7f53248db291f7a2f", "ref_doc_id": "bd2743f7-df86-4e04-83ad-d2e5b48fa842"}, "fac061f6-9133-4a22-8354-a1b72dd51420": {"doc_hash": "6b7df42101d61ce539d1c2eee055ea3b9e580db1a9c4fbb5cf9f9789474a2af3", "ref_doc_id": "5c548e5a-deea-478c-841f-d46bbea9850e"}, "8a6ad5c4-196b-4e7c-99a7-47ba5f155f53": {"doc_hash": "0eae3966e0fbacd2479b69c3b29fdc7c5ca1169890c4e7ed5b480d8ab9150100", "ref_doc_id": "6632b38c-b5e7-41ef-b1a2-709866649478"}, "51231e88-fcaf-47af-917d-4d220ab688d4": {"doc_hash": "939be539154fe46cdeb61a405c96952fed7d2a121dc9ab4754ed9e31a57acd1e", "ref_doc_id": "13637419-1c1f-498e-aa22-b372c636a298"}, "ac23d806-843f-4168-b691-3c326f9440cc": {"doc_hash": "8adeecc8638c36cd12606c37d0cfb253f2b20a193dc2881d6dca9707969d20c1", "ref_doc_id": "2009a771-7204-4051-980e-2fa8e6b95395"}, "b76a7556-aaef-4c34-a48c-ccfe54f108be": {"doc_hash": "eeb123ec6c4911b7748e913c4b961db5fab6698a1a5f945bcf566384be307422", "ref_doc_id": "9d23aeb1-14e3-45c7-a886-d8ed3d259cc9"}, "4a5c141d-82cb-4cfd-a1c3-936371c97e05": {"doc_hash": "b5eddc30248295266517b9ab14183577e6034428b902910352c43134ed9d7dd6", "ref_doc_id": "6e6b8811-c228-44e7-bf57-8617f1677894"}, "3bf895c4-1cad-44a3-b2aa-70e93ef3a134": {"doc_hash": "e571fa2a1e1c9b98705d425f6adaece62253e582db0ecf53ca24fceb9ed63a4b", "ref_doc_id": "9fd44d8b-deb2-4261-8f48-5a183d20978f"}, "4425c708-3408-49ec-9708-eeb26478e941": {"doc_hash": "4a7fdcd75106bd9397254164a1df1e0cce263ac697d663f1955fa2d536b10ce7", "ref_doc_id": "e3715d03-40f6-437e-8b9e-1efb07c51e96"}, "3cb326db-3a11-4be9-9126-f872f4443882": {"doc_hash": "d047ff8a3a8a2a5fa4f2bd7acd283de1665fe984e04f21e0ed529fd672e6377b", "ref_doc_id": "95616a60-1a9f-41b9-b5df-51326ea2616c"}, "978f8971-84bd-479e-a5a7-2cea547d8274": {"doc_hash": "58ca3503262ed1d14158f2eef2b0a2792e42f348e2059b7c5e52a80d9ebff2d7", "ref_doc_id": "077628b5-d6db-4dfa-a649-d6feea457082"}, "4ebea4e9-d50d-4c52-a3df-f439b80308f9": {"doc_hash": "f9a4685b860d2e5a6d1452fb3e6d4774bb038937c54d03a8ea4227839684d13b", "ref_doc_id": "49f6fc3e-08b1-4327-a96b-29fce6aeca1d"}, "db980414-5f39-4739-8d8f-0ec306f03c7f": {"doc_hash": "2e1ab34692275ee6dc3ecaf0a751371510aa1272caf209cb3567aa7a60019576", "ref_doc_id": "2e2f663f-db12-4e49-b0ea-268b9c20e742"}, "c9d0b528-dfcf-46ba-9099-b94309a9a937": {"doc_hash": "b08fe86ed343d158556a119a18e2d0c8f3554b431bb8488886297bf2ecb2a83a", "ref_doc_id": "162404a0-fa14-47ce-b252-eafec752947c"}, "1ac45fe1-82a7-4cc1-8711-6e3165da165d": {"doc_hash": "f360a0c62a7d62da42c3c0cf3d132ea8953f5a529b02005e2936f0800dcd3b5e", "ref_doc_id": "37deed86-eacc-403d-adab-ab74b101514a"}, "14a19484-08cb-43a5-8aed-452685da43ca": {"doc_hash": "af1f3bfdfb10ff4c91e1c760034657dec10048cc180f08e5344f26b7a732d7db", "ref_doc_id": "3a33498f-cea9-419d-9b26-e72dd46864dc"}, "d8e6883b-e71e-4b80-a154-2c104338c25e": {"doc_hash": "91c782b061b6f8f5aafb16e5ca19a3f7434be116311b5fbe5157f1fa6529470c", "ref_doc_id": "a3a4201a-dfce-4105-b7f7-47d63448e1f8"}, "474fdb5f-921c-45c4-8728-e1367e8c67ab": {"doc_hash": "be55378fa3bc1be46c09400cea854359daf4ce02fd47e3615740c2a248ff71c6", "ref_doc_id": "471f4225-90b9-4878-8365-3bf982089078"}, "0aba9212-eeef-4f6c-a40a-0011d4286ebd": {"doc_hash": "7dda54ded4da19f9feaf8248d9606705190ce709383c4b5021b3a85c88958156", "ref_doc_id": "013baaef-80d9-4422-9acc-990b85c91030"}, "c68300de-2fda-4dc8-adea-eb7a1a033831": {"doc_hash": "3d71e0767c52e9cfdf725a1a90f764011b42ba71f40740e370e271c15b90f707", "ref_doc_id": "0c4b9f19-2787-471d-8867-b48deb143cb4"}, "760cd42c-d546-4f3d-b6d4-7f7828bd338f": {"doc_hash": "176535788c15b3cfb508e2a0d7d94bec4c353475c073b932c051354d587aaed4", "ref_doc_id": "79523b60-295d-4eb9-aba6-63299ca66d2a"}, "b7e97849-f474-44b6-b9ca-657e1359745a": {"doc_hash": "ee6fe29cadbc3afd1053f8d181258dfb356e1c60f1a069a42545c8648df4a304", "ref_doc_id": "2a3d17ab-d57e-48a1-b8ae-936cc3d5c5a6"}, "96f661e4-8286-44ba-80b2-f57280a4eb63": {"doc_hash": "88bfbc794729930ed2d9fd3c691fb161788799173ef5cb292c67324034c495e1", "ref_doc_id": "14e4234a-78d5-4a82-984f-2f9759bea084"}, "0899ba1c-e0d4-480f-9467-b97bc01ef26b": {"doc_hash": "eebe2d81a277f560d9ad5f570c34e7f83d49a4f6c835eeb9b8446d4dc32a93af", "ref_doc_id": "87152af3-1041-4b27-8db4-282bcc5d2bc8"}, "70461268-b93a-4a45-9a04-9cf9d31a3478": {"doc_hash": "87c9bc5fa5b628bc18dedb86dc5bdfaec07a3951276acc16df8ffb998566e884", "ref_doc_id": "fc370c6d-a337-45ee-9f30-aa0e5f0e5a2c"}, "b8f2e1b2-020b-4935-8b78-2bc0d12c9637": {"doc_hash": "43f05bfb12ee528073814e3f6f54929af8fb88f40fb18c2e9eb2fe3f485d937d", "ref_doc_id": "8b3bdecc-c78f-4cd4-b21f-a6907f46af2a"}, "3cd71a25-0c78-4b8e-b485-f710aeafc388": {"doc_hash": "8a028d6694a969b19ca25aeb9a04b04f60bffcb6d5a3fade92566a15a7b9439b", "ref_doc_id": "5fdd0093-11bd-4d94-9d10-14ceac5efe1f"}, "b32bc358-c420-4581-a9f5-cb7cbfce1bf7": {"doc_hash": "958db34fecc90e88f84c789bf07d37ae3b1d1eac9e5c1da853c5ed91b586c657", "ref_doc_id": "6c08955c-f7b7-4801-a5ac-9754c0274974"}, "8f1b63af-d6ec-4000-b231-7d86c5a92af9": {"doc_hash": "8f233a1b6035980f29b964d99ec599cfb700c3d94297f03d6d6b8fce38657ef8", "ref_doc_id": "efed5c48-aa4b-4fdf-9c41-abbb63b56d2c"}, "c8ed3f84-72a8-4af1-b960-c54c5bb860d6": {"doc_hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "ref_doc_id": "9633b11c-bed9-4856-b69f-05d7fe17d2bb"}, "a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6": {"doc_hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "ref_doc_id": "51d90e54-fc9c-4ca1-9f85-8892b61cb4e4"}, "76706fa0-08c7-4220-b00c-7619186ab0d5": {"doc_hash": "34a7d6a9fd2771a1e944af0fc3cfacfad71dedbf2b5552ee3f7ff5bee1927f5e", "ref_doc_id": "8aa31f74-a576-4c71-939c-2477191db8f3"}, "931f9933-f43f-4320-9e3e-4173c42000dc": {"doc_hash": "1fba66ba2f3e5d1f045d7d79be35aa3cb57c44abb6460721bf44d90e73c72e52", "ref_doc_id": "055c3e07-d67c-4b0f-9d6f-b0c04a3292a2"}, "663369ab-aa89-40c0-8c13-8d4b42ea0a46": {"doc_hash": "2531a64e02ab611ec27c4189445947e9f3fd81acfade88b51dfb25cc819365ef", "ref_doc_id": "a6efe3d1-568e-4c8b-9899-362cde302292"}, "cdabf7d8-7edb-4848-b0f9-f5dda2ea4294": {"doc_hash": "7cd3361d65798f4ad9e53d790388726cf777c5d50d562ea1558203e7d4138203", "ref_doc_id": "cfc51d70-ea96-4c1e-adaa-1619bd764c8c"}, "fb6b75da-774b-428e-8886-d5c4c94450bd": {"doc_hash": "d4311bc73a1218ec056d7ade22fa5ed4aba3fc5ec836f81060c7930621c496eb", "ref_doc_id": "e91df77f-9e99-4e4a-8afd-bdcfa313bf3b"}, "41ec9e62-6c19-4a53-8284-8e41173afe81": {"doc_hash": "491cff3e16373a97f524b6c11ac9282209ff0b0b8e74674487c230219559c3e5", "ref_doc_id": "4f1b3794-00ae-47d3-a5d9-2f9d78933060"}, "535f9539-dcd3-4a26-b53d-a25b4942dc59": {"doc_hash": "a15a4ca7b439baa6629c9ab8e7fca44379fc07a5492db687e642a5665fedde55", "ref_doc_id": "914f47a9-3e48-40e6-8014-e250004b0b59"}, "d9ff101e-95c5-4d71-9bef-e4f02280916c": {"doc_hash": "ee25a85fa6e36cf8da97d17700c39399944aa0c07a3a29119319fa7462c01d21", "ref_doc_id": "e00fc259-3b84-4823-92af-13cee59a06c4"}, "042ddd3d-4100-4aea-8caf-2bc4da9627b7": {"doc_hash": "c0ff6a86cdfb51d9d48fe31e9fa143c7a216316e32f519854d7cd694d3358335", "ref_doc_id": "69da750a-dec4-4133-a2c5-55673606ecc7"}, "670cb058-34d1-4617-8e69-2c5f11b9a16b": {"doc_hash": "0897d9b99e3070f4a255c6397a95f94ae1f8c3e238b8fe74623255ea0de084ab", "ref_doc_id": "d21f4840-c466-4003-9c16-c97a648089a9"}, "6efebdf2-398b-4bf0-ac31-71b67806590b": {"doc_hash": "9a72bbc7a33ca535e16cda23eb0e7e6a77dad8c797586ee38c465e6ca1f61251", "ref_doc_id": "62854b93-5007-46ec-a88c-e7cdaa7198fc"}, "8ecfb7a4-1d53-4418-8911-772ef47feab4": {"doc_hash": "488a33cfe401cb64687edf57ac2c0a7c1e2e51f44ab9f607b74372790c1ce3f6", "ref_doc_id": "41b947dd-8695-49e8-bc86-f8141dae7dbc"}, "5b89b768-0ac6-4ead-87b0-6c05576b6a64": {"doc_hash": "f74ee39e408e129ef13ff900dbf709da561687f2f3ee7ac12e377697f8e77484", "ref_doc_id": "6527d36d-870c-4af9-a589-736cfc1dd15c"}, "2b1012eb-7d30-4db5-8147-5c832852be5e": {"doc_hash": "fd182d4ebb45bbdfe287aad5d8b68cc11a188566de78a30c61f37ab51d9ef3e9", "ref_doc_id": "b61660b0-c417-409d-8368-9763e8761cdf"}, "c96d7fed-0eca-402e-a5fc-a807226d1ee1": {"doc_hash": "5109d5276d2b577e8986063262a8ac2b24f50f6f5b6a7ebb93283b8508d3e1d1", "ref_doc_id": "76636a41-96f7-477e-99f8-7f106b00386f"}, "0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e": {"doc_hash": "61926c9932dfb2b7c9749ada31ab0b355e5fef3cffcfc15811b19d8667a071ed", "ref_doc_id": "9062b593-4fb9-4a8d-a46f-489136e2757e"}, "2352f851-ae29-4e2d-9c5b-8230c246bb7d": {"doc_hash": "49e60fe36371647a1df57bc032a746cb5a77a34930538899b676e7ee88937167", "ref_doc_id": "8af74841-8852-4a98-92c9-3893518a07cd"}, "4e990513-f077-443d-8eb0-239b6b884b74": {"doc_hash": "a48081bd677949d5bf59cb61a17147c2f24341f0a6c27a4658c53dd8100d91c1", "ref_doc_id": "248523cc-c6fd-4638-9b7d-a7e15f35ee09"}, "092ac622-b659-404d-9bed-32e908023740": {"doc_hash": "58f1d4be9d83784a9bee458315fad0a98732e4f6add70c5020fda5072735a17f", "ref_doc_id": "0643e76a-b5e8-48e5-abf8-7fac93eb7426"}, "0b1c548d-640b-4730-a4da-6c447278207e": {"doc_hash": "e0d46f8e822b95dbbe21094b6105996b429507299c7225b13767be85efbca449", "ref_doc_id": "568812a2-43d2-409c-9890-c37360e4e771"}, "e164c41a-fd19-460a-853b-153899165a12": {"doc_hash": "4379987b9cf34fd0faab3a4d9c20c125b4ad4113fa994724c845a4ac699f5359", "ref_doc_id": "a7913d9f-292f-4803-a3ed-fa90bafb7501"}, "d77e9ad0-c53d-4320-9871-5b9e62ffed96": {"doc_hash": "e237873fe6bb094c7f3b2c19d6fda909506680de33967bdbf34b355e7bccdb7f", "ref_doc_id": "5f99104e-3f73-4419-a73f-54c261cf12cb"}, "abe2e757-e7c9-464f-867e-dfc5541302aa": {"doc_hash": "44f18235e1e177a6e75a79f61afb0e1a2e0b232a4f93cedff2827ab480b6e650", "ref_doc_id": "04661e22-68f1-4001-a5eb-c29e995fc2cd"}, "e9a6751e-15ac-4a49-a4f2-173d9178be88": {"doc_hash": "be40eabcdf6d174ddcf14d6dd85431471cf5a35dd388a99d96f0ae8c4f9fd1d7", "ref_doc_id": "08d2b010-9e38-471c-8ea9-85666514e546"}, "595933c6-fec2-4dcb-8de9-3e13ed3cb068": {"doc_hash": "db8ea13e1c90b2f33148fa289161f8010d857bf3d244dbde2cb7b5c051fc2159", "ref_doc_id": "cf8445eb-44ff-4ba9-83ff-2ad3c5b87193"}, "4c40821c-9737-48d6-9d1f-23da629623d5": {"doc_hash": "05e675334be0c98d7891cd77fb4961e35972c5ad44510f31d29fe556391b6116", "ref_doc_id": "ca1281a1-d707-4bad-84c2-c9c8142369ac"}, "01b541de-7360-4be8-ad50-754487cddbd2": {"doc_hash": "e9bdf727109317d463a6d1be2a813aaf86bb98e92d9c5efc0367133c3c086042", "ref_doc_id": "c0950888-ffa5-47c3-ad4d-4b819c290954"}, "3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f": {"doc_hash": "34b5c9ab24d0209ceed947cba111e0c04f1d326ae6366e9fd9b3eb9f9bb4a0ad", "ref_doc_id": "370a9987-e7cc-402a-8d1b-952b1c5c1d72"}, "058f5415-5e54-4ef8-9980-33268e0ae3eb": {"doc_hash": "2b378e008dfdf9a6710580152a560f6e8fa425dd2e064e2b005143086d10e440", "ref_doc_id": "cee194fd-e375-44c6-966d-cdcc58b200c1"}, "efbca599-8644-4f7f-8418-862e2710bbd6": {"doc_hash": "d37f14fb1cbff446d9d2144d29f1d465ec4e7c67520e56d0fab5076137756fe2", "ref_doc_id": "45cec028-9698-4726-9636-a0bfa0292f6f"}, "84d69004-a647-4918-ad5c-e46f9152ae07": {"doc_hash": "0177f4f0eef5b0228c4bc66d49abd88379fbc290ba4fe298f3c22f9815bede57", "ref_doc_id": "19df1d07-2c4a-48f7-b7ca-27776cbc667c"}, "ca977d8a-b6d0-4b5f-89e7-496a6e04a401": {"doc_hash": "708aee1751846f1f38841421bfb8e2e348904cfc4de1a8714209f22d88dca78d", "ref_doc_id": "e00153b4-b39b-4015-b017-b480f6077d69"}, "6b3b2010-e86a-4225-bdb5-f1c55c2db98a": {"doc_hash": "5baa867a83396d3dcf80183cb8b250d2af8e65e26f4891667e636603f8096545", "ref_doc_id": "e7329ac0-e054-4cd7-97ef-484f7478c1a9"}, "508fa520-6792-49fd-b23b-4a3f1554bba5": {"doc_hash": "0f00c639153ee2f4e0ca823d504e3c0dba96a72d54b6e01ee389100ac46351ff", "ref_doc_id": "269faf99-dc1a-4e84-a50a-2023885e047f"}, "a91b86ff-4ada-4353-9f75-b291579efc5a": {"doc_hash": "59553cee3bba6908b3385cbc0b86697e561ed97f3a1cbd58a429e8c47c5c883d", "ref_doc_id": "fa1902a6-4d6e-421b-ad04-1af6a426f984"}, "1921b234-148f-4eee-9a5a-2b15d9634a7b": {"doc_hash": "e5b76aa2d78d7e2a55996668a401648ebb812c7daa2f6bcda65656aedbcb9767", "ref_doc_id": "8871c11b-ff7e-4863-b735-e1c83b3278bd"}, "80b0c84e-4dec-4b7f-a5ae-a62553893e94": {"doc_hash": "f6d05194d2ae522ae5e36d6ecaf6608a6142e389f95bfeac44be292c2b151d17", "ref_doc_id": "e0e27e4d-d232-436d-8fd9-42a89d274148"}, "66fe5fe5-e7d6-4613-b85a-c219aedbb7eb": {"doc_hash": "2bd86802ad2f5a0140e109fb52432fd4f47e6de778dc1778c327a3ecd3571280", "ref_doc_id": "000f5bbc-57b8-4519-a208-6f8128453a78"}, "6e682eac-01e4-4bf1-9486-66118c1a0e98": {"doc_hash": "1cf2a98e4bc2e20d51b47971dc9179a89133e6d209932fb790bd221ad0d47ace", "ref_doc_id": "66d2339d-0d4c-46af-877d-1dde8b9f25cd"}, "bfa9b9f3-fd33-4272-83fc-6f7a72f4785c": {"doc_hash": "6a61fc13ba63a6718eff6bb9f4078560d72238027fc8ce8a225cc21ca02f6f00", "ref_doc_id": "cc436d77-a06d-492a-b0e6-33dedfbdf85a"}, "5d87a9d3-d343-4017-b886-a1546abc8c0c": {"doc_hash": "9648ccdead76a666a699695c432d68b029f265614049a8f30d2e99b63f265786", "ref_doc_id": "896af9e7-d90f-431f-9a8a-4676c7585c2c"}, "61a21044-ca07-4e0c-bf72-22e5e49f4f54": {"doc_hash": "2be3231f45bdbe2320d5f8f9384caf310cf3751c66ac18c5a51678f01a7db265", "ref_doc_id": "29f23a4b-b5e1-4b19-b884-8a005d165c30"}, "48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453": {"doc_hash": "e5bd1edf2824a412ffa2883fafa03cce7e3a8eb797d4dc2312d6b0fe27bb4929", "ref_doc_id": "a6fce9e6-cbb0-4076-8208-41920ddd6553"}, "86d90762-be88-4eca-bff0-ae18c0e8a7a3": {"doc_hash": "fdb5ac8788536e4edc303f8b7967e21b6dcf9b339c076bfefcb062f813088ca9", "ref_doc_id": "e174cc30-367a-4b0e-8fd8-409c52886455"}, "dc207ab3-c199-4e76-9a61-c2ae67769732": {"doc_hash": "9430cd1467219a2b0406baa02149837699a5fc3678088dde80089999bedb21b5", "ref_doc_id": "8847d668-a2c5-49ba-8c21-b3b205615a17"}, "df75f556-3680-4058-bb9b-1a19f2fdd609": {"doc_hash": "d2d89317c1c391380ee0cfa731f8ef92e3f42c733ee2f3b5a6125372f348001f", "ref_doc_id": "1d632f2a-aaa0-4da9-b277-19791ad56d2b"}, "cf6a095b-22f7-4989-bf08-a3ecb392e7cf": {"doc_hash": "eb4ed581a091c9cd206fd3924c7a893418358140791ad038b3914d845a171d27", "ref_doc_id": "9a490a75-da0a-46f5-80e8-30a6293ab5fd"}, "c0f867de-6009-4a2c-8f79-0683cd976752": {"doc_hash": "52314d79957df584bc533854b07049cb02b7b94b7886899e773873761bfe2379", "ref_doc_id": "deaf3f52-74ed-49c0-a5b9-9537f9a56b6d"}, "dbe33271-7256-4105-88c8-719ec10e468f": {"doc_hash": "8c6438bb891a77b7d7525cd3adcb86220205db8fef7da08af1f7860afd3ba63a", "ref_doc_id": "94b78f06-e65f-4217-ab20-7c109bc56d54"}, "c9119d09-0155-4be9-afdd-d693108b4736": {"doc_hash": "819b00c0473a6c64e94de0e57d4bdec5b8f742cd16355edccb0c8925758dc172", "ref_doc_id": "f0c1dc09-0d54-48be-9271-73ae8e6703b6"}, "1aa815f2-6af4-420e-8ca5-7e28749b0457": {"doc_hash": "c1be1de44c3adffbc8fe09345ee053eae47dd45242e28b4b968d05e3235613e8", "ref_doc_id": "f8e68132-90f1-4bdb-ac07-5e7db46a916f"}, "4ee50dc4-784e-4af8-8500-d726bef7c953": {"doc_hash": "e93821356e299ce48fa248013001d608f1fedf62400278e900870deade717d0e", "ref_doc_id": "34a7ee27-edf3-4810-ba0c-66a4d0fba38e"}, "e411c663-92e3-493a-b0a6-018bca8b62d0": {"doc_hash": "a25697471c15bcc2afe7c0c2d5ba2bbadf94f143dffe5ce85bd2d914fde77cbc", "ref_doc_id": "0aeabf97-9c0f-4ddf-9856-ea318d8e06a6"}, "cbd66eae-de50-4cbf-8ba3-6d8bf961791b": {"doc_hash": "50955d0a7d0c0b4245976557cc306fdccc360005b449f6cb4c1a258eefe568f5", "ref_doc_id": "7abfb03c-4220-4086-9b88-2c713ee197a6"}, "e6c6496e-c3d6-42e9-a615-595b359c427c": {"doc_hash": "2ca33eb929465c248b70ad1b6d816235d1d0b75dcb60d7e38a2bf3dff248413c", "ref_doc_id": "c2f945b2-fa3b-4eb7-a7c3-007ff9716b17"}, "4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4": {"doc_hash": "4cb4208609f63682a17b0a216cece2a9bf1627e50084f51b6238c67774fa74b2", "ref_doc_id": "897fd483-8598-4efc-b964-e5a00500c198"}, "ae9279e3-45d6-4f71-9ec0-65d6409f9099": {"doc_hash": "c9a549a923e3b907e5309108236a733e0c6b6319c411e45959878c4984e9912f", "ref_doc_id": "8e995631-2cf5-45ae-8f6e-8fa7c0369615"}, "79bb9b74-923c-4317-bd20-7498955fbc66": {"doc_hash": "c9aa74fe9cfdebcebc727b3f9ab7551e9aedc80ff7ffb997f28eedc52011ee31", "ref_doc_id": "92cd55b6-cca1-4dd5-ad29-46e8affee86b"}, "783bc869-7267-47e1-9b6d-da5703edc7f6": {"doc_hash": "ad76cfb3a4ebb7ac3d67e06fd34fbec7ea7aff5d37a13b3b425f2b2ffaa32210", "ref_doc_id": "b147821d-06b8-4a01-8057-250e8a09416f"}, "2a6bb98f-8510-4379-b457-38d4e3567551": {"doc_hash": "af183b1a7ff2e605f4bca553adf731b005d4cee0467380fc6fe6157275eef727", "ref_doc_id": "de3c9e3e-0c1a-49f8-b09a-0005363a5839"}, "ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca": {"doc_hash": "7efc1d55d921d9800435dadf8fb4ba288a65afdf7424e5a14493a1515c1467fa", "ref_doc_id": "49354419-975e-4050-a05b-0225e349fc42"}, "72526fc7-70e8-41f2-b8ad-ee02d981d100": {"doc_hash": "969994e7a36fa0781da9d95c31917080284fe06dc252d4fd3d17e4aef3ce677b", "ref_doc_id": "21d2a48f-b67d-4f11-b599-c48a0a999b9e"}, "fd47be96-e44b-467e-811a-1c07b0404da0": {"doc_hash": "28209024e6b69f1bbef8097cb13c388dc0f9b934ecb9c516ba16341a5660049f", "ref_doc_id": "fc352957-696e-4cdf-a321-f7e2c422a7ec"}, "edf772f9-203c-479a-8b13-d8f9f7a9c1fd": {"doc_hash": "4d2ae8d57b12e5798f39fc60e91b34e1f9a2e201c29fba5b9f43223e979a7e60", "ref_doc_id": "3e32c598-0067-4e26-bd13-a9db0e76a166"}, "137c01da-6089-4f55-ba65-eaf74ebd0102": {"doc_hash": "595087e3b41f9872fb5f858d1bd9dfc8ff2e13ed2f46fedd48e46e7ae2095bfc", "ref_doc_id": "220b9e0c-a000-40b3-a30e-2662ab88e1bc"}, "b4bd8e6a-37fb-4e54-9487-7e997c07624b": {"doc_hash": "08c9a377f9319ae88d2375a06a23a29a5eb115d6e676bd5afd16dcb4dabcf300", "ref_doc_id": "708a947d-b6da-46a7-91e8-ca9c7f544374"}, "7ba47264-9404-4b28-9c86-4a28dd42c733": {"doc_hash": "f62a50b560b44712bce4ae077660f49491b7e2e886f5484d6ee574bbf38c71d6", "ref_doc_id": "fa1b8fb4-4402-4a75-8957-ff1f93276fad"}, "d188a70d-b6db-4470-8551-8cd66297280b": {"doc_hash": "862587ae9e74cc254f4a9675a281d2d1cf6bb4fef2f468c6486ca3404ec65f7e", "ref_doc_id": "5aa6bf6a-30ec-4ac9-bfde-974db42834d2"}, "4ef29259-6420-4127-a329-dc2c80883b9d": {"doc_hash": "d80ed8e92e335de408eb7cabe9c7f17597c39b22394cfdf82dd3200ab2c1c767", "ref_doc_id": "65d29bde-c4bb-467f-81a1-d58a94968d56"}, "cb037b91-d295-49c2-a6a2-fad5d0789a11": {"doc_hash": "420e778138be0a280edeccee07d5e854c9bf2b6c6c9f658a48f0e52c8aa5a9d4", "ref_doc_id": "75463e64-d34c-480a-85d9-b7640d97bdca"}, "6f39dd46-6c96-49c0-b044-e458b151c651": {"doc_hash": "428f91536a6025333828bbfb1e82647bd289013d98f554812ffa08d9feed80f3", "ref_doc_id": "ab389e6a-c4fc-42f4-8e08-43f8e2519483"}, "2d9cc489-97ef-48d6-acb1-00ec02992c0d": {"doc_hash": "8392d1e90aed0c24385b34b7b6cd976b8aa8829ce54ce4e6d40bcede99c6c281", "ref_doc_id": "2af1e837-2d98-4aba-b003-17c93f934212"}, "aac18dd6-a020-4b24-b546-a4f358e6d0c7": {"doc_hash": "1ee2a94647148a304b5f48e242fa740c7a39833159c827bb7bbe5675312396ab", "ref_doc_id": "5973191b-99dc-4c57-8c93-1c4aa3ea3283"}, "e83bb429-3f14-4182-8248-a4825251fe87": {"doc_hash": "a29e7d012b9bea6e717e8aadee16871bb1caf089bdf1fb6f6f0f99df5a4f80c0", "ref_doc_id": "f09b47c8-334b-43c7-9e4e-1c77417cabfb"}, "27e88717-15b2-4c93-8254-a615d12435fb": {"doc_hash": "316589be78743458b9536a1139b3c3b43d567e7491011009917e58cb80cef262", "ref_doc_id": "7267ca9f-c980-48cc-bb21-56cf7ab5b57e"}, "963e4f62-c4c9-4246-8feb-81c7d41ce86a": {"doc_hash": "b4d7952536327dee6719317a3a688fc2c155577e2d5bed13f4f13ac91c7d72ac", "ref_doc_id": "6c492116-eab1-43da-be43-787e79b48b02"}, "4ec42b13-53f4-417e-bf58-024f9ccfd0a9": {"doc_hash": "577b30e74fbfa011679829c0b61b7e54339d0bf64ae9c982b6d401b83d5cf736", "ref_doc_id": "06d5d8ea-2671-47a2-ae4c-8a48a8ee34fa"}, "c9458096-edf0-4a24-98f1-9eb8da45a759": {"doc_hash": "d1b050ed9a68707e6aa2508a3db0ecc5a5bcd39643cbf873bb637dfdc3e329cc", "ref_doc_id": "2406f232-7dd7-4620-bd20-8f07d272d089"}, "894f8786-5da9-422e-aa55-442761786a2a": {"doc_hash": "4daf7f0b494fde1e7316495c8afbba69afa36c319f2998b173912dc3e9929e41", "ref_doc_id": "85dd6a6e-5464-4002-bca2-dfd1e4360ce1"}, "93440cdd-f91d-4050-9e2a-64d9ffb63f1f": {"doc_hash": "8a7865f0068709dc8866ed81be1aedaf63131708214fc370a5509c3e956d6242", "ref_doc_id": "07b18a61-fe53-4c7d-84bd-a9d840736c42"}, "4b53e23f-3977-4e99-a593-cd650f78f704": {"doc_hash": "84fd10c533f032f725846975f5469f3bf32e16ba56b2ea3397ad400f181a4d14", "ref_doc_id": "ab72e03a-8ec7-43ae-adbd-d87b6b7a9471"}, "ec1ad486-8c7c-4271-b7db-afd77390e6be": {"doc_hash": "8edb18a9e71e028dd996feed3934797d74dc4dd7f42abbfb758f8a758e9ae04b", "ref_doc_id": "32bcb0f3-8316-4cc6-a988-6b2cd6a632a5"}, "41917266-6441-4a78-a9e1-6065ce427f5a": {"doc_hash": "f5864b4da50049265adf25dd47bd09970814bfbc858fcf0fb01debd124651d19", "ref_doc_id": "6466fd6c-b869-4bfb-8c8c-b92248a3f128"}, "a3bd8d53-14c2-4e0c-a602-36b83d4d5a66": {"doc_hash": "8e41b32361396ccc8d7ed629d63dc9287c1b4aacd3588d73319e0439aad485a0", "ref_doc_id": "b618d094-4bd7-49f4-9071-994378a2f3ff"}, "76dc5a57-693c-4338-b2d2-b0424f41591e": {"doc_hash": "4f94794119af6197009427ec3d28fc04108f1bfb5993a70e9fca7ff4c0f2007e", "ref_doc_id": "18037435-3bd4-4d1a-aeef-5ec895754ee5"}, "af7a3a7d-b837-483d-a828-8ed5cc442fba": {"doc_hash": "047755620206799b936e52348a9e3cbe5c407fb955f32f140b9a5736a9ca42dd", "ref_doc_id": "b8fe1b60-d207-4b55-ae00-a5ecddd9583e"}, "69cba123-bc65-424f-b6b9-2028627dce87": {"doc_hash": "641786d25a547dc6e2fd1a4e9cd172b14b146dcc7a78104ad1c86644ffcf6362", "ref_doc_id": "6accd3df-ba8e-4326-a694-204bf4fc89c5"}, "09daa2cb-dbfc-482a-9030-980d4f50b5e6": {"doc_hash": "d9a866b3ea094221436dc002eef51018f41c13277b339574fe1eab2c734b1c3e", "ref_doc_id": "8cc65ec2-2dc8-4024-b115-10367bcde7e9"}, "7de89bc9-bdef-40d2-b275-bbf24ebe5189": {"doc_hash": "5b2ad305d0b989876ce38adbd462b067c5016044286defc20f55eed3eb2d8f1c", "ref_doc_id": "fdeb4cba-a6a3-417d-a96a-9247de79947f"}, "975fdc77-0970-49ca-b073-3f6593d2eb15": {"doc_hash": "9ba644d5d7ecccfdf48c981ce513b86b8f4daa3a586a8f6ba7feccebc3291d61", "ref_doc_id": "3bfaa584-060f-46aa-9755-193077a71a0d"}, "a9bec055-3fd6-4b9a-b3bd-065c935d1820": {"doc_hash": "3823810e47c18c388947d7e8517f031a0703000ece0c4f5502d2f48c2d68df2f", "ref_doc_id": "f49f0924-a249-4ab9-9e1c-f9de2eef66af"}, "c53e5de6-3d0e-491e-a807-be9cb6e6f38e": {"doc_hash": "2acba8c70950dbc238b360a0a84a173b3f4c4d82cb580ffbaeffdb4d4155703d", "ref_doc_id": "49897da6-87bd-4ee1-ab99-6c6a482c32b7"}, "435b8c14-2ed0-4459-b408-b494d48f84f0": {"doc_hash": "57d95af484eefad0644569595f35b18d47ed0818be6af287aeb19981416bbcfa", "ref_doc_id": "a782985c-a2bd-48bf-abb4-74eceeca50cc"}, "23beb3d9-0380-4612-9431-98ba0e499bd0": {"doc_hash": "97e4d666c7c379f5886db95ea2976835ce3ee48753786fbbea32a477b0cc344b", "ref_doc_id": "0329b740-4abf-40cd-ab9b-26a3eb403d0b"}, "a31c3909-2eb9-46fd-81f8-ca60263db607": {"doc_hash": "b021886049bfbdb2edad01cdd7f2097456ac5a9dc70fc65680db28e535bebc1a", "ref_doc_id": "7bc701ac-a00d-43ab-9de2-487cbeabd5b0"}, "59a0a4ab-9119-434b-bb47-27735676e7f4": {"doc_hash": "5797f79efb233c016fb01305c01607a3a21c554dd9b2a608ec30d55a586ca8f2", "ref_doc_id": "d6541d5e-10c3-48a9-9279-2b746c67eb46"}, "492e5c1f-4ead-4875-9c40-648b706cf2bd": {"doc_hash": "3548525740426e01174f1dd82ba176b0c24c48d6b6bc422eef94ecb3905d5b4e", "ref_doc_id": "60f8b410-7c91-426e-9a5f-5ce171bec4a3"}, "485ca146-26c1-4f67-8a9d-1e0de3d1b73c": {"doc_hash": "5472eee94a0bad8d4b46dd04e5567457f777dbd200b42e422106295d6d9fec23", "ref_doc_id": "c72a40ba-99fa-4896-97c8-9c5ea7a1e832"}, "40033c0b-6fcd-4964-bcfd-64c821fa8ecc": {"doc_hash": "ee754dca257ed5db47f8c1ade4ede9481ae150bc30a11adc804e0cee4b461672", "ref_doc_id": "21636006-e549-4864-b848-48e5eca78c26"}, "f4c35d65-73ac-4e4b-8e33-a8dd4f84c573": {"doc_hash": "530fc9fcfb5074369fed06cbd53560791eeb5e1f7668965c526719428fc648da", "ref_doc_id": "64fa4c87-a8e7-45cb-91fb-acc56a95da12"}, "d04e0866-60ee-43d1-a525-9ad00741f3a4": {"doc_hash": "4d6dd4b048b15ecf5f852956664d3d60a432c55d5b036f7d83cab3701cf81c57", "ref_doc_id": "bc7e29cf-4e68-4eab-9037-fa3eba5bf308"}, "a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2": {"doc_hash": "c65fa5d1a55bbea048f3709c80a6d182a0b02b04f0ef6c8c60df0ccd2688d885", "ref_doc_id": "9db741ab-7977-4105-99ae-a9b40331f13f"}, "fa75de11-855a-40b7-80ac-84f99487b318": {"doc_hash": "d229b8c454c3e3254747cc9bff1a02f81edac1e0453c218e3a84a74a956e092b", "ref_doc_id": "cc678df0-39cd-4d24-bd11-eebcfc6d93ee"}, "484e2100-c59f-49ef-ba33-58890b5fca81": {"doc_hash": "37bd11caada0b7648222b6849759e2ae2bfeb1d48bcb75443d362aecc3c8bdce", "ref_doc_id": "9cc6ba0a-7485-45bf-b6d3-11755deb0074"}, "54e89220-c675-4251-94c5-839e9d1aa936": {"doc_hash": "c712fc66aaeffc536e3c38a9eeb5113cc656d5035341a98458e99167de82e574", "ref_doc_id": "28752d88-f1ee-4769-9d2c-04f6c071531e"}, "ba95def9-9c31-47a5-b33d-2443c3b8beb6": {"doc_hash": "95268c55170630fab9e826a6595a55e21825e456662e2034f0a3b9e755ab5aba", "ref_doc_id": "178ac2db-5328-4c07-9117-e680618c90b6"}, "9c09c410-472d-4c55-9ce4-801ea41f8061": {"doc_hash": "f77bfd0010555d07609e2a2436c41def4259e58eb6087292093cc2717ac9f3e5", "ref_doc_id": "09e6d16b-5619-4673-8491-03aad3c0345c"}, "916a877f-6df9-4a67-84bd-5cbe8dc1e86a": {"doc_hash": "a5ca9603d12f8a0e1a307855c046e999da1ad82a7bf35b7c8527765e11749b1f", "ref_doc_id": "d205ef17-5fd6-4fd5-8758-690657d7a26c"}, "d62aa50f-e95f-48c9-afbc-7ad7aa19f50e": {"doc_hash": "8f34866e3d99363fb29af6fa02585743a08c781aa9296e1963bc5484932bbe39", "ref_doc_id": "fd5b59a8-fb93-46fb-a9d6-6fd65449fd3e"}, "d26c6eaf-3dff-4614-bc2e-a2a3765de72d": {"doc_hash": "c8620ad018c873211cce943907394060574a1062181b3780932240d9e2518b43", "ref_doc_id": "6aa859cb-7b47-4e93-9aff-93f2ccb4a438"}, "eff23564-14c2-439b-a82b-eb2e18ef96bf": {"doc_hash": "f59671ccbf46e2eda9efa59941016369e387c4e5700659725b7d852817097198", "ref_doc_id": "1d91fd71-871f-439e-aae3-668865c2877c"}, "a01af1d1-a6b7-4603-a229-58e72efcfe59": {"doc_hash": "0ee9b49bbadc8c2c2fdbd6d58e6cc4f9a924fac75a90cc07843e94ea08417a5a", "ref_doc_id": "3c21b796-a00a-4b86-9761-e00b5f48510b"}, "5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee": {"doc_hash": "b9d5dfafbc026e83ffbcc652713ff64d173b49feb19bef520cc137f3a8d57b26", "ref_doc_id": "106efec1-3ef2-4b76-839a-ebf826fe5c4a"}, "7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225": {"doc_hash": "c086997092ddc448ad2d607baa73b0a673675a4059c4571456fed12ea30a6d0f", "ref_doc_id": "175a6ecb-6ad6-4209-a404-5f54bfe21c40"}, "d4f0a0c1-6af9-4371-8f1c-6df39949b2ca": {"doc_hash": "1010d1ef27c460939aafad742a9672c33834be23cc55af0c79118d13c03eb1a4", "ref_doc_id": "be5ee50d-3c6f-486d-9afd-f7a9c55c3bd7"}, "668cc000-2d3a-4b9c-9139-61c68aa9558e": {"doc_hash": "d82990648618d85712161bee886f0d5c9d7b06926667d3978badadf429881b6d", "ref_doc_id": "589902ed-96c9-4256-bdb9-bbc7aabe4501"}, "a6c32c1d-a887-4823-91e2-2dc1ea1ed176": {"doc_hash": "86890a80754b48dfe5c39960d4d69eb23e441b1cc5afb738267ddc35a920c49f", "ref_doc_id": "9aa9a71f-a366-4736-b5bf-b505516c26cb"}, "65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a": {"doc_hash": "e8e1ab4000e88472992d63da5bc79e5222ec379eefaf58de840c84a764cf18ba", "ref_doc_id": "8f6507b3-d760-4773-9eb0-e332421d168f"}, "839ec461-96d2-4c2f-808b-652bed91fdd4": {"doc_hash": "8c6a8e8032b9de047c63f84060a04c73a1b030f6d712e767939b48ae26a8abcb", "ref_doc_id": "daabe32d-5584-4aed-b965-d9965b947fb2"}, "1d3b9109-cc9b-4291-b206-6f83e1469445": {"doc_hash": "0a5b0375425f4bb17622d56442eae5a1f3add2200eec6578e5a71a42a99cac44", "ref_doc_id": "97669618-e781-4a79-90d2-450dbcf54ed9"}, "e557fc97-6fa9-4c17-a1bb-c7b479507ef5": {"doc_hash": "edd96a276d46a83d49b9f7e7f87026616eeee48cf41d3c5bafdabd616bbfea8c", "ref_doc_id": "d7cd43c4-6d9a-40a9-9d4c-727d70ab501d"}, "51de55fe-fd42-4c76-ada7-a3559b5e8b81": {"doc_hash": "fde7972c9d1808defecc6eeb8107ffb98f209017d02f4c737947858595fae4ee", "ref_doc_id": "8d0c8c2a-b229-4f7a-8557-7fa286c9d10a"}, "73441bc7-37a3-4a67-a354-03b023d9ea7b": {"doc_hash": "8d565bfca3ee41b67c2c245350549f652d03e9ba8dbbf735bd6a4715245603ee", "ref_doc_id": "6a53f394-d6a2-4d6d-9f31-a27ed0a87769"}, "4f9abfcc-af30-4ba5-9227-9250eede43a6": {"doc_hash": "464eb9169e925f7d3531e65ed110e2be822dedb112fe2bfc1d3f10b6a16608c5", "ref_doc_id": "6c305455-6e96-4ecc-89dd-1df7efe41b81"}, "2ab4505b-c335-4a09-8282-e844350b663a": {"doc_hash": "d8ce13c477e112838dff6983f817f232efb027ec992c1f3d9642c635196c9593", "ref_doc_id": "20b58948-1447-4af7-a9b4-ef6d96f7d96f"}, "4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468": {"doc_hash": "6dabaf8d3e37a5e61958569185f75c9458e55901ece587163aa52f900c2468f5", "ref_doc_id": "686eba91-277a-4d2f-9260-ed8f086c0c4d"}, "5ab87346-3f17-49a9-b371-9d00fdd93449": {"doc_hash": "54d2b815811356e80eeff1668f40f6571998aff5f9a5da985bc6b27540edc694", "ref_doc_id": "e156d715-8cce-4505-96be-1397e91a4a05"}, "ae2282e1-fecd-4af3-9338-8aefb22552b9": {"doc_hash": "70d584669210f8dfd67b0f6bfb52a46027ad3c067df41ac7931934ecf8b802ee", "ref_doc_id": "1558aa88-0e5d-4495-b32a-a1444e6a906a"}, "c37aa7c1-fb3d-4346-9447-4e7a390f9f44": {"doc_hash": "cc49c63f1575f79dc8cb767db0e88015bd518f23892702a72c4b282bb804c8e3", "ref_doc_id": "2e8969bc-2d98-4802-a852-1085671cd73a"}, "df8fa25a-e356-4aef-a694-fd28da7c4f40": {"doc_hash": "95a7c9616da2ced62f61ce098cd6ca7bd899507d6de538b2d6b6e41afbea0d0a", "ref_doc_id": "1b235e4f-4183-46b6-a70a-6b45762de10c"}, "6105b9d1-3ede-49ed-a13e-0572ae58dfa7": {"doc_hash": "dad159e0453771c04bbbde9db1673483f24cb5f7c218bcf6c60db576ec9a5c14", "ref_doc_id": "b7ccbfe5-1077-46fd-bd7a-97c75464c57d"}, "7741b1e7-7351-46a0-a232-f7fdd1be55f8": {"doc_hash": "57eb5c5fa663a648209a0fdd2a5928b33f1fb009f79383d9443b5e9a48f08b88", "ref_doc_id": "c8a8c8c0-0e5b-49f3-ac78-7518e2f857ff"}, "c76028cd-c520-4946-9e32-224cc07270bc": {"doc_hash": "da209d9b2e524e78b3f665446ab5bab06e4347e5e5d12836684bbbb16a402d1e", "ref_doc_id": "3df377e4-2b7b-499c-8836-6aa90bad93c7"}, "ebc91681-6964-4d89-a75d-7e3dd21ebc5b": {"doc_hash": "fbb84ea5c23271e4f2dd020ad50b5faf98dac7c0af402ccd7366b11845a875c7", "ref_doc_id": "d2c01d03-f7e2-439d-aea0-e477c8f3d24a"}, "4435053a-8fa8-4aca-b237-b0772d86e5c2": {"doc_hash": "4b107e6b3293c6a0a6baddca714d9cf4cf68e4888fd4171e44d88e3ac067b12d", "ref_doc_id": "a86087f2-7daf-4bd7-9031-3190974a8413"}, "1b6a9a1f-b01c-40fb-9c4b-63ff0717029f": {"doc_hash": "8420f7069d5e8bc1cde417d0b05139e387ba43744d9d86e00b277ce18ccd4bac", "ref_doc_id": "d0078963-5e23-4c0b-8577-3b944b26768e"}, "93f9f162-30cd-4899-af89-5eb3add91ee1": {"doc_hash": "1ef3a678187dbee9453709866b0360b54cdba483f5d0cc980fbe17073d4aaf0c", "ref_doc_id": "8140f84c-a6d0-485d-9794-22d42ef940c2"}, "3253646d-b4b2-4888-b337-df2b3ab08c5c": {"doc_hash": "7770ba248b92c32fc798c13c8da9390716d1a0c6de478a281339498a582c702c", "ref_doc_id": "93124def-e3ef-47d3-a2fa-bd297bed6598"}, "c500dd79-4810-40d4-a4c3-d87743bb41bd": {"doc_hash": "7ea87f7d3b02bb08259e7dab6f261723905542bde75761f342bd1a31130fbb6f", "ref_doc_id": "496908fe-32dc-484e-8961-0434e121c9bc"}, "7df77f21-ee41-42e0-940c-20b634731c57": {"doc_hash": "34b539a235cb25261ad71839dccc84565877b018ccdd3e0e25e43a1c02b7d497", "ref_doc_id": "cffe4411-5928-4ffd-ad7d-390e81ae295a"}, "e6564c4d-b1e2-446f-8bb9-f1a95de03f3a": {"doc_hash": "406595f33066a8cf25ff55f284396fe75a8aae3fc2c83b3516821f780bd40d43", "ref_doc_id": "87b9d72d-be33-406c-a36d-de7eb6375dd3"}}, "docstore/ref_doc_info": {"9f837790-0e07-44fc-8fa5-12375f808fa4": {"node_ids": ["4baf4462-46b1-4b04-b8d0-21e59b184df0"], "metadata": {}}, "c0b4d635-1304-4a6a-b6bd-88a7aa7db544": {"node_ids": ["d17ad58f-dc58-439b-9464-7ae2819ace1a"], "metadata": {}}, "0d78d308-f4ec-423e-8f7a-cf313c9cda5a": {"node_ids": ["43412ee2-7a8f-4c76-9d04-3c3ff54e5fee"], "metadata": {}}, "b34a6b2f-e1eb-4d07-8a26-fa50f0a2e887": {"node_ids": ["44a0ff82-aab4-4adf-b2ac-b63875a862cd"], "metadata": {}}, "1514030d-8142-4860-934f-fde4d81e2405": {"node_ids": ["1eec0e0b-7f66-4bf2-82b8-716c491f9dc7"], "metadata": {}}, "21bcdd6a-23dd-405f-bc97-e9e38f4db7ac": {"node_ids": ["92e6e707-0fa9-4218-a453-cd08c7a38467"], "metadata": {}}, "46f38460-7311-4a34-bd0a-47b5333c3b44": {"node_ids": ["f9a0b647-6122-4120-b14c-044e7f6945ca"], "metadata": {}}, "f79c7cac-7c3a-4852-b873-bf7abaff55a5": {"node_ids": ["a0966056-50ae-4d40-99dc-e6d933becf54"], "metadata": {}}, "d759170d-e0cf-4c60-bc59-915083b472e8": {"node_ids": ["85dfba78-9cff-44c3-8e42-7c2766083a1e"], "metadata": {}}, "1553336b-957a-4938-9126-a6bf55e72c3e": {"node_ids": ["60aaf181-c600-4738-ab8b-34933f5131a4"], "metadata": {}}, "b03e529a-f887-462f-b72a-e42c4581f52b": {"node_ids": ["86b42913-aa8f-4827-a30b-155b69742111"], "metadata": {}}, "4bac8712-605b-4bb6-a145-98cee2515cdf": {"node_ids": ["f0f62f51-4a87-48ee-9509-6db3ba6d8671"], "metadata": {}}, "9d88a5f2-1543-411b-b866-d8424d6afa5f": {"node_ids": ["399b0c51-72d6-4810-a59c-1d1b59a89b57"], "metadata": {}}, "49940627-84f5-44ae-92c9-a41d859a7f44": {"node_ids": ["edac23d5-1999-4249-aebf-7f904ef874b9"], "metadata": {}}, "6400bf89-a736-42a5-b9a9-cc5a9f024abc": {"node_ids": ["edadf7aa-37ec-41d8-b8db-edd32a1bf67f"], "metadata": {}}, "01eaa419-18bc-46d5-a153-c1888a36cfe7": {"node_ids": ["9035cc73-d75f-47a9-b1db-62d36ca83a80"], "metadata": {}}, "c435f901-a65d-42b0-b33a-e99f11bc7236": {"node_ids": ["0c561569-64ea-4cdc-92a7-870318c983ad"], "metadata": {}}, "2fae31da-603e-4183-981f-df854cf0406c": {"node_ids": ["3281d5aa-af5c-4091-843e-3039a29af228"], "metadata": {}}, "bad08cc7-4fdd-4f82-8a60-469fa255464a": {"node_ids": ["dac34c60-781f-414e-a618-517fa049d8e5"], "metadata": {}}, "f5341aae-332f-4b5f-a60d-6dc93cbca1a1": {"node_ids": ["c734333a-fbfd-47ba-ae18-cd3d02a5ee64"], "metadata": {}}, "3542a9f9-3469-4e7d-96be-1f4d3dac83e4": {"node_ids": ["c2b5ded0-c5a3-4102-991d-9ef3afd1a75a"], "metadata": {}}, "c0f3b3a5-8373-4c00-8a9c-5f344e7c73f6": {"node_ids": ["ed58c28a-a388-4a04-86ad-22eda62a1bb2"], "metadata": {}}, "38561f3b-8413-46c8-baa9-a73219d50969": {"node_ids": ["1241d19d-6866-4e23-ae1c-8c8c3d93c94d"], "metadata": {}}, "279dce82-2d56-437d-8886-ba7d458b79f2": {"node_ids": ["b340860f-165d-4a35-b432-ab38744102cf"], "metadata": {}}, "37ed75de-949d-4e65-8037-58cd1a5ee4e0": {"node_ids": ["751e4cfe-fc88-4c7d-b914-a87bf7612652"], "metadata": {}}, "09fba88a-c052-45dd-849f-df499f17953d": {"node_ids": ["f4bd61be-ef8a-4bbb-bb35-b668ed4dfa39"], "metadata": {}}, "1c690737-241d-47d7-b92c-1a4f11d37c30": {"node_ids": ["83fa51c1-b77e-49a0-a049-b9af0a806f81"], "metadata": {}}, "a8804949-90a6-4b3e-bb7e-3bfa1b688a0b": {"node_ids": ["51c52a78-0258-4ff9-9d5c-f977869ffe18"], "metadata": {}}, "0c7e182b-5cc8-4e79-98b3-d5db498b3587": {"node_ids": ["b3672af8-b97e-4dcc-8d50-4bf8e2013156"], "metadata": {}}, "85d55c1a-fe08-4741-b0f4-a2edaa47b9fa": {"node_ids": ["3f6a02a8-d1fa-469b-bf61-862f38a15436"], "metadata": {}}, "5418f586-4bfa-43b6-8837-bd391fd87867": {"node_ids": ["c7d71d6e-3b18-42ac-afc9-138514abd91a"], "metadata": {}}, "6d656e49-ecf9-42ca-86c0-103aa7e7a674": {"node_ids": ["1c3459f4-0950-43f7-a7cc-64976e4e3b9e"], "metadata": {}}, "946d8ff6-d338-42b6-afc7-6034d731b2df": {"node_ids": ["24933012-467b-4b29-8553-03a4864e4d88"], "metadata": {}}, "3c98a572-c871-4b0a-bfe1-fb8b658cc74a": {"node_ids": ["56e3e143-0db0-495b-a2e4-25aea1b63194"], "metadata": {}}, "9768df35-69fb-4e62-9184-47e1bccc7da8": {"node_ids": ["2aee1504-ad8b-46f2-b754-4284eca3c0d1"], "metadata": {}}, "ca35e230-dbba-4daa-976b-e198d39639de": {"node_ids": ["d0d884fa-11ee-427a-980a-c231fd22c7ea"], "metadata": {}}, "749bb1e7-da46-4306-ad5c-9a92362331e5": {"node_ids": ["a691493d-ac2a-4e9e-90f2-e24a3b6b0888"], "metadata": {}}, "9abf78b8-26f8-4989-a0f1-facb9f0b306e": {"node_ids": ["a663210e-371f-459f-8b1c-906362a7089c"], "metadata": {}}, "7c4be381-4c53-4277-acee-774c8f52f7b3": {"node_ids": ["c29ec131-469b-4975-a97b-cd5e51551d11"], "metadata": {}}, "b55f027c-5ad7-4d29-9acb-2e3dc5153476": {"node_ids": ["2d3cc238-a404-43f2-a71d-900b39b8582e"], "metadata": {}}, "64ceabfa-4441-4ebd-b091-663ecd17f45e": {"node_ids": ["ae75d3b4-e7c2-45a8-b19b-72d94a982026"], "metadata": {}}, "02887fc6-e816-4bce-9fdd-93212193c11f": {"node_ids": ["3756d990-8290-4de3-a440-2af6f700c70e"], "metadata": {}}, "65dc8cc3-31a1-45cd-955d-d4b131735a6d": {"node_ids": ["7fc21e30-ec39-4b08-9629-c24956837a62"], "metadata": {}}, "9e1ecd30-af2b-40b2-8526-0ed0a1d95ae2": {"node_ids": ["f173ed58-a77c-453a-a210-6b5ef16af950"], "metadata": {}}, "f55ef5dc-7358-40a8-9443-cf63c41e3f95": {"node_ids": ["b6e76d56-2a9a-4465-8c86-4432e4978126"], "metadata": {}}, "79ceaf7f-d267-409e-94f6-f7c7b278de39": {"node_ids": ["4f8ad4d5-5251-4714-85e8-48c86d25a8aa"], "metadata": {}}, "6b21e160-bd7e-49a7-80a9-af4e1abfa0c9": {"node_ids": ["c0108431-29d9-42c1-8fa4-35d80742ff2e"], "metadata": {}}, "aa3283a3-1f45-47ab-b4e6-3c5f4d716331": {"node_ids": ["08fe89b4-ff5c-4285-aaff-f547e4954e39"], "metadata": {}}, "3447f5b0-2eee-46a9-a552-b980f65ad2ae": {"node_ids": ["7157fd64-8441-42f8-9bf9-4f3ebaffeb14"], "metadata": {}}, "ff488a7e-950d-4b21-bbdc-9a0c1ac8069c": {"node_ids": ["680dd47b-ad0b-43e6-a14e-11d3cdc7d8bf"], "metadata": {}}, "e1be24de-e1ee-477a-881d-342d4cbf4035": {"node_ids": ["2d60da06-e2cc-4d9b-a8f8-f6a08289a06c"], "metadata": {}}, "8c0b980c-087e-4331-ac5d-d41fc401b73d": {"node_ids": ["5535e2a7-4f71-4a01-bc72-85a925bade40"], "metadata": {}}, "d822aa0b-1039-4081-afc8-9bceae5e9b25": {"node_ids": ["7ae31b27-b741-4a42-a713-1a96b573d558"], "metadata": {}}, "e4cb4fa7-3953-4a4f-a848-d7aaccaa079e": {"node_ids": ["3743bcf7-b80d-4d7a-805a-393f81f350a2"], "metadata": {}}, "b86c477d-8fe7-4749-a06e-71ead87bbc0d": {"node_ids": ["fa4a664d-1714-45e2-bdbf-aa7b9be1ead8"], "metadata": {}}, "3b7b735f-5a05-4b33-82eb-d26314d951cb": {"node_ids": ["73e2e9a4-f9ce-4576-b9e2-293d06615026"], "metadata": {}}, "e7b892fb-ddc6-4380-8a82-cb9eaebbca14": {"node_ids": ["23713b43-23a2-4388-9704-4127744a4ce1"], "metadata": {}}, "a7d46d3a-e4f2-492b-a531-916509641dad": {"node_ids": ["c788a562-545d-4b94-a1cb-74e8eedc110b"], "metadata": {}}, "14f4c572-0807-4a93-af8d-4bfbc6cf9f42": {"node_ids": ["926fbdf1-0830-4f5b-8e54-1a65108c4371"], "metadata": {}}, "ff0e1281-a48d-47e0-b187-2814f6d0b0e1": {"node_ids": ["a14244dd-78df-48f9-a36c-ac599b7de7e5"], "metadata": {}}, "f8224af1-1901-455d-b33e-a99bc2ab6dab": {"node_ids": ["a2916db3-0bde-419c-bf5c-d3e408ec8878"], "metadata": {}}, "b1877f4b-c06d-4636-9586-f8b68ba6af28": {"node_ids": ["339f6db4-f92d-4d22-ad0a-e0c5ba93fc7e"], "metadata": {}}, "a70c500e-dfde-4cbc-b1e2-b2fe3a094762": {"node_ids": ["21cae550-a792-4b3d-b88f-4bbfd45f4b14"], "metadata": {}}, "800c1c01-c43f-4c0f-9454-89119d2f20ef": {"node_ids": ["801bec80-3d4c-422f-9f57-f8d68b6ab82a"], "metadata": {}}, "5a9373f9-6bab-44c4-8ab0-ef59dbe439ce": {"node_ids": ["9d30b813-40b9-4761-93a2-567b588cd93e"], "metadata": {}}, "63ebc2f3-982f-4942-85b6-c479ce10b386": {"node_ids": ["9253646a-5800-44f3-8010-9e5328ef2b74"], "metadata": {}}, "d4fbeae7-1153-4d5f-ad30-d67896f79bc5": {"node_ids": ["cd11f445-7232-4d6f-84ec-dc17b5f3918b"], "metadata": {}}, "d4cb580c-31d0-4b58-9878-61aba678f106": {"node_ids": ["e58b2063-41f2-4bc6-8d88-952075dec1b0"], "metadata": {}}, "94568cc0-71a2-4dd6-bbc1-d113b06bb5dc": {"node_ids": ["9b827bfe-da08-4c73-a2a7-b4dc59f8d78b"], "metadata": {}}, "a3d72201-b853-4275-81f6-43540564ea71": {"node_ids": ["17222984-4cfe-4c48-8b58-857a0b89b833"], "metadata": {}}, "b1a805b5-8bbf-4cc0-88ec-824791423d04": {"node_ids": ["34404b09-17ec-4a30-8014-b22e683bc700"], "metadata": {}}, "52098b39-6941-49d5-ba6b-1e73720945f9": {"node_ids": ["40bbd5e0-a82d-434c-88ac-6b6814eecb47"], "metadata": {}}, "b9b2e6b5-db09-4934-80fa-bdbc877c159f": {"node_ids": ["2c286414-ec3f-43d1-b1b1-2aec3c78be9b"], "metadata": {}}, "cc5a10a7-75a0-494d-94f2-5f45da7c20b8": {"node_ids": ["76a9dba2-0537-471b-b72b-b869edc619dd"], "metadata": {}}, "1fb4170e-3897-4997-aa3a-8e4066ffddbc": {"node_ids": ["bf6584a3-b706-4cbc-9933-bdfbbe193ff8"], "metadata": {}}, "0824898f-d511-465c-9db4-776d288f131f": {"node_ids": ["b5ee7649-1745-46ee-968b-44cffc6c79ce"], "metadata": {}}, "31597250-f281-43d8-bfc0-80f89b283453": {"node_ids": ["c837eead-f4ca-4fe0-a013-963f0269282f"], "metadata": {}}, "b9d1c02e-0773-4f18-b08b-e71940a04ebf": {"node_ids": ["3bbe29f7-83a1-40d4-9fe2-ea4c54a3d1e4"], "metadata": {}}, "4a4d2ead-71f4-4e0f-a1bc-f8096bdae699": {"node_ids": ["57a50616-24ad-4c34-a468-18fd195e5949"], "metadata": {}}, "f64a2bc8-d50a-4368-b242-e477930bfd6a": {"node_ids": ["66d977b5-6ee9-4ccf-a686-5bec4604febb"], "metadata": {}}, "ec98d5f6-6fe7-46fb-a389-31856ad7ac9a": {"node_ids": ["f2e70c3e-0703-4f78-9e9a-70949660aebd"], "metadata": {}}, "57c4465a-e712-40e1-b70b-c4461547908f": {"node_ids": ["68a8a736-e74c-4709-a535-3aba786f31da"], "metadata": {}}, "5f0439ee-0f69-44a3-8e56-043dcaab7fc1": {"node_ids": ["7dc6af21-60a1-44e7-97ca-a5307eebe8aa"], "metadata": {}}, "90d2538d-fc7c-42c9-8d67-322db4b5c1b5": {"node_ids": ["7b356574-4dbb-4d47-86e1-fe6783e9a30e"], "metadata": {}}, "1a3adb64-953b-468d-ae07-c48bbd48a4ab": {"node_ids": ["f3ae6cfa-3659-4bc9-829e-e2a61a839bf3"], "metadata": {}}, "1c1bf24f-5bed-4292-bdb8-339ad4e699fa": {"node_ids": ["a197e3ed-1d75-44aa-8a41-a6a051c39dcb"], "metadata": {}}, "27ddbf86-ca33-4585-8cb7-53dbc3232863": {"node_ids": ["310c7a4e-2333-4eca-9e7f-37521c558d1b"], "metadata": {}}, "d299ccb0-ef2f-4c2b-af97-9c4a3f001b3f": {"node_ids": ["5f779259-4d3c-48c1-bb41-e809e06e6a5e"], "metadata": {}}, "546068a9-0f26-485c-a190-d1e7815c3ee0": {"node_ids": ["9eed830a-ce1b-4e9e-ad4d-e1d454c56a21"], "metadata": {}}, "3f3c868d-7a95-46c2-a96b-38c735ae0f45": {"node_ids": ["9a206ec9-3b2f-45e4-969e-737b648e876f"], "metadata": {}}, "0025c555-66e3-4093-8dbf-22a7f964604e": {"node_ids": ["ed2a4d82-46ee-4007-85a8-0c4f29e044f9"], "metadata": {}}, "0b63d8ce-3b7c-4c01-9877-0d1f4ba0f0d3": {"node_ids": ["bee743fa-cb63-4d2b-a938-a72b127cd6d2"], "metadata": {}}, "50d48a42-5f4c-45d5-8539-b46f83b5fc2a": {"node_ids": ["40eef8bb-2b4a-4a06-b523-d96bec478e3b"], "metadata": {}}, "fc0506ad-4816-40e6-a71a-c6903d77a307": {"node_ids": ["17754f7a-2bc1-4872-8e9b-ffc0ed7c1daa"], "metadata": {}}, "01269aef-e414-4955-a267-a20e3f9bf88d": {"node_ids": ["90e1087a-ebf6-4612-a8ff-e307e59fb18c"], "metadata": {}}, "b10de07e-8b17-4863-a00d-fc99e883044e": {"node_ids": ["1540a4c7-71b2-46ae-a120-ffb112a50308"], "metadata": {}}, "726ab1a6-3676-4271-bb8a-93cbee35bf43": {"node_ids": ["444f244f-50e4-4443-b064-8c473723e46a"], "metadata": {}}, "736cf82e-c1fa-4af7-9d46-4efe2f833dfd": {"node_ids": ["240aa3fa-cabc-4608-a169-f3c6646a76c7"], "metadata": {}}, "5c17d48f-2e5e-4987-95d9-0a46a4d77c25": {"node_ids": ["89716225-2cc8-4995-b518-7e9a2d987a07"], "metadata": {}}, "7888b8f8-6b8e-4ec8-bf8d-73dd8af22270": {"node_ids": ["c06307b8-e7e8-4c14-a1c7-41f15a8c16e0"], "metadata": {}}, "6b3321a2-e371-4643-9850-a6a33ecc4955": {"node_ids": ["3c9d0583-6c3a-4b93-912e-026ab46a6fd7"], "metadata": {}}, "cbd32d7e-9568-49a4-88e9-fdae9b2f0587": {"node_ids": ["b9469608-11d5-4ed9-9974-02017fb12741"], "metadata": {}}, "e6c630ef-0145-4025-b43c-9c99389801c6": {"node_ids": ["8ecc8d4f-a981-4293-8454-b8a7ef8b42e0"], "metadata": {}}, "23bd1efe-ef16-4565-aecf-60df4efca582": {"node_ids": ["c555cbe6-f03b-4677-9ed5-0088602fed21"], "metadata": {}}, "7156ed31-8a22-4684-ad4a-570efed464d9": {"node_ids": ["cb8ad650-3530-47fc-a9e3-9994cec7cce0"], "metadata": {}}, "69dbae18-c6b1-450a-8d6e-9323a7dbb39f": {"node_ids": ["aa8a9c25-9361-41fb-b33a-17c6e260dc8b"], "metadata": {}}, "11bba3a9-8aed-4712-85ea-ea81ed673de2": {"node_ids": ["342e14be-bcb1-47bb-b2b1-052f553bb98c"], "metadata": {}}, "d3053965-45b7-4112-9952-222435a95688": {"node_ids": ["1d9b984d-6eb5-46a0-882e-f045f5f463ec"], "metadata": {}}, "a601cc7f-2518-43ca-8fdf-cda207c8c65f": {"node_ids": ["8563b831-6fe8-4889-b2a8-105e06931aaa"], "metadata": {}}, "0b5a5c19-23e7-497c-83ae-a780d950c83a": {"node_ids": ["21771d7b-17b1-4b33-a8e3-aef2f551d489"], "metadata": {}}, "c43d7ebc-2c1a-43ce-8999-13f8dbaeda77": {"node_ids": ["22e997e6-e747-45af-8ca2-36b3d3a1ddc9"], "metadata": {}}, "0e0a1f41-8590-4eea-8989-a86a6875e25f": {"node_ids": ["78e1ea45-692b-4c73-a7a0-28ac78cbc2ed"], "metadata": {}}, "bddeaf4d-1c10-462a-a253-8056f23997b1": {"node_ids": ["b82bc74e-b918-4665-b7bf-8d3ce6ede9f7"], "metadata": {}}, "0bdb2cd6-cb98-4735-b9f3-08be3e727391": {"node_ids": ["db8ab397-c013-4cff-bb07-5848898647b2"], "metadata": {}}, "4c924759-88bf-4338-878f-503af56598cc": {"node_ids": ["a6757937-ee09-40ab-99f9-2c7cd86056f8"], "metadata": {}}, "885c0ae7-aa50-4a2e-951e-1f31f51f4e87": {"node_ids": ["17066d66-b608-4e18-afea-48b1296adb9b"], "metadata": {}}, "56b1b63a-cc4b-4b11-8525-e7a31ce4560b": {"node_ids": ["6ee0fa23-dec9-4ecf-8134-d267721662ad"], "metadata": {}}, "c6ce5105-0940-4931-940d-5e959cbbdcf8": {"node_ids": ["a93d3cf2-3902-4a6b-9c84-68dce525cc3f"], "metadata": {}}, "ffdb48c1-540f-4e87-82d4-13bd9f06c5df": {"node_ids": ["737e1234-5f08-4793-90da-6a3535d51c14"], "metadata": {}}, "3a50bb10-c4de-4622-93df-d85ec4f157fb": {"node_ids": ["13e480ec-709e-4183-89bc-d1900d39f0aa"], "metadata": {}}, "0a27ba6a-8183-4f50-8529-b4c4b33196cb": {"node_ids": ["8fbfabf9-db30-4ed3-a1b9-05c6ea471b55"], "metadata": {}}, "dc11b16e-c889-426a-8745-23ee8b2c5ae1": {"node_ids": ["417bb67c-9197-42f8-8218-2edc17cadfac"], "metadata": {}}, "6f6905cb-357a-4a63-bf29-5ed3fb4eab17": {"node_ids": ["fcc94ce7-b009-4954-a1a1-748e0c15acf3"], "metadata": {}}, "ef23d3a4-21e3-4491-a810-4a3a9e074b39": {"node_ids": ["6f7d10f9-369b-4853-a291-fb72e68cabf3"], "metadata": {}}, "fe5e191f-f29f-4075-a62f-512139a44265": {"node_ids": ["f779793a-597d-4ffc-9ea3-955dd7b25e0d"], "metadata": {}}, "f56b4c20-e1cb-45c3-9932-d2dffdac61e3": {"node_ids": ["87da93c0-db0f-4afe-a3fa-ec24eb256125"], "metadata": {}}, "22df2817-82e8-4a2e-bcd1-74842f1b7e9d": {"node_ids": ["2d39d561-d579-4f02-b825-9a6bf7982b1a"], "metadata": {}}, "d8f7e772-f388-40d2-8b63-8d7ed581b37c": {"node_ids": ["dd841c0b-a27d-4bf8-bdb7-aab004a5967c"], "metadata": {}}, "d674128c-63d1-4802-b3fa-42d450b99b82": {"node_ids": ["4b0a6a96-990c-4f02-844c-f2658b3e4f72"], "metadata": {}}, "4da90f9a-6464-407b-9ec5-085f74e1d997": {"node_ids": ["4c5758d3-df1f-4141-87f9-e92cdfec31b0"], "metadata": {}}, "c7951835-b97b-4f2f-9563-7f3597582689": {"node_ids": ["05b9d29f-cb36-415a-a61e-e521ad432b17"], "metadata": {}}, "69dbccde-a373-4954-8b13-7c9768990bed": {"node_ids": ["61ae2c55-b986-4ea4-a8be-ed29b99ab7e3"], "metadata": {}}, "5a6604b9-0050-4b51-b0bc-1c7501c298be": {"node_ids": ["3f5ec293-9fa0-495a-8293-4ef6e01aae54"], "metadata": {}}, "f0d95cf4-76ec-4f3d-83ac-75acdef47117": {"node_ids": ["f0e12242-ad05-47b7-9b22-a5d19c5fcf18"], "metadata": {}}, "90ffdaef-99cf-416d-a7cd-b1cabd26c338": {"node_ids": ["1cf61dd0-11d4-466c-a72d-77ca69b83b3c"], "metadata": {}}, "8265ac69-c94e-4be3-845e-8d94b8798d79": {"node_ids": ["87e03c28-0a6b-4133-9376-584a4e92f740"], "metadata": {}}, "b9008f91-7f64-4978-9943-25522b17a06e": {"node_ids": ["1254296b-4b99-49ac-abd1-9afe3e82f053"], "metadata": {}}, "8a58a202-15e6-4769-9cba-ff2d3dc321bb": {"node_ids": ["ee1d72ab-3f2d-4071-9b67-7eaf050b0f76"], "metadata": {}}, "0c914b27-125b-4c34-8cc3-c2772c1be762": {"node_ids": ["1b3433d9-5275-4a30-86bd-0c919960a478"], "metadata": {}}, "7d5feb65-c194-4b16-8da6-82415fb6807e": {"node_ids": ["b75d5b1c-09a8-4b93-872c-80061dbcb2f7"], "metadata": {}}, "ef87d969-83c7-44ac-b0b3-61fe7b92e227": {"node_ids": ["f761d02a-d882-4171-8af3-d96415e3570b"], "metadata": {}}, "def39dea-7d06-4094-b7ba-f65b01e06d98": {"node_ids": ["94f054bf-74ed-4c3c-b3ff-c29f1d317fe7"], "metadata": {}}, "d3849c60-a598-496e-b925-30ba1036f26d": {"node_ids": ["5dda3144-e265-45e2-824f-2d24fa1248ce"], "metadata": {}}, "dbbb0a02-e8fd-4d85-8bd4-a92c42fcdca6": {"node_ids": ["53a31736-4e3f-4c9b-9e4a-391c58305bef"], "metadata": {}}, "ec7601af-cc8e-4ab5-999e-a824eb1fdbf9": {"node_ids": ["b63af6f7-a6bd-45ba-a412-83863ba699d2"], "metadata": {}}, "6944ea0b-487e-460c-b47c-febe2807db68": {"node_ids": ["05df9c94-d230-4878-b77a-729856240e6e"], "metadata": {}}, "b0ac1376-3859-4fc3-9ce0-cb1501f278be": {"node_ids": ["0d371018-7407-41e9-b3de-02b2ccb802fb"], "metadata": {}}, "6b9fe8c4-38de-41fe-911e-87f8853952fb": {"node_ids": ["99909c26-6b94-4afb-9af0-40e082b83b45"], "metadata": {}}, "91c0a7b2-78c2-4ddd-9495-7e5175ec01b0": {"node_ids": ["56300bc6-88bd-461d-9c3c-0f1426200e0c"], "metadata": {}}, "b2217c41-fcbc-4561-b5b6-eb533a64f703": {"node_ids": ["b832b658-f9b0-475c-accc-d653b2ebe356"], "metadata": {}}, "1b9c6aa4-a68a-4ac6-bbb9-9e96652f7220": {"node_ids": ["b7397336-aee1-488b-9720-b504ecba12e4"], "metadata": {}}, "b98a40b3-82ad-4038-a98b-19f0f34ac2dd": {"node_ids": ["e925a6c5-6fee-44ce-94a1-9220e2d74e33"], "metadata": {}}, "1622d2aa-d8ec-4196-8aad-7134a8b171b3": {"node_ids": ["47df33fc-01b5-4192-86b4-d70a3b5f0f56"], "metadata": {}}, "cdee89b8-f130-4814-ae01-ea824d14b95a": {"node_ids": ["cacca074-c80a-4e17-9b00-7222d8d735d4"], "metadata": {}}, "48f73b8e-f4e2-4fe5-ab85-2e825998f993": {"node_ids": ["7e6abc97-6918-4537-a376-10a608523d0f"], "metadata": {}}, "a75d7776-845b-40c8-b6b8-2e7d593bc106": {"node_ids": ["28a7e6c0-9919-4eca-9b6d-2d2a1064e6de"], "metadata": {}}, "acc44452-cbf1-4dfa-9ac1-f18f2ecd46eb": {"node_ids": ["70077349-7b30-40db-962f-a3766e3c1090"], "metadata": {}}, "580291f3-80f1-4360-9cde-871ae80da153": {"node_ids": ["99dca7f9-aa20-41cc-abf9-dc9745127573"], "metadata": {}}, "b76d4b1b-f99d-4b89-b451-c8c0274fd778": {"node_ids": ["7dd2a390-0f82-4acc-a535-7b34b5328be4"], "metadata": {}}, "c04b38ee-6fe4-4516-bd34-8c27b562117f": {"node_ids": ["fb18cdee-97ec-41aa-aa65-6ce3a49e7708"], "metadata": {}}, "5fd378f3-4450-42f4-b972-f1d94feb4b57": {"node_ids": ["2b7f13a6-2a2a-4444-996f-52146b173865"], "metadata": {}}, "0e89180b-5bf2-485b-922e-a687f655d37c": {"node_ids": ["eac53cdb-5a67-4790-a0bf-1b02771b8162"], "metadata": {}}, "f6658450-7d62-44a4-832f-739f92745711": {"node_ids": ["eea40d40-a74d-432d-be26-58ef54f56646"], "metadata": {}}, "c91658de-1b83-41a4-8398-706689d64a2c": {"node_ids": ["9f17ef59-4cbe-4c26-a986-5825062dc368"], "metadata": {}}, "de8a8188-6af7-416d-a0c6-7ae69514f84d": {"node_ids": ["a370df99-7952-434c-b65d-187a19e143c2"], "metadata": {}}, "85a6115b-f3c9-41ef-ab14-a0af2c6149c3": {"node_ids": ["bf1b29e3-9290-407a-92ec-375f0bd73491"], "metadata": {}}, "25d87206-f60f-4a1e-80ab-a56cca0a46e1": {"node_ids": ["b45e3e7f-2d17-4d7d-b9dc-9ee81a9b9e33"], "metadata": {}}, "9b0e6327-bc02-4b09-b4c5-dd83454d0f8d": {"node_ids": ["1319e110-8696-45e5-897d-1d9128fec55b"], "metadata": {}}, "2a709ea8-f6b7-4b59-b85f-27e6e70375bf": {"node_ids": ["2d7395b7-f6d9-46bd-af61-cfc0d4c9f47b"], "metadata": {}}, "9441eecf-0fff-476a-9610-bb833ce63db0": {"node_ids": ["fca4b6a6-b5d3-4a1f-b891-705633d526d5"], "metadata": {}}, "3f8efd17-40a2-4868-923f-4e82c36e0e0e": {"node_ids": ["8c1210cc-3951-46fc-ac48-7193ae6a21be"], "metadata": {}}, "133c03e7-43dd-4d9c-bef0-2572531fba06": {"node_ids": ["5a65a88e-9bb3-4aed-a561-61261edab9a7"], "metadata": {}}, "25730df5-4a9f-4e26-b3ce-53de2d1bdc18": {"node_ids": ["5083719b-8ccf-472c-b148-30b0e7ebb0ee"], "metadata": {}}, "d03b855b-4277-4f62-aa29-43afce90108f": {"node_ids": ["8b97bf6c-250b-44dd-af6d-2681ccfd273c"], "metadata": {}}, "43840cad-0a64-4f27-aba2-437b8975ca7c": {"node_ids": ["86ec58d2-a878-4fb6-847c-52183df30813"], "metadata": {}}, "d84ff050-4d37-48f6-b823-eb3fb94fa0b1": {"node_ids": ["9509a148-202d-479c-9511-c97ef8a99b52"], "metadata": {}}, "2d46502c-bd38-4ede-bbd4-495b47d7e12f": {"node_ids": ["18556d88-95fa-4a91-bbf7-8da16d14f392"], "metadata": {}}, "b792b014-1aed-4def-820e-4d7fb1e7bf73": {"node_ids": ["47aa688c-6f1c-4a0e-9de0-4485bf538e08"], "metadata": {}}, "485eb1ed-c4e1-4fff-88d5-c448fa221b02": {"node_ids": ["4d3820c5-7e33-49af-864a-7b2c5c14e401"], "metadata": {}}, "85e15b9b-0d54-43d6-a9d7-72dde4ba8973": {"node_ids": ["baefb61a-aba9-4abe-b8ee-cef19bf2aa25"], "metadata": {}}, "eb0bb849-261e-41c7-a5e3-badef4ef092a": {"node_ids": ["6b55b4e9-5f75-41a3-9f50-eec1f032c46d"], "metadata": {}}, "c433aaf6-2a11-42c5-9c7f-997f12889758": {"node_ids": ["7b125472-5885-4ebb-944f-c5a19aba1166"], "metadata": {}}, "3e332211-1d1d-4c9c-a8f5-faad63b2e501": {"node_ids": ["cce41510-02a2-4486-bdc5-4fbbc0951d19"], "metadata": {}}, "da18e335-d659-4135-9cd3-bd9fe827653d": {"node_ids": ["8832ca76-2271-4f37-ad70-7a63811e1c25"], "metadata": {}}, "c8824fab-93d8-4884-8fa5-3df24309e156": {"node_ids": ["cc931d08-3748-4443-8e0e-8ab07bb925ab"], "metadata": {}}, "029d12b7-5cc4-495f-839d-b29588430f4f": {"node_ids": ["e1bdcb4e-13f6-4e52-8c73-542a6b514205"], "metadata": {}}, "6ed4ebe8-b501-410c-8d93-b2397fa83b54": {"node_ids": ["a9530275-1a96-41e9-8bc4-cf788b8284b3"], "metadata": {}}, "02c9d4ae-af0b-42f2-8770-bd83ba881176": {"node_ids": ["faf279d8-2686-4296-a25f-6af0400aa624"], "metadata": {}}, "1dc36a62-a0fd-4597-b805-65ab5ba50f16": {"node_ids": ["60703d3a-f4a7-47be-806f-ea72b24ebcbe"], "metadata": {}}, "fd4a7439-c90c-4661-8e1d-c960fca46d4d": {"node_ids": ["fea17699-389f-434e-b490-a3f7d0494313"], "metadata": {}}, "8cf06d78-6b5b-4407-8a76-90404007f1b2": {"node_ids": ["d82b6a2f-93f5-48b7-a9a7-b2ddf29ccd48"], "metadata": {}}, "1b67dfc9-60b6-45ab-87b4-76951db8acbd": {"node_ids": ["07375756-0465-40ae-98e0-f35453b84bde"], "metadata": {}}, "91f22cf2-cdfc-4898-913b-a651348e6c2e": {"node_ids": ["3389f99c-0365-483b-a06f-a3c538260a89"], "metadata": {}}, "fa5484a3-0e67-4338-977f-dd61d4ca4075": {"node_ids": ["3b75477f-3a36-40d4-852d-597a3e0fae56"], "metadata": {}}, "a5cc8f74-2501-41a8-8134-a625430e23ed": {"node_ids": ["839b19a0-bc2d-41c6-8d36-257708d9e27b"], "metadata": {}}, "9441cb22-ee76-431a-bd30-76bba5fe3fef": {"node_ids": ["efc65296-1b96-4be3-8697-81f8b403aebb"], "metadata": {}}, "a1f55f21-4657-4da8-89a2-7dd32fb42d5c": {"node_ids": ["5b5398d9-9738-4b1d-a914-f99dbcd4e49e"], "metadata": {}}, "af056eb7-5050-4b2e-8672-d832e080873d": {"node_ids": ["061dba23-dc9f-4d09-81d7-019410a950d0"], "metadata": {}}, "4365a805-929b-4e96-be61-ef73018d003d": {"node_ids": ["dc62d90e-75a6-4da5-bfcb-ca69d7b03e7a"], "metadata": {}}, "660a6b27-868b-4273-a28e-87a1fd7a150f": {"node_ids": ["b163c55b-a88d-4ef3-aa97-254e0e513baa"], "metadata": {}}, "9be281f8-6084-4da3-9c33-f7988e3533cc": {"node_ids": ["ddf98014-b0db-4090-ac63-7bf9f169fe0e"], "metadata": {}}, "0f97b675-c1b8-4754-a09f-7c385ff396d5": {"node_ids": ["53cab28e-abc6-4a4f-b645-553a7aed6321"], "metadata": {}}, "1a666200-77e3-4b0d-af82-e260b7c311a6": {"node_ids": ["904d9f8e-c859-4f19-ba91-a4270716d33c"], "metadata": {}}, "9ee4da73-0299-42c4-9a33-a2daff840a34": {"node_ids": ["9a835099-9e5f-426e-90de-0c966952599e"], "metadata": {}}, "2b9457e7-20f3-436a-9a9e-2441e55c245c": {"node_ids": ["f644fffa-88af-4eb4-8509-8a54a4bfb4d8"], "metadata": {}}, "5be32343-a17a-4734-ae67-f366d99ca1ac": {"node_ids": ["83f6f991-db0f-4527-86cc-65e7fb683baf"], "metadata": {}}, "10c210d2-a93b-4461-9bbc-ec88f5e78dba": {"node_ids": ["db3e303c-5d55-418c-99b9-5050758dc25b"], "metadata": {}}, "0b146157-cb0d-4c1d-a18e-e4f7d9a1d281": {"node_ids": ["a13a9b17-3d16-4adc-86db-71408860e865"], "metadata": {}}, "850320d2-bec2-4c39-b863-462d24f86926": {"node_ids": ["b170cd61-17f0-4677-ae53-65ae00359b85"], "metadata": {}}, "1cbad5d0-eb86-485d-8df4-08e9bd8189fb": {"node_ids": ["9d42a912-e6f9-4182-842a-ea041436f194"], "metadata": {}}, "9ce3b0c7-0884-4061-b62d-0a36504d4db7": {"node_ids": ["248ebe53-5528-454a-bc63-c127decd63b6"], "metadata": {}}, "e6b8895f-f81c-43d5-b992-043e95f84ce3": {"node_ids": ["7a929d1e-9189-4504-84e9-a8dbb3531945"], "metadata": {}}, "83c7913f-5bae-44b7-af55-50698092edbb": {"node_ids": ["24ef898d-2f22-4fee-8b59-79465a7cf831"], "metadata": {}}, "f893b623-dd08-45bb-8f3c-9fb3c0b3ee85": {"node_ids": ["4c04df0f-4719-4d6c-937b-54b36e0557e8"], "metadata": {}}, "3fc03d3e-4786-4798-9dcc-73c172831b48": {"node_ids": ["94cc32e7-6487-4a54-8642-c1c22002cfba"], "metadata": {}}, "2ba397eb-6d39-4584-bb2b-8b427da3d25a": {"node_ids": ["057fbba6-1944-45bc-8f9c-8541b5cd991a"], "metadata": {}}, "1d90a201-1189-42d3-a7b4-3e1f650d3eb9": {"node_ids": ["42624bdd-7325-4abe-aa57-b6703a8b029d"], "metadata": {}}, "60a8530b-d0e5-47d6-b516-1f5d4eb663e3": {"node_ids": ["5b380bae-b186-466e-b888-af23effe7eb7"], "metadata": {}}, "7b7d3550-751d-465e-bbbd-ab277d5acfc6": {"node_ids": ["f2a094f6-2db9-48ef-a2c9-b2e0470a52ce"], "metadata": {}}, "74f13071-46ec-4e1b-895e-b82ac56e12f0": {"node_ids": ["4ccd9869-9c12-46a9-8c06-789690d8dd3c"], "metadata": {}}, "103ca0cf-524d-4d7d-9e57-9fc4188ffdc8": {"node_ids": ["335f8606-6a7d-4339-abe5-b112a96814e1"], "metadata": {}}, "64ec8d8a-b3dd-41c1-b020-cae7f01418ce": {"node_ids": ["5fb69d8f-a0dc-4257-819e-037e68e0115a"], "metadata": {}}, "e5ecae0c-89ab-4a2d-bacd-6645b8a3f94a": {"node_ids": ["658dd5b6-71cd-45d2-b48a-4d9c018cd803"], "metadata": {}}, "0aee6b76-55b1-4c36-b5f6-7caea3a33f82": {"node_ids": ["c06a1e04-1059-468d-8743-6955db84422f"], "metadata": {}}, "8625af05-ba7d-4238-8336-1148e0d1c3ed": {"node_ids": ["32b87b6c-7e2f-4e13-a5a8-4079677eac8e"], "metadata": {}}, "432a4166-febb-40bf-afd0-544601c658eb": {"node_ids": ["e488d82e-0886-4ddc-a7da-56caca7b4e1b"], "metadata": {}}, "162c1f18-91e2-46cb-9bf0-e0feb5a90606": {"node_ids": ["3ab9f865-dc30-4226-b4f8-88aa5a199f7f"], "metadata": {}}, "4ec5bcf6-81b8-4bd0-8094-cdc47606b1f3": {"node_ids": ["f109dd60-c377-42c7-b3a0-0e7a861cd542"], "metadata": {}}, "9787d327-29e9-4f5b-aeca-922a1f395ce6": {"node_ids": ["7c6366f4-651d-4a94-adf4-de81d867cb62"], "metadata": {}}, "1cd869a3-c36f-44a3-9e98-039fd23a5478": {"node_ids": ["2bfcc599-d22f-42e5-a1a7-5ecd6023b8de"], "metadata": {}}, "696d891e-3a50-45fd-bad2-8c0628abacd6": {"node_ids": ["9ba509ab-2617-45d2-b7d9-f1e1b576d81f"], "metadata": {}}, "bf5fe259-2d20-4b96-bb12-eb80b24e0e72": {"node_ids": ["22dc7c04-870e-4073-a733-bacbdca3e116"], "metadata": {}}, "ff290db7-e39c-4fe1-9168-df0a1a3255a7": {"node_ids": ["91a3aec0-ea14-4273-8d29-b49b98fe36a7"], "metadata": {}}, "00670afc-a33a-46eb-b092-89a6c5fe2dd8": {"node_ids": ["835717d3-4612-498a-84e9-9806dac4886c"], "metadata": {}}, "ab8d4606-52d0-446a-a9dd-8968762353f5": {"node_ids": ["11b27806-3fa5-41ac-97da-7d7de9939978"], "metadata": {}}, "6d71874b-4478-473e-b573-8c5336f6b753": {"node_ids": ["19648df2-a009-4802-a8d8-00467e629ac1"], "metadata": {}}, "3b4cf9e0-499d-4ebb-9d92-e77f622055b5": {"node_ids": ["cfceb1c4-256a-44a5-b6fd-29bb26a7a1a6"], "metadata": {}}, "6316e4c0-e7a0-4510-b782-a9bc0d72a70d": {"node_ids": ["b4c839dc-2095-49f7-bdc5-2a7bb90132b2"], "metadata": {}}, "a01d6f78-3cd3-4006-a49b-2f30f5781d3a": {"node_ids": ["6557abc6-0695-4f65-80f3-c797838960f7"], "metadata": {}}, "e2ceb6c1-6640-415e-8f4e-6520f2410874": {"node_ids": ["5d95f130-eaab-45b7-a90a-02dfac0f8de7"], "metadata": {}}, "73aacf01-3fa5-4745-9881-b7eeb9ea617b": {"node_ids": ["60576e17-0992-4f71-89b5-7035a24edd55"], "metadata": {}}, "a9b92808-d77e-4330-ac83-bdd60658a246": {"node_ids": ["06995add-f706-428a-86f7-af70ad6c9ee4"], "metadata": {}}, "8b8ab30d-82dd-424b-819a-62eb336fdb79": {"node_ids": ["c9bbd6b0-ed86-4f0f-9cf1-b8b4a1368c66"], "metadata": {}}, "4736c0b7-775c-44b0-b392-cc34dab103b1": {"node_ids": ["477cccc2-edfc-4fd4-8b79-5f0b39aba0c7"], "metadata": {}}, "81261962-4876-4f56-9256-8440f51fd913": {"node_ids": ["bc5bb9a2-5229-4d17-a565-d1d4e0dce577"], "metadata": {}}, "aca40966-a930-49d8-939c-08675dda4fa2": {"node_ids": ["abfb14bf-f029-45bc-8d1e-07a8d6b71788"], "metadata": {}}, "c4ba9a01-5e2b-49c4-8488-0e5288cfbb9c": {"node_ids": ["0d7420d4-ff00-4816-bf2b-135395eb6956"], "metadata": {}}, "a1f26be7-dddb-413d-bf22-27ebf2ed0263": {"node_ids": ["e44447ba-f75b-4716-a958-f88577b5382c"], "metadata": {}}, "a0de3acc-557f-4784-85ed-a2c9132805a9": {"node_ids": ["ef5ba1a9-21d3-45c7-9400-77d1705d5d20"], "metadata": {}}, "72c5d73f-d69c-4103-9885-14a3895ab160": {"node_ids": ["76fc8aae-23e0-48ff-9fa2-5e964f020b1a"], "metadata": {}}, "9e51b533-d3cc-4fca-ba3f-c48e8621876a": {"node_ids": ["93066231-17f1-4e28-9023-b261c88536e7"], "metadata": {}}, "e60aa1ef-cfc4-47aa-a167-a940dfdf05dd": {"node_ids": ["40efea49-c5a1-4583-8d2b-c00ba1e64c73"], "metadata": {}}, "91ad4775-630f-4bf4-a29a-438386c2e4cf": {"node_ids": ["1e6505bf-9dc0-425e-8a06-6dce77f44e39"], "metadata": {}}, "d1e8f7dc-84a8-4537-9882-94ab69da0b61": {"node_ids": ["0fb209a3-4117-4e5a-8cf8-23d4392cbd1c"], "metadata": {}}, "e47550d1-eefc-4b62-972d-b7a2d9e42ec9": {"node_ids": ["b1a42015-ec8f-4a62-a09b-afa6034c806e"], "metadata": {}}, "953ad1ff-b9df-43d2-bda8-8026569316e4": {"node_ids": ["823a2eef-4a23-489d-be92-cac626389b5f"], "metadata": {}}, "1fa3a76f-99d3-43de-badf-a71848c796b6": {"node_ids": ["750f1531-1497-46a9-9f8d-45b7a5e46811"], "metadata": {}}, "e781b816-fe17-40ca-b4ab-f1d9f1a0f730": {"node_ids": ["1472646f-f558-4578-aeeb-84624fc75ef3"], "metadata": {}}, "526e1e31-5bf9-4766-bc84-831fc4c1d641": {"node_ids": ["1e855793-ef00-4066-962f-b45a93222cfa"], "metadata": {}}, "fb5d5025-6bf6-46e8-affd-c57b8546184a": {"node_ids": ["4516948f-dfa6-4ef6-9058-01af21565bdf"], "metadata": {}}, "dfa658a0-e524-44e7-8945-6bf847a0ecc8": {"node_ids": ["dd7807d5-56f3-4e73-877b-55e5bb25e8fd"], "metadata": {}}, "f930e826-b6fb-4235-b88f-49a3b3ad3906": {"node_ids": ["a4b59647-922a-454d-9490-878bf772b655"], "metadata": {}}, "5873b544-fbc9-4c89-b6e0-705cf4b16d4e": {"node_ids": ["dcc9f2ea-cfc5-49ed-99eb-2cfbb80e99d8"], "metadata": {}}, "da4b84ef-0454-4778-9bcf-6ee12711f4ae": {"node_ids": ["9c8b1588-0d6e-4904-b384-2e839add97da"], "metadata": {}}, "857cd767-db79-458e-a2f0-71f9a12cdd12": {"node_ids": ["b5406aee-3175-4a6f-b42a-652167a368b3"], "metadata": {}}, "a25ea45f-7852-4cb1-a982-3996ac6e392e": {"node_ids": ["6c360862-8411-4abf-ad32-bba564c1aa56"], "metadata": {}}, "98b5f93f-ce75-415c-b091-3b7df5654b40": {"node_ids": ["7f1528fe-e423-4b1c-a7b9-66e96029cdc4"], "metadata": {}}, "b8ab729e-724c-4ae8-955a-33ea8fa63812": {"node_ids": ["7616eea7-d3c7-45c8-a126-1ff77b13bb69"], "metadata": {}}, "5e0a6e2b-be78-4dc2-bf12-7a5bca9e8917": {"node_ids": ["7e6d6c03-44c5-4603-9763-c19cf5e50b46"], "metadata": {}}, "66d2f18f-cad3-4868-8db8-92ca13194f94": {"node_ids": ["c0970580-0592-4662-8de5-b94d74411397"], "metadata": {}}, "81379386-4742-4204-9f24-89dc841b8c26": {"node_ids": ["ce4ec69b-4421-4a45-883e-674c40c44e16"], "metadata": {}}, "97a27ff5-4560-46ad-9ed1-6fc6698b85d6": {"node_ids": ["b5c9538b-597e-448a-ad3f-88b68c4223d9"], "metadata": {}}, "3573b733-5ca5-4aeb-8646-75023c3a4121": {"node_ids": ["b2f673f0-7013-47c9-bd40-6c405357dfc3"], "metadata": {}}, "0d0da4f1-7d9c-4a2d-a3c3-7b48693fcbf3": {"node_ids": ["db6db6b5-2f7e-4b76-8e7c-b93a472025cd"], "metadata": {}}, "a0d977e5-ba7f-4a23-a37f-00a20cacc08c": {"node_ids": ["d4086658-b201-430e-9bda-782dea18d280"], "metadata": {}}, "135c7b44-4c46-46f1-bc6b-819fe55aaf13": {"node_ids": ["8ea36535-4835-405b-9b20-30001418354d"], "metadata": {}}, "f1cf6713-c09a-4335-a7e2-f32a2389c5d8": {"node_ids": ["84eaad8d-6026-4fb9-a1cf-c721f808cd65"], "metadata": {}}, "3d567488-7781-4a65-8655-4084d989545a": {"node_ids": ["7a31615d-4b04-400c-b7ec-a47e16e3fea8"], "metadata": {}}, "6c8c47cf-c37a-476c-b15e-68478a086002": {"node_ids": ["6426e555-3111-4860-9669-0f284ff11144"], "metadata": {}}, "261f962f-1a5f-48e5-b108-e43bc8819395": {"node_ids": ["0f4137df-8ff7-4008-b496-a429d09ba7a4"], "metadata": {}}, "78fedbab-49ec-44de-844d-6a9800341f1e": {"node_ids": ["49de2c7b-f56e-49a4-a6e8-2c0fd595082c"], "metadata": {}}, "572170b8-9d69-4070-8601-86b35ee2e253": {"node_ids": ["f64fdf59-4dc0-4f6e-829a-a1ad3208a912"], "metadata": {}}, "38a5ad20-d2b6-46bf-9124-b2236b2e0519": {"node_ids": ["bc345544-2ef6-42c7-886f-4a6e8efdb9cc"], "metadata": {}}, "7a2848aa-7555-4d2f-8e49-486569507f7e": {"node_ids": ["d9d5de35-e229-4f64-88cb-0ee5745925d5"], "metadata": {}}, "1b96c0c2-fba4-4fa3-9e48-9baaa3d3e08c": {"node_ids": ["d24f48fd-0dfc-4d98-ab84-dc4511adaf6b"], "metadata": {}}, "e34a1ab8-0748-43ad-9fa3-112054b21bc1": {"node_ids": ["3016aa9d-cb95-44cb-9b48-74fcd2993245"], "metadata": {}}, "539f960b-2dc5-4115-b7f2-902d1ddd0afa": {"node_ids": ["32e34e7d-e3e1-467f-b776-7b54c245aada"], "metadata": {}}, "ccc8a85f-cf9d-4ba8-a8cf-41345b8614b6": {"node_ids": ["7ecbe7ae-f3ad-490a-9082-eacd4dfdd75a"], "metadata": {}}, "b2039709-6308-4b21-89ee-fa2e9b782698": {"node_ids": ["27464a6f-2093-423f-b575-52650967b7cb"], "metadata": {}}, "63d9dbf9-4a44-4c9a-8bde-30b93df4878f": {"node_ids": ["e3770e80-456a-4e40-b1bc-a48086cb4866"], "metadata": {}}, "baeee50a-0507-49c6-ad0a-3114637f4d0f": {"node_ids": ["ef88011c-40c5-4716-9330-92a364fa550a"], "metadata": {}}, "d61b81da-6f87-4bd8-a2c5-9044e1173fdf": {"node_ids": ["3e76bb23-2277-4907-8329-210781458d45"], "metadata": {}}, "c1bbbd33-2ab6-41f5-ab5b-ed077c10c84e": {"node_ids": ["1757036b-5a1d-416e-9ac3-62b79b0c0c0f"], "metadata": {}}, "3c86ac1c-2a3d-43d6-95cf-a4d87a04e80d": {"node_ids": ["877450de-1735-4d1b-9a23-51bb72de7e36"], "metadata": {}}, "9409da37-43c3-4fda-b8ad-776c90ae586f": {"node_ids": ["d7c8fb9a-ca42-4b7b-ad28-2a302fc3f4e0"], "metadata": {}}, "97fbaee8-78de-4152-8dd8-52c4c1a5b449": {"node_ids": ["3cc7c075-6091-454b-a287-c21b70536c7e"], "metadata": {}}, "6be10d8b-c23c-4cc6-a317-6f54b93dd3ae": {"node_ids": ["026668d9-c202-4ec6-bc5c-13cbc847792c"], "metadata": {}}, "f9c3ac4b-a94f-417b-9284-4a48b19ebd51": {"node_ids": ["04f9eb1f-ff20-424f-bc4c-288d2d7d9fa9"], "metadata": {}}, "f8fdf1ce-5174-4af5-bf52-b1ab9806a465": {"node_ids": ["ac42879a-1f8b-49c9-b0c7-0e6ec266497c"], "metadata": {}}, "d088d6f2-2cf4-41c6-9b2b-d2ae911d2b04": {"node_ids": ["fb903d6d-62e8-4284-ba92-4cd3c1341f9c"], "metadata": {}}, "aa70a2b1-40a8-4e41-a82f-327a5ebe1ff3": {"node_ids": ["22fe33ab-7058-43cc-83ab-1a2585f4271b"], "metadata": {}}, "096c41c3-d450-409b-8b2d-964a1467248b": {"node_ids": ["ae685ddc-2bac-49e8-be0a-1086be2fc1a6"], "metadata": {}}, "67b19a1b-c8c3-424d-93ab-31b6b8fb34d1": {"node_ids": ["e1aef8f9-af2a-405d-90fe-d61b0a42d31d"], "metadata": {}}, "5ef08820-e57f-4a08-9e23-f21d475e8b06": {"node_ids": ["062e369d-3b85-4ae7-8508-58af3366fbb9"], "metadata": {}}, "d54bf77f-bc0e-4f8c-acdf-ca27bb9fc1c4": {"node_ids": ["9b49c941-425d-46b7-8244-525834f823c0"], "metadata": {}}, "eb720173-1797-4134-9e1a-b61273d67a76": {"node_ids": ["65b44b09-e787-4aa1-ac17-59a5348d6332"], "metadata": {}}, "540ada36-0615-4654-91f2-473b791ee70f": {"node_ids": ["a96a19f5-2b87-4a6a-8518-33a96d21ed45"], "metadata": {}}, "99871a37-cdf5-4ce2-be73-85753a730815": {"node_ids": ["0297d30b-1471-4148-9834-2fcf40ea4b5b"], "metadata": {}}, "816e0a23-35a5-4bd3-bf5f-dac15d3b8d73": {"node_ids": ["dfcbd6b9-b330-4184-a803-79766aaaa07a"], "metadata": {}}, "f92c4b4a-52e4-4c53-b3f0-795877aac848": {"node_ids": ["963f2f1d-1935-4ced-9745-65220ffc82ac"], "metadata": {}}, "4a663d69-0a3e-4271-abcb-59e8fa53d34b": {"node_ids": ["fe9f0a76-b2dd-4d61-aa70-6c73d799bf6c"], "metadata": {}}, "9368d87d-3b17-47a6-9af2-f4578aac44b6": {"node_ids": ["bbfc1918-415d-403a-96ea-89c519e1ee08"], "metadata": {}}, "7f334c45-5acb-457b-bb48-4f25b33ccaba": {"node_ids": ["6fcccc78-41ff-4169-bbcd-3e5c87169108"], "metadata": {}}, "1cb5572d-6ec9-49fe-9816-1b8a78ed9287": {"node_ids": ["4c28411b-3f04-4bc2-9d54-1e4434ddf390"], "metadata": {}}, "e4da60c1-cb71-42fb-a47e-b774f1d23042": {"node_ids": ["714f0bb8-946a-4700-a768-b6e66349905d"], "metadata": {}}, "afb6a292-9afb-4bb3-880e-2d45fb4ce775": {"node_ids": ["237457ed-c8d5-411b-816d-04df31152659"], "metadata": {}}, "c4582ccd-b280-4392-87c0-d3e013bc43d6": {"node_ids": ["5fe4b2ed-8bf3-49f5-b06c-879da52552e0"], "metadata": {}}, "b4a28b23-72db-4707-be7f-78b02ef81e9b": {"node_ids": ["33a89641-02f1-4fd2-801d-be113af8cb69"], "metadata": {}}, "457f05e6-5ecf-40fa-aa8c-e20996e560e5": {"node_ids": ["f7e3f098-e61d-4df8-9fe0-57be1d99fa8a"], "metadata": {}}, "9701fdcb-4e4f-4365-b387-71d3e74ac6ed": {"node_ids": ["e1be0ef4-c2ea-4785-a57a-00b70f7867b4"], "metadata": {}}, "b53159ae-78ae-4403-b21b-01a9bafea4bb": {"node_ids": ["9863306e-e535-4cc7-8b94-cc81bb6e1745"], "metadata": {}}, "4eaea1e3-d59a-4696-ad2e-531ab501cf36": {"node_ids": ["77bec705-312d-4772-bff9-f2deef76e9c5"], "metadata": {}}, "7a05eafc-51c7-4e34-9ca8-2cb13259e711": {"node_ids": ["bbf7bc2a-6775-44f3-b071-c2c14931ee0f"], "metadata": {}}, "2c4d615d-c49b-4161-800d-543065bbf394": {"node_ids": ["d425ca9f-5c01-41a9-bd23-9933679bb384"], "metadata": {}}, "94db6863-579c-4d3f-b83f-aacb1e1428e5": {"node_ids": ["aa440905-ac01-4e9c-acfa-6586a83dca01"], "metadata": {}}, "4a97b280-b69a-4c10-91bc-23e86691b6d0": {"node_ids": ["fc8f8c3f-9327-4731-8071-02c9b498ce39"], "metadata": {}}, "a7752ebb-4a9c-44fb-85cd-4fcf33109d72": {"node_ids": ["d2efe2d9-2b52-498f-aeb9-cd026f4c2314"], "metadata": {}}, "74206a89-4d7b-47e1-b9f7-ed0d7f7fd5a5": {"node_ids": ["c42edc7a-6e5e-41e8-9af4-87a1da4fa15d"], "metadata": {}}, "ef401959-3a00-4aa3-bf65-f44600154757": {"node_ids": ["d603fbad-680c-409b-aa2b-6753e11e62fa"], "metadata": {}}, "97a6d3d8-2445-43d0-a58b-ef9bb41d77ec": {"node_ids": ["bfcc835b-341b-4ae5-a515-f238269e0d38"], "metadata": {}}, "56c02c0f-1778-480b-9c1b-e0f5632c1467": {"node_ids": ["f2651c55-4ecf-48b2-8151-7d453c46a9f5"], "metadata": {}}, "94ab26cc-31b4-4703-8bb1-a9ff48adf765": {"node_ids": ["e2a827f5-3c16-4314-a1d5-95d00cfbc94a"], "metadata": {}}, "44dbb68a-4232-479c-9c90-5bcc146ae8cb": {"node_ids": ["7fc99eee-2778-48d2-a221-443827ec0c1c"], "metadata": {}}, "17e166fe-3d78-4e63-8ace-62f7ea196306": {"node_ids": ["951a41fb-c1ba-45e5-9fea-6c25c07672e9"], "metadata": {}}, "31cc59a6-d440-495d-b8e5-fb5fe20df523": {"node_ids": ["fdba8959-5438-4634-906e-cd2407811141"], "metadata": {}}, "27c2e3ad-19a6-4f9f-9a4f-816d91a24bf1": {"node_ids": ["13c40034-ccbd-4c30-8a91-208a798d46da"], "metadata": {}}, "55c94261-84d3-460d-87ad-b255514ddc1b": {"node_ids": ["50b7b47e-4819-4a8e-ac58-b04a77ffedbc"], "metadata": {}}, "c4e68e59-9445-4d02-bcd3-0bd77d42d2ed": {"node_ids": ["70991ff5-a905-4798-bc35-9be5a8e0961b"], "metadata": {}}, "33c7f173-e7ba-4edb-822a-a5b3f7bd8aad": {"node_ids": ["b9da6a29-d930-4922-8e90-5f986f42bc5c"], "metadata": {}}, "bf0032c3-68a4-447d-baaf-e295bc8e9913": {"node_ids": ["d50cc086-71d1-482a-9783-eb339f53d488"], "metadata": {}}, "8897100b-b214-452a-8c44-b6572aeedaf0": {"node_ids": ["ca40220c-14ba-4f8c-adf1-f81e6f2a16fd"], "metadata": {}}, "defd85b9-80e4-4482-b1d9-ebff4c63d241": {"node_ids": ["bea5be73-6d9f-4ab8-adf6-afaa121f86f5"], "metadata": {}}, "40017cca-771f-4289-b42a-07468d63edd1": {"node_ids": ["5ee34344-703f-456b-8343-f8a23e32ae43"], "metadata": {}}, "8299290e-0f22-4b01-b84d-f025c058711b": {"node_ids": ["d54a7471-95c1-4dfd-8a0e-4a88b50964ac"], "metadata": {}}, "af2270a5-3eea-4595-b046-37c8ccb64f81": {"node_ids": ["077d3a30-0c11-47ac-80f8-245ebccc2896"], "metadata": {}}, "d18d07a6-8fc5-4416-bfbe-b572a2534f37": {"node_ids": ["1535f90e-a377-4542-bae2-c0576a255117"], "metadata": {}}, "3cde3871-5dda-4f27-8e97-e2d96199e0f4": {"node_ids": ["c900a411-98d6-4ae0-8357-cc8a7d1b135c"], "metadata": {}}, "2a1e30fa-3d59-4a6e-b109-abe4921867a4": {"node_ids": ["e97ebac9-2349-4e6b-ae38-50a97d516fe3"], "metadata": {}}, "daf8fb84-7c65-40df-a461-067dfe111d83": {"node_ids": ["8998c02f-c0fe-4672-b89c-2a577bcf0177"], "metadata": {}}, "06898521-40cf-4185-bdfa-72eda63ea660": {"node_ids": ["6c33818e-932d-437e-a2ce-23c7c424a3ce"], "metadata": {}}, "8f06e7d4-ea72-4823-baf0-bda81672210e": {"node_ids": ["63a107d2-8ab0-47a9-a199-139b66242e02"], "metadata": {}}, "eb5c3faf-ee86-469e-93c9-82115f2f8ddb": {"node_ids": ["1a6f5fdd-b26f-49c0-b027-5f57e7a57719"], "metadata": {}}, "22c94260-7335-4bdb-8032-f52e7a9a978b": {"node_ids": ["daa0aea6-07ae-4411-9c87-d72a7e498b14"], "metadata": {}}, "5332eb84-808b-4939-8a66-3b4b9db92f52": {"node_ids": ["126d6f58-a038-4a78-84fe-dad10f8b5bc4"], "metadata": {}}, "055ce19d-e7d9-4e86-b9c4-a835acdfcd7a": {"node_ids": ["27e6d2b4-113f-42d3-a892-5861e4d0cb26"], "metadata": {}}, "a139dfb8-5929-4fb8-8124-1759291c8a02": {"node_ids": ["30cc33fb-07f4-4864-8bba-d1dff72db97a"], "metadata": {}}, "475ee4d7-8532-49aa-bae9-48db9fa7101a": {"node_ids": ["55d23a93-e4ec-4b39-9d9b-82ebdf2a570d"], "metadata": {}}, "27fb7768-3ba8-4a0c-bc48-3ec402028e07": {"node_ids": ["15f318d5-9569-413c-a383-b6fd91d12add"], "metadata": {}}, "bb684eb2-caca-4833-8fa3-47181296a47e": {"node_ids": ["ffed8c44-e20c-4358-8dd6-a274822e6cf5"], "metadata": {}}, "15401c01-81e6-4d27-b668-550c6d704c9d": {"node_ids": ["355f9dc1-75de-4ad2-bc5f-ad0a466db1a5"], "metadata": {}}, "14acf40b-e252-4475-98f1-e4a70fecd8c2": {"node_ids": ["09495c7d-0f0d-4106-8cdf-348b97ce42ed"], "metadata": {}}, "eb496f4a-d45f-4b02-bb24-cd8775c890a6": {"node_ids": ["69902734-dc85-4206-9bde-984202bf81a2"], "metadata": {}}, "52baed8f-5d85-440c-810b-7dfd5d67be85": {"node_ids": ["16367c02-e4dd-4717-8bf3-a7e9ffc5ae81"], "metadata": {}}, "f172849f-6221-42ba-b9e8-b476f208ca68": {"node_ids": ["51177885-c387-4263-afdf-84b4514ecb05"], "metadata": {}}, "dcff81b9-7c81-4279-bc79-cb156b778cad": {"node_ids": ["60766178-7d53-43f7-91ce-b680500f8616"], "metadata": {}}, "adf839f2-a66a-48ad-94fd-560e0c5eb6e5": {"node_ids": ["b2b71ca7-d150-43ba-a07e-167e4805193d"], "metadata": {}}, "ed85af63-b367-4ea8-a606-a1a7c0ee2246": {"node_ids": ["5b44b80a-5db6-44f8-b412-88b08f9cc8fb"], "metadata": {}}, "5c12a641-1f35-4b76-be11-5f94ab80201c": {"node_ids": ["bb7caf46-f5bd-4302-801d-0593837bb9a9"], "metadata": {}}, "9c8640de-daa6-4664-a8b2-eb3f8356b2e3": {"node_ids": ["a849414b-4296-46d5-b0a3-f12b2d437ac1"], "metadata": {}}, "9162d2b1-2bf9-4e7f-a193-912911038565": {"node_ids": ["11adecf3-d8a0-4a87-b447-bfa8d711ac7f"], "metadata": {}}, "dd0f2e6c-6efc-4f34-bc2e-6c7e1129ed69": {"node_ids": ["67b5705f-36c2-45e9-b021-50f9e087ac43"], "metadata": {}}, "b1a39222-1c97-4942-91e8-d4eb9af405dd": {"node_ids": ["9a7dc112-baab-49e2-8e20-c5b241883e8e"], "metadata": {}}, "99562c16-88ae-487d-a665-edee7d56b1a0": {"node_ids": ["492ded27-dcfe-441b-b5c9-8872ae226418"], "metadata": {}}, "91df2fac-537f-4c95-a1fb-aebf75441c5e": {"node_ids": ["9e480fc7-d6e7-412f-be42-1290a42bdd9e"], "metadata": {}}, "e307dffd-052c-4a2e-8afe-91ef431b044b": {"node_ids": ["003cab41-2f43-45e1-97d4-7d395e7956a2"], "metadata": {}}, "b3f7b9f8-7528-4cf0-bf3c-a1d85a74ca5d": {"node_ids": ["63eece61-848a-472e-afc6-d6f2bd730ff4"], "metadata": {}}, "fefa5c2d-bbb1-426c-8b77-075fdf0c564f": {"node_ids": ["5dfa6f80-3505-444e-89ec-e36710270e0e"], "metadata": {}}, "4d13a23c-0e2e-4381-9aca-a31931129ca0": {"node_ids": ["8be4a7ce-fe17-40b0-be8e-15fe9fb25e2b"], "metadata": {}}, "7f6d9a0e-2a1b-4ea9-9800-189e385cbc2d": {"node_ids": ["ad44bece-21ba-4cef-b588-bd70b3259bcd"], "metadata": {}}, "a11eee9d-33cf-4d8e-98a4-b17759657dad": {"node_ids": ["d5ff816b-f2c3-49ef-a933-f99acb8b9cc4"], "metadata": {}}, "cf5026f9-8b02-42da-9bfe-15316f766b23": {"node_ids": ["bae30238-6707-46bc-b7a3-980299b7f85f"], "metadata": {}}, "784dfde3-ad8f-4bfa-8418-4a3ec42c2873": {"node_ids": ["d70c9dae-5589-4d8d-b3a7-46d631ba8ae4"], "metadata": {}}, "47931b18-9e06-433b-94e4-71387e8aa797": {"node_ids": ["106490af-8c4d-4eef-ad0b-7d51b14621e6"], "metadata": {}}, "f0b5707f-ef3f-48a3-a527-7e46dfded75a": {"node_ids": ["118fb3ba-2930-4cdd-9975-d0f8fe564fae"], "metadata": {}}, "2e581b10-2058-4839-9a99-5d7cf14c61d5": {"node_ids": ["dbaf7794-f160-4b5e-8fce-e363f2e3fd81"], "metadata": {}}, "a7089d71-1bd5-4788-adc9-2a84ba01108d": {"node_ids": ["82e7943a-f209-4e93-b4bb-f9a2e96a92b9"], "metadata": {}}, "563f1142-5799-4c6e-a485-1a33bd075726": {"node_ids": ["cbbdf7f8-bfe3-4ca8-b67b-2c9115cd8a9d"], "metadata": {}}, "f4f07f7c-7198-41d0-b634-16d0d535bdee": {"node_ids": ["ac0ef22b-d0f2-4121-9da9-4dba9120bcc9"], "metadata": {}}, "83ce1b91-fc69-4e4d-ae5b-83f5bc0d3944": {"node_ids": ["9d08108d-aa33-43ae-a0dc-c716b8053784"], "metadata": {}}, "d5d9ed4a-6b08-4231-880a-bb9dab62cd4a": {"node_ids": ["f67ee5ba-ddde-4f97-b526-3b15580d359c"], "metadata": {}}, "fda4c6cd-050f-49ac-ab20-bf2942e48585": {"node_ids": ["06bf0028-7c1f-4dd2-b774-14648b2c69e4"], "metadata": {}}, "c9da83d8-11ac-4ab5-9c27-b7f1cafe8f67": {"node_ids": ["fcd2ac72-3995-44b3-837c-fba2c28765eb"], "metadata": {}}, "847ce774-4f36-48c5-800c-4662fa32e0d5": {"node_ids": ["5d6eacb1-463d-4eb2-9e30-b5a02996343d"], "metadata": {}}, "afbf1cac-523b-4d99-8a14-c8663e85f5d9": {"node_ids": ["a2ea3da4-d44f-4d2b-9d22-cd87bac9b0ff"], "metadata": {}}, "2f4ca8d8-0e81-4072-a319-89c36be53181": {"node_ids": ["0050f467-9ea5-436a-b426-b62e58874db4"], "metadata": {}}, "8cbc9b7c-f928-4493-aabf-db4fe88c71d5": {"node_ids": ["67f1adea-5bee-4228-8517-5c74b3c10532"], "metadata": {}}, "76532bfd-84ad-4482-bcf1-c1978211377a": {"node_ids": ["009046d7-7439-47b7-b250-aa33149367cc"], "metadata": {}}, "08a77f31-13e5-440a-91a1-32fcbf341c95": {"node_ids": ["b00a40ca-9301-4bcf-9893-3c4b169e2957"], "metadata": {}}, "85602fa6-8722-4912-b3f2-424d51a37726": {"node_ids": ["a28ea497-e7fc-4188-9b82-631d7875b150"], "metadata": {}}, "117f2f2c-929b-4696-bdf8-9863a41e527c": {"node_ids": ["48f49feb-614c-45b7-a8ec-4b43132c4eaa"], "metadata": {}}, "74d954e9-bc97-40a6-9fb0-a93ba2099ab5": {"node_ids": ["9ed37739-6cb1-42ab-a697-8e3c8c3e82a9"], "metadata": {}}, "f563cd0a-b726-4d20-9da2-f14e328966b9": {"node_ids": ["a6483253-c531-4658-89a7-bb7212350776"], "metadata": {}}, "5ceaad40-dd11-46ee-9960-fe5d59556395": {"node_ids": ["491a62b2-c379-4689-8914-fc37bfc302bd"], "metadata": {}}, "0597fcd1-eeea-477a-9f9d-c9c335b6e890": {"node_ids": ["5c784b97-dadf-4233-9e98-9cef5c4c4f7e"], "metadata": {}}, "eaa061bc-9b71-4861-bd5d-2218b535541a": {"node_ids": ["85e068ab-dd23-4d3b-90f9-1544b61f48da"], "metadata": {}}, "0e8d64d7-11f9-4e20-b146-abaac9b4c43e": {"node_ids": ["d94c333c-c93a-4553-a0bf-ffc87dcac762"], "metadata": {}}, "a5e7aa96-ff22-40e9-8265-d8f446b8a76e": {"node_ids": ["e3dc7101-341a-4b76-8f53-076445218d3a"], "metadata": {}}, "37485d19-2b81-4f26-8a2f-17bc00300cef": {"node_ids": ["fcc2c3ee-e57c-426e-a833-b74633120862"], "metadata": {}}, "28fc266f-e71b-4ec7-ba96-64c1ccfd2912": {"node_ids": ["8ae3aec3-c101-48a1-8083-707dea0dfae9"], "metadata": {}}, "ae77585d-2f33-457a-96b7-0d8f32f5c40f": {"node_ids": ["e5b45309-c770-4260-bbed-3f69ce977cd9"], "metadata": {}}, "49f2014d-b8f5-41f3-b62e-0a004d3c6eb0": {"node_ids": ["3572e71c-53f8-402b-9881-ce91abd9110e"], "metadata": {}}, "355a6a04-8cea-42b4-aa3c-384dba4bc16f": {"node_ids": ["03e13a44-62bf-4082-8262-a09940be882e"], "metadata": {}}, "73a636e6-532e-4cbf-8309-2c41197fa30f": {"node_ids": ["af11b8b6-6fa0-4eee-a396-cdbf058e86ae"], "metadata": {}}, "bd2743f7-df86-4e04-83ad-d2e5b48fa842": {"node_ids": ["f492f6f1-b1f8-468e-b1d0-32e5e8f36eac"], "metadata": {}}, "5c548e5a-deea-478c-841f-d46bbea9850e": {"node_ids": ["fac061f6-9133-4a22-8354-a1b72dd51420"], "metadata": {}}, "6632b38c-b5e7-41ef-b1a2-709866649478": {"node_ids": ["8a6ad5c4-196b-4e7c-99a7-47ba5f155f53"], "metadata": {}}, "13637419-1c1f-498e-aa22-b372c636a298": {"node_ids": ["51231e88-fcaf-47af-917d-4d220ab688d4"], "metadata": {}}, "2009a771-7204-4051-980e-2fa8e6b95395": {"node_ids": ["ac23d806-843f-4168-b691-3c326f9440cc"], "metadata": {}}, "9d23aeb1-14e3-45c7-a886-d8ed3d259cc9": {"node_ids": ["b76a7556-aaef-4c34-a48c-ccfe54f108be"], "metadata": {}}, "6e6b8811-c228-44e7-bf57-8617f1677894": {"node_ids": ["4a5c141d-82cb-4cfd-a1c3-936371c97e05"], "metadata": {}}, "9fd44d8b-deb2-4261-8f48-5a183d20978f": {"node_ids": ["3bf895c4-1cad-44a3-b2aa-70e93ef3a134"], "metadata": {}}, "e3715d03-40f6-437e-8b9e-1efb07c51e96": {"node_ids": ["4425c708-3408-49ec-9708-eeb26478e941"], "metadata": {}}, "95616a60-1a9f-41b9-b5df-51326ea2616c": {"node_ids": ["3cb326db-3a11-4be9-9126-f872f4443882"], "metadata": {}}, "077628b5-d6db-4dfa-a649-d6feea457082": {"node_ids": ["978f8971-84bd-479e-a5a7-2cea547d8274"], "metadata": {}}, "49f6fc3e-08b1-4327-a96b-29fce6aeca1d": {"node_ids": ["4ebea4e9-d50d-4c52-a3df-f439b80308f9"], "metadata": {}}, "2e2f663f-db12-4e49-b0ea-268b9c20e742": {"node_ids": ["db980414-5f39-4739-8d8f-0ec306f03c7f"], "metadata": {}}, "162404a0-fa14-47ce-b252-eafec752947c": {"node_ids": ["c9d0b528-dfcf-46ba-9099-b94309a9a937"], "metadata": {}}, "37deed86-eacc-403d-adab-ab74b101514a": {"node_ids": ["1ac45fe1-82a7-4cc1-8711-6e3165da165d"], "metadata": {}}, "3a33498f-cea9-419d-9b26-e72dd46864dc": {"node_ids": ["14a19484-08cb-43a5-8aed-452685da43ca"], "metadata": {}}, "a3a4201a-dfce-4105-b7f7-47d63448e1f8": {"node_ids": ["d8e6883b-e71e-4b80-a154-2c104338c25e"], "metadata": {}}, "471f4225-90b9-4878-8365-3bf982089078": {"node_ids": ["474fdb5f-921c-45c4-8728-e1367e8c67ab"], "metadata": {}}, "013baaef-80d9-4422-9acc-990b85c91030": {"node_ids": ["0aba9212-eeef-4f6c-a40a-0011d4286ebd"], "metadata": {}}, "0c4b9f19-2787-471d-8867-b48deb143cb4": {"node_ids": ["c68300de-2fda-4dc8-adea-eb7a1a033831"], "metadata": {}}, "79523b60-295d-4eb9-aba6-63299ca66d2a": {"node_ids": ["760cd42c-d546-4f3d-b6d4-7f7828bd338f"], "metadata": {}}, "2a3d17ab-d57e-48a1-b8ae-936cc3d5c5a6": {"node_ids": ["b7e97849-f474-44b6-b9ca-657e1359745a"], "metadata": {}}, "14e4234a-78d5-4a82-984f-2f9759bea084": {"node_ids": ["96f661e4-8286-44ba-80b2-f57280a4eb63"], "metadata": {}}, "87152af3-1041-4b27-8db4-282bcc5d2bc8": {"node_ids": ["0899ba1c-e0d4-480f-9467-b97bc01ef26b"], "metadata": {}}, "fc370c6d-a337-45ee-9f30-aa0e5f0e5a2c": {"node_ids": ["70461268-b93a-4a45-9a04-9cf9d31a3478"], "metadata": {}}, "8b3bdecc-c78f-4cd4-b21f-a6907f46af2a": {"node_ids": ["b8f2e1b2-020b-4935-8b78-2bc0d12c9637"], "metadata": {}}, "5fdd0093-11bd-4d94-9d10-14ceac5efe1f": {"node_ids": ["3cd71a25-0c78-4b8e-b485-f710aeafc388"], "metadata": {}}, "6c08955c-f7b7-4801-a5ac-9754c0274974": {"node_ids": ["b32bc358-c420-4581-a9f5-cb7cbfce1bf7"], "metadata": {}}, "efed5c48-aa4b-4fdf-9c41-abbb63b56d2c": {"node_ids": ["8f1b63af-d6ec-4000-b231-7d86c5a92af9"], "metadata": {}}, "9633b11c-bed9-4856-b69f-05d7fe17d2bb": {"node_ids": ["c8ed3f84-72a8-4af1-b960-c54c5bb860d6"], "metadata": {}}, "51d90e54-fc9c-4ca1-9f85-8892b61cb4e4": {"node_ids": ["a8bfa719-35dc-4a15-a0eb-a2a8e966e4a6"], "metadata": {}}, "8aa31f74-a576-4c71-939c-2477191db8f3": {"node_ids": ["76706fa0-08c7-4220-b00c-7619186ab0d5"], "metadata": {}}, "055c3e07-d67c-4b0f-9d6f-b0c04a3292a2": {"node_ids": ["931f9933-f43f-4320-9e3e-4173c42000dc"], "metadata": {}}, "a6efe3d1-568e-4c8b-9899-362cde302292": {"node_ids": ["663369ab-aa89-40c0-8c13-8d4b42ea0a46"], "metadata": {}}, "cfc51d70-ea96-4c1e-adaa-1619bd764c8c": {"node_ids": ["cdabf7d8-7edb-4848-b0f9-f5dda2ea4294"], "metadata": {}}, "e91df77f-9e99-4e4a-8afd-bdcfa313bf3b": {"node_ids": ["fb6b75da-774b-428e-8886-d5c4c94450bd"], "metadata": {}}, "4f1b3794-00ae-47d3-a5d9-2f9d78933060": {"node_ids": ["41ec9e62-6c19-4a53-8284-8e41173afe81"], "metadata": {}}, "914f47a9-3e48-40e6-8014-e250004b0b59": {"node_ids": ["535f9539-dcd3-4a26-b53d-a25b4942dc59"], "metadata": {}}, "e00fc259-3b84-4823-92af-13cee59a06c4": {"node_ids": ["d9ff101e-95c5-4d71-9bef-e4f02280916c"], "metadata": {}}, "69da750a-dec4-4133-a2c5-55673606ecc7": {"node_ids": ["042ddd3d-4100-4aea-8caf-2bc4da9627b7"], "metadata": {}}, "d21f4840-c466-4003-9c16-c97a648089a9": {"node_ids": ["670cb058-34d1-4617-8e69-2c5f11b9a16b"], "metadata": {}}, "62854b93-5007-46ec-a88c-e7cdaa7198fc": {"node_ids": ["6efebdf2-398b-4bf0-ac31-71b67806590b"], "metadata": {}}, "41b947dd-8695-49e8-bc86-f8141dae7dbc": {"node_ids": ["8ecfb7a4-1d53-4418-8911-772ef47feab4"], "metadata": {}}, "6527d36d-870c-4af9-a589-736cfc1dd15c": {"node_ids": ["5b89b768-0ac6-4ead-87b0-6c05576b6a64"], "metadata": {}}, "b61660b0-c417-409d-8368-9763e8761cdf": {"node_ids": ["2b1012eb-7d30-4db5-8147-5c832852be5e"], "metadata": {}}, "76636a41-96f7-477e-99f8-7f106b00386f": {"node_ids": ["c96d7fed-0eca-402e-a5fc-a807226d1ee1"], "metadata": {}}, "9062b593-4fb9-4a8d-a46f-489136e2757e": {"node_ids": ["0b7a9a31-1bb7-4925-8e0f-4f48c8c9ea5e"], "metadata": {}}, "8af74841-8852-4a98-92c9-3893518a07cd": {"node_ids": ["2352f851-ae29-4e2d-9c5b-8230c246bb7d"], "metadata": {}}, "248523cc-c6fd-4638-9b7d-a7e15f35ee09": {"node_ids": ["4e990513-f077-443d-8eb0-239b6b884b74"], "metadata": {}}, "0643e76a-b5e8-48e5-abf8-7fac93eb7426": {"node_ids": ["092ac622-b659-404d-9bed-32e908023740"], "metadata": {}}, "568812a2-43d2-409c-9890-c37360e4e771": {"node_ids": ["0b1c548d-640b-4730-a4da-6c447278207e"], "metadata": {}}, "a7913d9f-292f-4803-a3ed-fa90bafb7501": {"node_ids": ["e164c41a-fd19-460a-853b-153899165a12"], "metadata": {}}, "5f99104e-3f73-4419-a73f-54c261cf12cb": {"node_ids": ["d77e9ad0-c53d-4320-9871-5b9e62ffed96"], "metadata": {}}, "04661e22-68f1-4001-a5eb-c29e995fc2cd": {"node_ids": ["abe2e757-e7c9-464f-867e-dfc5541302aa"], "metadata": {}}, "08d2b010-9e38-471c-8ea9-85666514e546": {"node_ids": ["e9a6751e-15ac-4a49-a4f2-173d9178be88"], "metadata": {}}, "cf8445eb-44ff-4ba9-83ff-2ad3c5b87193": {"node_ids": ["595933c6-fec2-4dcb-8de9-3e13ed3cb068"], "metadata": {}}, "ca1281a1-d707-4bad-84c2-c9c8142369ac": {"node_ids": ["4c40821c-9737-48d6-9d1f-23da629623d5"], "metadata": {}}, "c0950888-ffa5-47c3-ad4d-4b819c290954": {"node_ids": ["01b541de-7360-4be8-ad50-754487cddbd2"], "metadata": {}}, "370a9987-e7cc-402a-8d1b-952b1c5c1d72": {"node_ids": ["3963aeaf-f9c2-4cb5-8fcd-896cf6ea538f"], "metadata": {}}, "cee194fd-e375-44c6-966d-cdcc58b200c1": {"node_ids": ["058f5415-5e54-4ef8-9980-33268e0ae3eb"], "metadata": {}}, "45cec028-9698-4726-9636-a0bfa0292f6f": {"node_ids": ["efbca599-8644-4f7f-8418-862e2710bbd6"], "metadata": {}}, "19df1d07-2c4a-48f7-b7ca-27776cbc667c": {"node_ids": ["84d69004-a647-4918-ad5c-e46f9152ae07"], "metadata": {}}, "e00153b4-b39b-4015-b017-b480f6077d69": {"node_ids": ["ca977d8a-b6d0-4b5f-89e7-496a6e04a401"], "metadata": {}}, "e7329ac0-e054-4cd7-97ef-484f7478c1a9": {"node_ids": ["6b3b2010-e86a-4225-bdb5-f1c55c2db98a"], "metadata": {}}, "269faf99-dc1a-4e84-a50a-2023885e047f": {"node_ids": ["508fa520-6792-49fd-b23b-4a3f1554bba5"], "metadata": {}}, "fa1902a6-4d6e-421b-ad04-1af6a426f984": {"node_ids": ["a91b86ff-4ada-4353-9f75-b291579efc5a"], "metadata": {}}, "8871c11b-ff7e-4863-b735-e1c83b3278bd": {"node_ids": ["1921b234-148f-4eee-9a5a-2b15d9634a7b"], "metadata": {}}, "e0e27e4d-d232-436d-8fd9-42a89d274148": {"node_ids": ["80b0c84e-4dec-4b7f-a5ae-a62553893e94"], "metadata": {}}, "000f5bbc-57b8-4519-a208-6f8128453a78": {"node_ids": ["66fe5fe5-e7d6-4613-b85a-c219aedbb7eb"], "metadata": {}}, "66d2339d-0d4c-46af-877d-1dde8b9f25cd": {"node_ids": ["6e682eac-01e4-4bf1-9486-66118c1a0e98"], "metadata": {}}, "cc436d77-a06d-492a-b0e6-33dedfbdf85a": {"node_ids": ["bfa9b9f3-fd33-4272-83fc-6f7a72f4785c"], "metadata": {}}, "896af9e7-d90f-431f-9a8a-4676c7585c2c": {"node_ids": ["5d87a9d3-d343-4017-b886-a1546abc8c0c"], "metadata": {}}, "29f23a4b-b5e1-4b19-b884-8a005d165c30": {"node_ids": ["61a21044-ca07-4e0c-bf72-22e5e49f4f54"], "metadata": {}}, "a6fce9e6-cbb0-4076-8208-41920ddd6553": {"node_ids": ["48e2a8b9-c1e5-4fa6-9cb6-6d545f5b6453"], "metadata": {}}, "e174cc30-367a-4b0e-8fd8-409c52886455": {"node_ids": ["86d90762-be88-4eca-bff0-ae18c0e8a7a3"], "metadata": {}}, "8847d668-a2c5-49ba-8c21-b3b205615a17": {"node_ids": ["dc207ab3-c199-4e76-9a61-c2ae67769732"], "metadata": {}}, "1d632f2a-aaa0-4da9-b277-19791ad56d2b": {"node_ids": ["df75f556-3680-4058-bb9b-1a19f2fdd609"], "metadata": {}}, "9a490a75-da0a-46f5-80e8-30a6293ab5fd": {"node_ids": ["cf6a095b-22f7-4989-bf08-a3ecb392e7cf"], "metadata": {}}, "deaf3f52-74ed-49c0-a5b9-9537f9a56b6d": {"node_ids": ["c0f867de-6009-4a2c-8f79-0683cd976752"], "metadata": {}}, "94b78f06-e65f-4217-ab20-7c109bc56d54": {"node_ids": ["dbe33271-7256-4105-88c8-719ec10e468f"], "metadata": {}}, "f0c1dc09-0d54-48be-9271-73ae8e6703b6": {"node_ids": ["c9119d09-0155-4be9-afdd-d693108b4736"], "metadata": {}}, "f8e68132-90f1-4bdb-ac07-5e7db46a916f": {"node_ids": ["1aa815f2-6af4-420e-8ca5-7e28749b0457"], "metadata": {}}, "34a7ee27-edf3-4810-ba0c-66a4d0fba38e": {"node_ids": ["4ee50dc4-784e-4af8-8500-d726bef7c953"], "metadata": {}}, "0aeabf97-9c0f-4ddf-9856-ea318d8e06a6": {"node_ids": ["e411c663-92e3-493a-b0a6-018bca8b62d0"], "metadata": {}}, "7abfb03c-4220-4086-9b88-2c713ee197a6": {"node_ids": ["cbd66eae-de50-4cbf-8ba3-6d8bf961791b"], "metadata": {}}, "c2f945b2-fa3b-4eb7-a7c3-007ff9716b17": {"node_ids": ["e6c6496e-c3d6-42e9-a615-595b359c427c"], "metadata": {}}, "897fd483-8598-4efc-b964-e5a00500c198": {"node_ids": ["4c8f9cea-89d5-44e5-8b34-1a67e37a6fe4"], "metadata": {}}, "8e995631-2cf5-45ae-8f6e-8fa7c0369615": {"node_ids": ["ae9279e3-45d6-4f71-9ec0-65d6409f9099"], "metadata": {}}, "92cd55b6-cca1-4dd5-ad29-46e8affee86b": {"node_ids": ["79bb9b74-923c-4317-bd20-7498955fbc66"], "metadata": {}}, "b147821d-06b8-4a01-8057-250e8a09416f": {"node_ids": ["783bc869-7267-47e1-9b6d-da5703edc7f6"], "metadata": {}}, "de3c9e3e-0c1a-49f8-b09a-0005363a5839": {"node_ids": ["2a6bb98f-8510-4379-b457-38d4e3567551"], "metadata": {}}, "49354419-975e-4050-a05b-0225e349fc42": {"node_ids": ["ebf63c4d-5ce9-43d7-9bc7-ddd02414dfca"], "metadata": {}}, "21d2a48f-b67d-4f11-b599-c48a0a999b9e": {"node_ids": ["72526fc7-70e8-41f2-b8ad-ee02d981d100"], "metadata": {}}, "fc352957-696e-4cdf-a321-f7e2c422a7ec": {"node_ids": ["fd47be96-e44b-467e-811a-1c07b0404da0"], "metadata": {}}, "3e32c598-0067-4e26-bd13-a9db0e76a166": {"node_ids": ["edf772f9-203c-479a-8b13-d8f9f7a9c1fd"], "metadata": {}}, "220b9e0c-a000-40b3-a30e-2662ab88e1bc": {"node_ids": ["137c01da-6089-4f55-ba65-eaf74ebd0102"], "metadata": {}}, "708a947d-b6da-46a7-91e8-ca9c7f544374": {"node_ids": ["b4bd8e6a-37fb-4e54-9487-7e997c07624b"], "metadata": {}}, "fa1b8fb4-4402-4a75-8957-ff1f93276fad": {"node_ids": ["7ba47264-9404-4b28-9c86-4a28dd42c733"], "metadata": {}}, "5aa6bf6a-30ec-4ac9-bfde-974db42834d2": {"node_ids": ["d188a70d-b6db-4470-8551-8cd66297280b"], "metadata": {}}, "65d29bde-c4bb-467f-81a1-d58a94968d56": {"node_ids": ["4ef29259-6420-4127-a329-dc2c80883b9d"], "metadata": {}}, "75463e64-d34c-480a-85d9-b7640d97bdca": {"node_ids": ["cb037b91-d295-49c2-a6a2-fad5d0789a11"], "metadata": {}}, "ab389e6a-c4fc-42f4-8e08-43f8e2519483": {"node_ids": ["6f39dd46-6c96-49c0-b044-e458b151c651"], "metadata": {}}, "2af1e837-2d98-4aba-b003-17c93f934212": {"node_ids": ["2d9cc489-97ef-48d6-acb1-00ec02992c0d"], "metadata": {}}, "5973191b-99dc-4c57-8c93-1c4aa3ea3283": {"node_ids": ["aac18dd6-a020-4b24-b546-a4f358e6d0c7"], "metadata": {}}, "f09b47c8-334b-43c7-9e4e-1c77417cabfb": {"node_ids": ["e83bb429-3f14-4182-8248-a4825251fe87"], "metadata": {}}, "7267ca9f-c980-48cc-bb21-56cf7ab5b57e": {"node_ids": ["27e88717-15b2-4c93-8254-a615d12435fb"], "metadata": {}}, "6c492116-eab1-43da-be43-787e79b48b02": {"node_ids": ["963e4f62-c4c9-4246-8feb-81c7d41ce86a"], "metadata": {}}, "06d5d8ea-2671-47a2-ae4c-8a48a8ee34fa": {"node_ids": ["4ec42b13-53f4-417e-bf58-024f9ccfd0a9"], "metadata": {}}, "2406f232-7dd7-4620-bd20-8f07d272d089": {"node_ids": ["c9458096-edf0-4a24-98f1-9eb8da45a759"], "metadata": {}}, "85dd6a6e-5464-4002-bca2-dfd1e4360ce1": {"node_ids": ["894f8786-5da9-422e-aa55-442761786a2a"], "metadata": {}}, "07b18a61-fe53-4c7d-84bd-a9d840736c42": {"node_ids": ["93440cdd-f91d-4050-9e2a-64d9ffb63f1f"], "metadata": {}}, "ab72e03a-8ec7-43ae-adbd-d87b6b7a9471": {"node_ids": ["4b53e23f-3977-4e99-a593-cd650f78f704"], "metadata": {}}, "32bcb0f3-8316-4cc6-a988-6b2cd6a632a5": {"node_ids": ["ec1ad486-8c7c-4271-b7db-afd77390e6be"], "metadata": {}}, "6466fd6c-b869-4bfb-8c8c-b92248a3f128": {"node_ids": ["41917266-6441-4a78-a9e1-6065ce427f5a"], "metadata": {}}, "b618d094-4bd7-49f4-9071-994378a2f3ff": {"node_ids": ["a3bd8d53-14c2-4e0c-a602-36b83d4d5a66"], "metadata": {}}, "18037435-3bd4-4d1a-aeef-5ec895754ee5": {"node_ids": ["76dc5a57-693c-4338-b2d2-b0424f41591e"], "metadata": {}}, "b8fe1b60-d207-4b55-ae00-a5ecddd9583e": {"node_ids": ["af7a3a7d-b837-483d-a828-8ed5cc442fba"], "metadata": {}}, "6accd3df-ba8e-4326-a694-204bf4fc89c5": {"node_ids": ["69cba123-bc65-424f-b6b9-2028627dce87"], "metadata": {}}, "8cc65ec2-2dc8-4024-b115-10367bcde7e9": {"node_ids": ["09daa2cb-dbfc-482a-9030-980d4f50b5e6"], "metadata": {}}, "fdeb4cba-a6a3-417d-a96a-9247de79947f": {"node_ids": ["7de89bc9-bdef-40d2-b275-bbf24ebe5189"], "metadata": {}}, "3bfaa584-060f-46aa-9755-193077a71a0d": {"node_ids": ["975fdc77-0970-49ca-b073-3f6593d2eb15"], "metadata": {}}, "f49f0924-a249-4ab9-9e1c-f9de2eef66af": {"node_ids": ["a9bec055-3fd6-4b9a-b3bd-065c935d1820"], "metadata": {}}, "49897da6-87bd-4ee1-ab99-6c6a482c32b7": {"node_ids": ["c53e5de6-3d0e-491e-a807-be9cb6e6f38e"], "metadata": {}}, "a782985c-a2bd-48bf-abb4-74eceeca50cc": {"node_ids": ["435b8c14-2ed0-4459-b408-b494d48f84f0"], "metadata": {}}, "0329b740-4abf-40cd-ab9b-26a3eb403d0b": {"node_ids": ["23beb3d9-0380-4612-9431-98ba0e499bd0"], "metadata": {}}, "7bc701ac-a00d-43ab-9de2-487cbeabd5b0": {"node_ids": ["a31c3909-2eb9-46fd-81f8-ca60263db607"], "metadata": {}}, "d6541d5e-10c3-48a9-9279-2b746c67eb46": {"node_ids": ["59a0a4ab-9119-434b-bb47-27735676e7f4"], "metadata": {}}, "60f8b410-7c91-426e-9a5f-5ce171bec4a3": {"node_ids": ["492e5c1f-4ead-4875-9c40-648b706cf2bd"], "metadata": {}}, "c72a40ba-99fa-4896-97c8-9c5ea7a1e832": {"node_ids": ["485ca146-26c1-4f67-8a9d-1e0de3d1b73c"], "metadata": {}}, "21636006-e549-4864-b848-48e5eca78c26": {"node_ids": ["40033c0b-6fcd-4964-bcfd-64c821fa8ecc"], "metadata": {}}, "64fa4c87-a8e7-45cb-91fb-acc56a95da12": {"node_ids": ["f4c35d65-73ac-4e4b-8e33-a8dd4f84c573"], "metadata": {}}, "bc7e29cf-4e68-4eab-9037-fa3eba5bf308": {"node_ids": ["d04e0866-60ee-43d1-a525-9ad00741f3a4"], "metadata": {}}, "9db741ab-7977-4105-99ae-a9b40331f13f": {"node_ids": ["a50cf1b4-a1e1-4bfb-b75c-74e8fc44daa2"], "metadata": {}}, "cc678df0-39cd-4d24-bd11-eebcfc6d93ee": {"node_ids": ["fa75de11-855a-40b7-80ac-84f99487b318"], "metadata": {}}, "9cc6ba0a-7485-45bf-b6d3-11755deb0074": {"node_ids": ["484e2100-c59f-49ef-ba33-58890b5fca81"], "metadata": {}}, "28752d88-f1ee-4769-9d2c-04f6c071531e": {"node_ids": ["54e89220-c675-4251-94c5-839e9d1aa936"], "metadata": {}}, "178ac2db-5328-4c07-9117-e680618c90b6": {"node_ids": ["ba95def9-9c31-47a5-b33d-2443c3b8beb6"], "metadata": {}}, "09e6d16b-5619-4673-8491-03aad3c0345c": {"node_ids": ["9c09c410-472d-4c55-9ce4-801ea41f8061"], "metadata": {}}, "d205ef17-5fd6-4fd5-8758-690657d7a26c": {"node_ids": ["916a877f-6df9-4a67-84bd-5cbe8dc1e86a"], "metadata": {}}, "fd5b59a8-fb93-46fb-a9d6-6fd65449fd3e": {"node_ids": ["d62aa50f-e95f-48c9-afbc-7ad7aa19f50e"], "metadata": {}}, "6aa859cb-7b47-4e93-9aff-93f2ccb4a438": {"node_ids": ["d26c6eaf-3dff-4614-bc2e-a2a3765de72d"], "metadata": {}}, "1d91fd71-871f-439e-aae3-668865c2877c": {"node_ids": ["eff23564-14c2-439b-a82b-eb2e18ef96bf"], "metadata": {}}, "3c21b796-a00a-4b86-9761-e00b5f48510b": {"node_ids": ["a01af1d1-a6b7-4603-a229-58e72efcfe59"], "metadata": {}}, "106efec1-3ef2-4b76-839a-ebf826fe5c4a": {"node_ids": ["5c4dfb8f-30c3-43ba-bbd1-ad783ced3fee"], "metadata": {}}, "175a6ecb-6ad6-4209-a404-5f54bfe21c40": {"node_ids": ["7b4e6fbb-d9f0-41d1-bb12-3e9c38b37225"], "metadata": {}}, "be5ee50d-3c6f-486d-9afd-f7a9c55c3bd7": {"node_ids": ["d4f0a0c1-6af9-4371-8f1c-6df39949b2ca"], "metadata": {}}, "589902ed-96c9-4256-bdb9-bbc7aabe4501": {"node_ids": ["668cc000-2d3a-4b9c-9139-61c68aa9558e"], "metadata": {}}, "9aa9a71f-a366-4736-b5bf-b505516c26cb": {"node_ids": ["a6c32c1d-a887-4823-91e2-2dc1ea1ed176"], "metadata": {}}, "8f6507b3-d760-4773-9eb0-e332421d168f": {"node_ids": ["65e5fb2f-6d1e-47c1-b0d3-f4d0ea754b9a"], "metadata": {}}, "daabe32d-5584-4aed-b965-d9965b947fb2": {"node_ids": ["839ec461-96d2-4c2f-808b-652bed91fdd4"], "metadata": {}}, "97669618-e781-4a79-90d2-450dbcf54ed9": {"node_ids": ["1d3b9109-cc9b-4291-b206-6f83e1469445"], "metadata": {}}, "d7cd43c4-6d9a-40a9-9d4c-727d70ab501d": {"node_ids": ["e557fc97-6fa9-4c17-a1bb-c7b479507ef5"], "metadata": {}}, "8d0c8c2a-b229-4f7a-8557-7fa286c9d10a": {"node_ids": ["51de55fe-fd42-4c76-ada7-a3559b5e8b81"], "metadata": {}}, "6a53f394-d6a2-4d6d-9f31-a27ed0a87769": {"node_ids": ["73441bc7-37a3-4a67-a354-03b023d9ea7b"], "metadata": {}}, "6c305455-6e96-4ecc-89dd-1df7efe41b81": {"node_ids": ["4f9abfcc-af30-4ba5-9227-9250eede43a6"], "metadata": {}}, "20b58948-1447-4af7-a9b4-ef6d96f7d96f": {"node_ids": ["2ab4505b-c335-4a09-8282-e844350b663a"], "metadata": {}}, "686eba91-277a-4d2f-9260-ed8f086c0c4d": {"node_ids": ["4b8cd255-79dd-4ddc-9fb9-e5cd75d2d468"], "metadata": {}}, "e156d715-8cce-4505-96be-1397e91a4a05": {"node_ids": ["5ab87346-3f17-49a9-b371-9d00fdd93449"], "metadata": {}}, "1558aa88-0e5d-4495-b32a-a1444e6a906a": {"node_ids": ["ae2282e1-fecd-4af3-9338-8aefb22552b9"], "metadata": {}}, "2e8969bc-2d98-4802-a852-1085671cd73a": {"node_ids": ["c37aa7c1-fb3d-4346-9447-4e7a390f9f44"], "metadata": {}}, "1b235e4f-4183-46b6-a70a-6b45762de10c": {"node_ids": ["df8fa25a-e356-4aef-a694-fd28da7c4f40"], "metadata": {}}, "b7ccbfe5-1077-46fd-bd7a-97c75464c57d": {"node_ids": ["6105b9d1-3ede-49ed-a13e-0572ae58dfa7"], "metadata": {}}, "c8a8c8c0-0e5b-49f3-ac78-7518e2f857ff": {"node_ids": ["7741b1e7-7351-46a0-a232-f7fdd1be55f8"], "metadata": {}}, "3df377e4-2b7b-499c-8836-6aa90bad93c7": {"node_ids": ["c76028cd-c520-4946-9e32-224cc07270bc"], "metadata": {}}, "d2c01d03-f7e2-439d-aea0-e477c8f3d24a": {"node_ids": ["ebc91681-6964-4d89-a75d-7e3dd21ebc5b"], "metadata": {}}, "a86087f2-7daf-4bd7-9031-3190974a8413": {"node_ids": ["4435053a-8fa8-4aca-b237-b0772d86e5c2"], "metadata": {}}, "d0078963-5e23-4c0b-8577-3b944b26768e": {"node_ids": ["1b6a9a1f-b01c-40fb-9c4b-63ff0717029f"], "metadata": {}}, "8140f84c-a6d0-485d-9794-22d42ef940c2": {"node_ids": ["93f9f162-30cd-4899-af89-5eb3add91ee1"], "metadata": {}}, "93124def-e3ef-47d3-a2fa-bd297bed6598": {"node_ids": ["3253646d-b4b2-4888-b337-df2b3ab08c5c"], "metadata": {}}, "496908fe-32dc-484e-8961-0434e121c9bc": {"node_ids": ["c500dd79-4810-40d4-a4c3-d87743bb41bd"], "metadata": {}}, "cffe4411-5928-4ffd-ad7d-390e81ae295a": {"node_ids": ["7df77f21-ee41-42e0-940c-20b634731c57"], "metadata": {}}, "87b9d72d-be33-406c-a36d-de7eb6375dd3": {"node_ids": ["e6564c4d-b1e2-446f-8bb9-f1a95de03f3a"], "metadata": {}}}}